{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-jodie-core-src-templates-project-query-tsx-content-file-path-content-projects-website-index-mdx-6cdeecd0b6aacdc4cbf2.js","mappings":"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","sources":["webpack://jodie/./content/projects/website/index.mdx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie-core/src/templates/project-query.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/seo.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/project.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/@lekoarts/gatsby-theme-jodie-core/components/project.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This was built using gatsby, initially being based off of a template theme: \", React.createElement(_components.a, {\n    href: \"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-jodie\"\n  }, \"https://github.com/LekoArts/gatsby-themes/tree/main/themes/gatsby-theme-jodie\"), \".\\r\\nThis framework was helpful for organizing all of the aspects of the website, especially as I had a lot of images across the website. This framework made it especially\\r\\nto create a static website to host online on github pages, which is where it resides to this day if you're viewing it.\"), \"\\n\", React.createElement(_components.p, null, \"Anyways, github here: \", React.createElement(_components.a, {\n    href: \"https://github.com/Landododo/Landododo.github.io\"\n  }, \"https://github.com/Landododo/Landododo.github.io\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/1108l/OneDrive/Desktop/website/landon-website/content/projects/website/index.mdx\";\nimport ProjectComponent, {Head} from \"../components/project\";\nProjectComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"1948567467\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype Props = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n}\n\nconst Seo = ({ title = ``, description = ``, pathname = ``, image = ``, children = null }: Props) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-jodie\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx, Heading } from \"theme-ui\"\nimport * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { transparentize } from \"polished\"\nimport { IGatsbyImageData, GatsbyImage } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type JodieProjectProps = {\n  project: {\n    excerpt: string\n    color: string\n    date: string\n    slug: string\n    title: string\n    shortTitle: string\n    category: string\n    cover: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n  images: {\n    nodes: {\n      name: string\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }[]\n  }\n}\n\nconst Project: React.FC<React.PropsWithChildren<PageProps<JodieProjectProps>>> = ({\n  data: { project, images },\n  children,\n}) => (\n  <Layout color={project.color || undefined}>\n    <div sx={{ variant: `content.project` }}>\n      <div sx={{ fontSize: 2, textTransform: `uppercase`, letterSpacing: `wider`, mb: 2 }}>{project.category}</div>\n      <Heading as=\"h1\" variant=\"styles.h1\" sx={{ mt: 0 }}>\n        {project.title}\n      </Heading>\n      <div sx={{ maxWidth: `70ch`, my: 4 }}>{children}</div>\n    </div>\n    <div sx={{ backgroundColor: transparentize(0.9, project.color) }}>\n      <div sx={{ variant: `content.imageList` }}>\n        {images.nodes.map((image) => (\n          <GatsbyImage key={image.name} alt={image.name} image={image.childImageSharp.gatsbyImageData} />\n        ))}\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default Project\n\nexport const Head: HeadFC<JodieProjectProps> = ({ data: { project }, location }) => (\n  <Seo\n    title={project.title}\n    description={project.excerpt}\n    pathname={location.pathname}\n    image={project.cover.childImageSharp.resize.src}\n  />\n)\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport Project, { Head, JodieProjectProps } from \"../../../components/project\"\n\nexport default function JodieCoreProject({ children, ...props }: PageProps<JodieProjectProps>) {\n  return <Project {...props}>{children}</Project>\n}\n\nexport { Head }\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","GatsbyMDXWrapper","ProjectComponent","GATSBY_COMPILED_MDX","_ref","title","description","pathname","image","children","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","withPrefix","data","project","images","jsx","Layout","color","undefined","sx","variant","fontSize","textTransform","letterSpacing","mb","category","Heading","as","mt","maxWidth","my","backgroundColor","transparentize","nodes","map","GatsbyImage","key","alt","childImageSharp","gatsbyImageData","Head","_ref2","location","Seo","excerpt","cover","resize","src","JodieCoreProject","Project"],"sourceRoot":""}