{"version":3,"file":"a1964a64591e2250f0744eb26dc664bfa50f9047-a799d2962562462d20e7.js","mappings":"gJAGA,MAAMA,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAA+B,KAAO,IAAIC,IAAIF,GAAf,GCzB/BG,EAAYC,GAAe,IAANA,EAAaC,KAAKC,GACvCC,EAAUC,IACZ,MAAMC,EAAQN,EAASE,KAAKK,MAAMF,EAAE,GAAIA,EAAE,KAC1C,OAAOG,EAAYF,IAEjBG,EAAkB,CACpBC,EAAG,EACHC,EAAG,EACHC,WAAY,EACZC,WAAY,EACZC,OAAQ,EACRC,OAAQ,EACRC,MAAQX,IAAOH,KAAKe,IAAIZ,EAAE,IAAMH,KAAKe,IAAIZ,EAAE,KAAO,EAClDD,SACAc,QAASd,EACTe,MAAQd,GAAML,EAASE,KAAKkB,KAAKf,EAAE,KACnCgB,MAAQhB,GAAML,EAASE,KAAKkB,KAAKf,EAAE,KACnCiB,KAAOjB,IAAOH,KAAKe,IAAIZ,EAAE,IAAMH,KAAKe,IAAIZ,EAAE,KAAO,GAE/CG,EAAeF,KACjBA,GAAgB,KACJ,IACRA,GAAS,KACNA,GAGLQ,EAAUT,GAAMH,KAAKqB,KAAKlB,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDU,EAAUV,GAAMH,KAAKqB,KAAKlB,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDmB,EAAkB,CACpBd,EAAG,GACHC,EAAG,GACHc,EAAG,GACHb,WAAY,GACZC,WAAY,GACZa,WAAY,GACZZ,SACAC,SACAC,MAAQX,IAAOS,EAAOT,GAAKU,EAAOV,IAAM,EACxCsB,QAAUtB,GAAMG,EAAYR,EAASE,KAAKK,MAAMF,EAAE,GAAIA,EAAE,MACxDuB,QAAUvB,GAAMG,EAAYR,EAASE,KAAKK,OAAOF,EAAE,GAAIA,EAAE,MACzDa,QAfYd,EAgBZA,OAhBYA,EAiBZe,MAAQd,GAAML,EAASE,KAAKkB,KAAKf,EAAE,KACnCgB,MAAQhB,GAAML,EAASE,KAAKkB,KAAKf,EAAE,KACnCiB,KAAOjB,IAAOH,KAAKe,IAAIZ,EAAE,IAAMH,KAAKe,IAAIZ,EAAE,KAAO,GAErD,SAASwB,EAAsBC,GAC3B,OAAOA,EAAKC,SAAS,SAAW,EAAI,CACxC,CACA,SAASC,EAAwBC,EAAWH,GACxC,IAAKG,GAA2B,SAAdA,EACd,OAAOJ,EAAsBC,GAEjC,MAAMI,EAAgBD,EAAUE,MAAM,gCACtC,IAAIC,EACAD,EACJ,GAAID,EACAE,EAAUZ,EACVW,EAAQD,MAEP,CACD,MAAMG,EAAgBJ,EAAUE,MAAM,8BACtCC,EAAU3B,EACV0B,EAAQE,CACZ,CACA,IAAKF,EACD,OAAON,EAAsBC,GAEjC,MAAMQ,EAAcF,EAAQN,GACtBS,EAASJ,EAAM,GAAGK,MAAM,KAAKC,IAAIC,GACvC,MAA8B,mBAAhBJ,EACRA,EAAYC,GACZA,EAAOD,EACjB,CAKA,SAASI,EAAyBC,GAC9B,OAAOC,WAAWD,EAAME,OAC5B,CChFA,MAAMC,EAAyBC,GAAWC,GAAuB,iBAARA,GAAoBA,EAAIC,WAAWF,GACtFG,EACQJ,EAAsB,MAC9BK,EACQL,EAAsB,UAC9BM,EAAsBT,KACAQ,EAAsBR,IAIvCU,EAAuBC,KAAKX,EAAMH,MAAM,MAAM,GAAGK,QAEtDQ,EAAyB,sFCP/B,SAASE,GAAwB,IAAEC,EAAG,KAAEC,EAAI,MAAEC,EAAK,OAAEC,IACjD,MAAO,CACHjD,EAAG,CAAEkD,IAAKH,EAAMI,IAAKH,GACrB/C,EAAG,CAAEiD,IAAKJ,EAAKK,IAAKF,GAE5B,CCWA,MAAMG,EAAY,CAACC,EAAMC,EAAIC,IAClBF,GAAQC,EAAKD,GAAQE,ECtBhC,SAASC,EAAgBlD,GACrB,YAAiBmD,IAAVnD,GAAiC,IAAVA,CAClC,CACA,SAASoD,GAAS,MAAEpD,EAAK,OAAEF,EAAM,OAAEC,IAC/B,OAASmD,EAAgBlD,KACpBkD,EAAgBpD,KAChBoD,EAAgBnD,EACzB,CACA,SAASsD,EAAa9B,GAClB,OAAQ6B,EAAS7B,IACb+B,EAAe/B,IACfA,EAAOd,GACPc,EAAOnC,QACPmC,EAAOZ,SACPY,EAAOX,SACPW,EAAOpB,OACPoB,EAAOlB,KACf,CACA,SAASiD,EAAe/B,GACpB,OAAOgC,EAAchC,EAAO7B,IAAM6D,EAAchC,EAAO5B,EAC3D,CACA,SAAS4D,EAAc5B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAAS6B,EAAWC,EAAOzD,EAAO0D,GAG9B,OAAOA,EADQ1D,GADYyD,EAAQC,EAGvC,CAIA,SAASC,EAAgBF,EAAOG,EAAW5D,EAAO0D,EAAaG,GAI3D,YAHiBV,IAAbU,IACAJ,EAAQD,EAAWC,EAAOI,EAAUH,IAEjCF,EAAWC,EAAOzD,EAAO0D,GAAeE,CACnD,CAIA,SAASE,EAAeC,EAAMH,EAAY,EAAG5D,EAAQ,EAAG0D,EAAaG,GACjEE,EAAKnB,IAAMe,EAAgBI,EAAKnB,IAAKgB,EAAW5D,EAAO0D,EAAaG,GACpEE,EAAKlB,IAAMc,EAAgBI,EAAKlB,IAAKe,EAAW5D,EAAO0D,EAAaG,EACxE,CAIA,SAASG,EAAcC,GAAK,EAAEvE,EAAC,EAAEC,IAC7BmE,EAAeG,EAAIvE,EAAGA,EAAEkE,UAAWlE,EAAEM,MAAON,EAAEgE,aAC9CI,EAAeG,EAAItE,EAAGA,EAAEiE,UAAWjE,EAAEK,MAAOL,EAAE+D,YAClD,CACA,MAAMQ,EAAsB,cACtBC,EAAsB,gBA6D5B,SAASC,EAAcL,EAAMM,GACzBN,EAAKnB,IAAMmB,EAAKnB,IAAMyB,EACtBN,EAAKlB,IAAMkB,EAAKlB,IAAMwB,CAC1B,CAMA,SAASC,EAAcP,EAAMQ,EAAeC,EAAWX,EAAUY,EAAa,IAG1EX,EAAeC,EAAMQ,EAAeC,EAFhB1B,EAAUiB,EAAKnB,IAAKmB,EAAKlB,IAAK4B,GAEUZ,EAChE,CAIA,SAASa,EAAaT,EAAKhD,GACvBqD,EAAcL,EAAIvE,EAAGuB,EAAUvB,EAAGuB,EAAUnB,OAAQmB,EAAUjB,MAAOiB,EAAU0D,SAC/EL,EAAcL,EAAItE,EAAGsB,EAAUtB,EAAGsB,EAAUlB,OAAQkB,EAAUjB,MAAOiB,EAAU2D,QACnF,CCjHA,SAASC,EAAmBC,EAAUC,GAClC,OAAOxC,EJeX,SAA4BkB,EAAOsB,GAC/B,IAAKA,EACD,OAAOtB,EACX,MAAMuB,EAAUD,EAAe,CAAErF,EAAG+D,EAAMhB,KAAM9C,EAAG8D,EAAMjB,MACnDyC,EAAcF,EAAe,CAAErF,EAAG+D,EAAMf,MAAO/C,EAAG8D,EAAMd,SAC9D,MAAO,CACHH,IAAKwC,EAAQrF,EACb8C,KAAMuC,EAAQtF,EACdiD,OAAQsC,EAAYtF,EACpB+C,MAAOuC,EAAYvF,EAE3B,CI1BmCwF,CAAmBJ,EAASK,wBAAyBJ,GACxF,CCHA,MAAMK,EAAiB,IAAIrG,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACGF,ICTDwG,EAAQ,CAACzC,EAAKC,EAAKxD,IACjBA,EAAIwD,EACGA,EACPxD,EAAIuD,EACGA,EACJvD,ECHLiG,EAAS,CACXhD,KAAOjD,GAAmB,iBAANA,EACpBkG,MAAO3D,WACPX,UAAY5B,GAAMA,GAEhBmG,EAAQ,IACPF,EACHrE,UAAY5B,GAAMgG,EAAM,EAAG,EAAGhG,IAE5BW,EAAQ,IACPsF,EACHG,QAAS,GCZPC,EAAkBC,IAAS,CAC7BrD,KAAOjD,GAAmB,iBAANA,GAAkBA,EAAEuG,SAASD,IAAiC,IAAxBtG,EAAEmC,MAAM,KAAKqE,OACvEN,MAAO3D,WACPX,UAAY5B,GAAM,GAAGA,IAAIsG,MAEvBG,EAAwBJ,EAAe,OACvCK,EAAwBL,EAAe,KACvCM,EAAmBN,EAAe,MAClCO,EAAmBP,EAAe,MAClCQ,EAAmBR,EAAe,MAClCS,EAAmC,MAAO,IACzCJ,EACHR,MAAQlG,GAAM0G,EAAQR,MAAMlG,GAAK,IACjC4B,UAAY5B,GAAM0G,EAAQ9E,UAAc,IAAJ5B,KAHC,GCRnC+G,EAAiB/G,GAAOgH,GAASA,EAAK/D,KAAKjD,GCK3CiH,EAAsB,CAAChB,EAAQU,EAAID,EAASD,EAASI,EAAID,ECLlD,CACT3D,KAAOjD,GAAY,SAANA,EACbkG,MAAQlG,GAAMA,IDOZkH,EAA0BlH,GAAMiH,EAAoBE,KAAKJ,EAAc/G,IET7E,MAAMoH,EAAqBpH,GAAM,+BAA+BiD,KAAKjD,GCS/DqH,GAEN,2DASA,SAASC,GAAiBC,EAASC,EAASC,EAAQ,GAEhD,MAAO/E,EAAOgF,GAVlB,SAA0BH,GACtB,MAAMzF,EAAQuF,GAAsBM,KAAKJ,GACzC,IAAKzF,EACD,MAAO,CAAC,GACZ,MAAO,CAAE8F,EAAQC,EAAQH,GAAY5F,EACrC,MAAO,CAAC,KAAK8F,GAAUC,IAAUH,EACrC,CAI8BI,CAAiBP,GAE3C,IAAK7E,EACD,OAEJ,MAAMqF,EAAWC,OAAOC,iBAAiBT,GAASU,iBAAiBxF,GACnE,GAAIqF,EAAU,CACV,MAAMI,EAAUJ,EAASvF,OACzB,OAAO4E,EAAkBe,GAAW5F,WAAW4F,GAAWA,CAC9D,CACA,OAAOpF,EAAmB2E,GACpBJ,GAAiBI,EAAUF,EAASC,EAAQ,GAC5CC,CACV,CCjCA,MAAMU,GAAiBpI,GAAMA,IAAMiG,GAAUjG,IAAM2G,EAC7C0B,GAAgB,IAAI3I,IAAI,CAAC,IAAK,IAAK,MACnC4I,GAAgC9I,EAAmB+I,OAAQ5F,IAAS0F,GAAcG,IAAI7F,IAY5F,MAAM8F,GAAmB,CAErBC,MAAO,EAAGrI,MAAOsI,cAAc,IAAKC,eAAe,OAAUvI,EAAEmD,IAAMnD,EAAEkD,IAAMhB,WAAWoG,GAAepG,WAAWqG,GAClHC,OAAQ,EAAGvI,MAAOwI,aAAa,IAAKC,gBAAgB,OAAUzI,EAAEkD,IAAMlD,EAAEiD,IAAMhB,WAAWuG,GAAcvG,WAAWwG,GAClH5F,IAAK,CAAC6F,GAAS7F,SAAUZ,WAAWY,GACpCC,KAAM,CAAC4F,GAAS5F,UAAWb,WAAWa,GACtCE,OAAQ,EAAGhD,MAAO6C,SAAUZ,WAAWY,IAAQ7C,EAAEkD,IAAMlD,EAAEiD,KACzDF,MAAO,EAAGhD,MAAO+C,UAAWb,WAAWa,IAAS/C,EAAEmD,IAAMnD,EAAEkD,KAE1DlD,EAAG,CAAC2I,GAASpH,eAAgBD,EAAwBC,EAAW,KAChEtB,EAAG,CAAC0I,GAASpH,eAAgBD,EAAwBC,EAAW,MAGpE6G,GAAiBlI,WAAakI,GAAiBpI,EAC/CoI,GAAiBjI,WAAaiI,GAAiBnI,EChC/C,MAAM2I,GAAQC,GAAQA,ECDhBC,GAAqB,CAAC,ECAtBC,GAAa,CACf,QACA,OACA,mBACA,YACA,SACA,YACA,SACA,cCREC,GAAc,CAChB/G,MAAO,KACPgH,qBAAsB,MCG1B,SAASC,GAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMC,EAAQ,CACVC,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmB,IAAON,GAAe,EACzCO,EAAQb,GAAWc,OAAO,CAACC,EAAKxH,KAClCwH,EAAIxH,GCbZ,SAA0B+G,EAAcU,GAKpC,IAAIC,EAAY,IAAI3K,IAChB4K,EAAY,IAAI5K,IAKhBqK,GAAe,EACfQ,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QACxB,IAAIC,EAAkB,CAClBb,MAAO,EACPC,UAAW,EACXC,cAAc,GAEdY,EAAW,EACf,SAASC,EAAgBC,GACjBL,EAAYhC,IAAIqC,KAChBC,EAAKC,SAASF,GACdnB,KAEJiB,IACAE,EAASH,EACb,CACA,MAAMI,EAAO,CAITC,SAAU,CAACF,EAAUG,GAAY,EAAOC,GAAY,KAChD,MACMC,EADoBD,GAAalB,EACLM,EAAYC,EAK9C,OAJIU,GACAR,EAAYW,IAAIN,GACfK,EAAM1C,IAAIqC,IACXK,EAAMC,IAAIN,GACPA,GAKXO,OAASP,IACLP,EAAUe,OAAOR,GACjBL,EAAYa,OAAOR,IAKvBS,QAAUC,IACNb,EAAkBa,EAMdxB,EACAQ,GAAiB,GAGrBR,GAAe,GACdM,EAAWC,GAAa,CAACA,EAAWD,GAErCA,EAAUmB,QAAQZ,GAIdR,GAAYf,GAAY/G,OACxB+G,GAAY/G,MAAMmJ,UAAUrB,GAAUsB,KAAKf,GAE/CA,EAAW,EAGXN,EAAUsB,QACV5B,GAAe,EACXQ,IACAA,GAAiB,EACjBO,EAAKQ,QAAQC,OAIzB,OAAOT,CACX,CD1EmBc,CAAiB5B,EAAkBP,EAAiB9G,OAAMmB,GAC9DqG,GACR,CAAC,IACE,MAAE0B,EAAK,KAAEC,EAAI,iBAAEC,EAAgB,UAAEC,EAAS,OAAEC,EAAM,UAAEC,EAAS,OAAEC,EAAM,WAAEC,GAAgBnC,EACvFoC,EAAe,KACjB,MAAMvC,EAAYX,GAAmBmD,gBAC/B1C,EAAME,UACNyC,YAAYC,MAClB9C,GAAe,EACVP,GAAmBmD,kBACpB1C,EAAMC,MAAQF,EACR,IAAO,GACP9J,KAAK2D,IAAI3D,KAAK0D,IAAIuG,EAAYF,EAAME,UAvBnC,IAuB2D,IAEtEF,EAAME,UAAYA,EAClBF,EAAMG,cAAe,EAErB8B,EAAMP,QAAQ1B,GACdkC,EAAKR,QAAQ1B,GACbmC,EAAiBT,QAAQ1B,GACzBoC,EAAUV,QAAQ1B,GAClBqC,EAAOX,QAAQ1B,GACfsC,EAAUZ,QAAQ1B,GAClBuC,EAAOb,QAAQ1B,GACfwC,EAAWd,QAAQ1B,GACnBA,EAAMG,cAAe,EACjBL,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkB6C,KAwB1B,MAAO,CAAEtB,SAdQ3B,GAAWc,OAAO,CAACC,EAAKxH,KACrC,MAAMmI,EAAOb,EAAMtH,GAMnB,OALAwH,EAAIxH,GAAO,CAAC2I,EAASN,GAAY,EAAOC,GAAY,KAC3CvB,IATTA,GAAe,EACfC,GAAoB,EACfC,EAAMG,cACPP,EAAkB6C,IAQXvB,EAAKC,SAASO,EAASN,EAAWC,IAEtCd,GACR,CAAC,GAMeiB,OALHE,IACZ,IAAK,IAAImB,EAAI,EAAGA,EAAIrD,GAAW5C,OAAQiG,IACnCxC,EAAMb,GAAWqD,IAAIrB,OAAOE,IAGT1B,QAAOK,QACtC,CEjEA,MAAQc,SAAU,GAAOK,OAAQsB,GAAa9C,MAAO2B,GAAWtB,MAAO0C,IAAgCpD,GAAqD,oBAA1BqD,sBAAwCA,sBAAwB3D,IAAM,GCClM4D,GAAY,IAAInN,IACtB,IAAIoN,IAAc,EACdC,IAAsB,EACtBC,IAAW,EACf,SAASC,KACL,GAAIF,GAAqB,CACrB,MAAMG,EAAqBC,MAAMzJ,KAAKmJ,IAAWtE,OAAQ6E,GAAaA,EAASC,kBACzEC,EAAoB,IAAI5N,IAAIwN,EAAmB9K,IAAKgL,GAAaA,EAAS5F,UAC1E+F,EAAsB,IAAIC,IAKhCF,EAAkB9B,QAAShE,IACvB,MAAMiG,ERVlB,SAAyCC,GACrC,MAAMD,EAAoB,GAQ1B,OAPAnF,GAA8BkD,QAAS7I,IACnC,MAAML,EAAQoL,EAAcC,SAAShL,QACvBmB,IAAVxB,IACAmL,EAAkB/B,KAAK,CAAC/I,EAAKL,EAAMsL,QACnCtL,EAAMuL,IAAIlL,EAAIC,WAAW,SAAW,EAAI,MAGzC6K,CACX,CQAsCK,CAAgCtG,GACrDiG,EAAkBjH,SAEvB+G,EAAoBM,IAAIrG,EAASiG,GACjCjG,EAAQ2E,YAGZe,EAAmB1B,QAAS4B,GAAaA,EAASW,uBAElDT,EAAkB9B,QAAShE,IACvBA,EAAQ2E,SACR,MAAM6B,EAAUT,EAAoBK,IAAIpG,GACpCwG,GACAA,EAAQxC,QAAQ,EAAE7I,EAAKL,MACnBkF,EAAQmG,SAAShL,IAAMkL,IAAIvL,OAKvC4K,EAAmB1B,QAAS4B,GAAaA,EAASa,mBAElDf,EAAmB1B,QAAS4B,SACUtJ,IAA9BsJ,EAASc,kBACTlG,OAAOmG,SAAS,EAAGf,EAASc,mBAGxC,CACAnB,IAAsB,EACtBD,IAAc,EACdD,GAAUrB,QAAS4B,GAAaA,EAASgB,SAASpB,KAClDH,GAAUlB,OACd,CACA,SAAS0C,KACLxB,GAAUrB,QAAS4B,IACfA,EAASkB,gBACLlB,EAASC,mBACTN,IAAsB,IAGlC,CAOA,MAAMwB,GACF,WAAAC,CAAYC,EAAqBC,EAAYjN,EAAMkN,EAAanH,EAASoH,GAAU,GAC/EC,KAAKjF,MAAQ,UAMbiF,KAAKD,SAAU,EAKfC,KAAKxB,kBAAmB,EACxBwB,KAAKJ,oBAAsB,IAAIA,GAC/BI,KAAKH,WAAaA,EAClBG,KAAKpN,KAAOA,EACZoN,KAAKF,YAAcA,EACnBE,KAAKrH,QAAUA,EACfqH,KAAKD,QAAUA,CACnB,CACA,eAAAE,GACID,KAAKjF,MAAQ,YACTiF,KAAKD,SACL/B,GAAU1B,IAAI0D,MACT/B,KACDA,IAAc,EACd,GAAMhB,KAAKuC,IACX,GAAMtC,iBAAiBkB,OAI3B4B,KAAKP,gBACLO,KAAKT,WAEb,CACA,aAAAE,GACI,MAAM,oBAAEG,EAAmB,KAAEhN,EAAI,QAAE+F,EAAO,YAAEmH,GAAgBE,KAE5D,GAA+B,OAA3BJ,EAAoB,GAAa,CACjC,MAAMM,EAAeJ,GAAaf,MAE5BoB,EAAgBP,EAAoBA,EAAoBjI,OAAS,GACvE,QAAqB1C,IAAjBiL,EACAN,EAAoB,GAAKM,OAExB,GAAIvH,GAAW/F,EAAM,CACtB,MAAMwN,EAAczH,EAAQ0H,UAAUzN,EAAMuN,GACxCC,UACAR,EAAoB,GAAKQ,EAEjC,MAC+BnL,IAA3B2K,EAAoB,KACpBA,EAAoB,GAAKO,GAEzBL,QAAgC7K,IAAjBiL,GACfJ,EAAYd,IAAIY,EAAoB,GAE5C,EC1HR,SAAuBU,GACnB,IAAK,IAAI1C,EAAI,EAAGA,EAAI0C,EAAU3I,OAAQiG,IAClC0C,EAAU1C,KAAO0C,EAAU1C,GAAK0C,EAAU1C,EAAI,GAEtD,CDuHQ2C,CAAcX,EAClB,CACA,gBAAAY,GAAqB,CACrB,mBAAAtB,GAAwB,CACxB,eAAAuB,GAAoB,CACpB,eAAArB,GAAoB,CACpB,QAAAG,CAASmB,GAAmB,GACxBV,KAAKjF,MAAQ,WACbiF,KAAKH,WAAWG,KAAKJ,oBAAqBI,KAAKG,cAAeO,GAC9D1C,GAAUxB,OAAOwD,KACrB,CACA,MAAAzD,GACuB,cAAfyD,KAAKjF,QACLiD,GAAUxB,OAAOwD,MACjBA,KAAKjF,MAAQ,UAErB,CACA,MAAA4F,GACuB,YAAfX,KAAKjF,OACLiF,KAAKC,iBACb,EE5IJ,MAAMW,GAAqBzP,GAAM,cAAciD,KAAKjD,GCDpD,SAAS0P,GAAOpN,GACZ,MAAqB,iBAAVA,EACU,IAAVA,EAEQ,OAAVA,IACY,SAAVA,GAA8B,MAAVA,GAAiBmN,GAAkBnN,GAKtE,CCVA,MAAMqN,GAAY3P,GAAMH,KAAK+P,MAAU,IAAJ5P,GAAc,ICF3C6P,GAAa,8BCAnB,MAAMC,GAAmB,sHCQnBC,GAAgB,CAAC/I,EAAMgJ,IAAchQ,GAChCiQ,QAAsB,iBAANjQ,GACnB8P,GAAiB7M,KAAKjD,IACtBA,EAAE4C,WAAWoE,IACZgJ,ICZT,SAAmBhQ,GACf,OAAY,MAALA,CACX,CDWakQ,CAAUlQ,IACXmQ,OAAOC,UAAUC,eAAeC,KAAKtQ,EAAGgQ,IAE9CO,GAAa,CAACC,EAAOC,EAAOC,IAAW1Q,IACzC,GAAiB,iBAANA,EACP,OAAOA,EACX,MAAO2Q,EAAGC,EAAGC,EAAG1K,GAASnG,EAAE8B,MAAM+N,IACjC,MAAO,CACH,CAACW,GAAQjO,WAAWoO,GACpB,CAACF,GAAQlO,WAAWqO,GACpB,CAACF,GAAQnO,WAAWsO,GACpB1K,WAAiBrC,IAAVqC,EAAsB5D,WAAW4D,GAAS,IElBnD2K,GAAU,IACT7K,EACHrE,UAAY5B,GAAMH,KAAK+P,MAHN,CAAC5P,GAAMgG,EAAM,EAAG,IAAKhG,GAGT+Q,CAAa/Q,KAExCgR,GAAO,CACT/N,KAAoB8M,GAAc,MAAO,OACzC7J,MAAqBqK,GAAW,MAAO,QAAS,QAChD3O,UAAW,EAAGqP,MAAKC,QAAOC,OAAMhL,MAAOiL,EAAU,KAAQ,QACrDN,GAAQlP,UAAUqP,GAClB,KACAH,GAAQlP,UAAUsP,GAClB,KACAJ,GAAQlP,UAAUuP,GAClB,KACAxB,GAASxJ,EAAMvE,UAAUwP,IACzB,KCYR,MAAMC,GAAM,CACRpO,KAAoB8M,GAAc,KAClC7J,MAhCJ,SAAkBlG,GACd,IAAIsR,EAAI,GACJC,EAAI,GACJX,EAAI,GACJD,EAAI,GAmBR,OAjBI3Q,EAAEwG,OAAS,GACX8K,EAAItR,EAAEwR,UAAU,EAAG,GACnBD,EAAIvR,EAAEwR,UAAU,EAAG,GACnBZ,EAAI5Q,EAAEwR,UAAU,EAAG,GACnBb,EAAI3Q,EAAEwR,UAAU,EAAG,KAInBF,EAAItR,EAAEwR,UAAU,EAAG,GACnBD,EAAIvR,EAAEwR,UAAU,EAAG,GACnBZ,EAAI5Q,EAAEwR,UAAU,EAAG,GACnBb,EAAI3Q,EAAEwR,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACLX,GAAKA,EACLD,GAAKA,GAEF,CACHM,IAAKQ,SAASH,EAAG,IACjBJ,MAAOO,SAASF,EAAG,IACnBJ,KAAMM,SAASb,EAAG,IAClBzK,MAAOwK,EAAIc,SAASd,EAAG,IAAM,IAAM,EAE3C,EAII/O,UAAWoP,GAAKpP,WC/Bd8P,GAAO,CACTzO,KAAoB8M,GAAc,MAAO,OACzC7J,MAAqBqK,GAAW,MAAO,aAAc,aACrD3O,UAAW,EAAG+P,MAAKC,aAAYC,YAAW1L,MAAOiL,EAAU,KAC/C,QACJvR,KAAK+P,MAAM+B,GACX,KACAjL,EAAQ9E,UAAU+N,GAASiC,IAC3B,KACAlL,EAAQ9E,UAAU+N,GAASkC,IAC3B,KACAlC,GAASxJ,EAAMvE,UAAUwP,IACzB,KCbNU,GAAQ,CACV7O,KAAOjD,GAAMgR,GAAK/N,KAAKjD,IAAMqR,GAAIpO,KAAKjD,IAAM0R,GAAKzO,KAAKjD,GACtDkG,MAAQlG,GACAgR,GAAK/N,KAAKjD,GACHgR,GAAK9K,MAAMlG,GAEb0R,GAAKzO,KAAKjD,GACR0R,GAAKxL,MAAMlG,GAGXqR,GAAInL,MAAMlG,GAGzB4B,UAAY5B,GACY,iBAANA,EACRA,EACAA,EAAEqQ,eAAe,OACbW,GAAKpP,UAAU5B,GACf0R,GAAK9P,UAAU5B,GAE7B+R,kBAAoB/R,IAChB,MAAMgS,EAASF,GAAM5L,MAAMlG,GAE3B,OADAgS,EAAO7L,MAAQ,EACR2L,GAAMlQ,UAAUoQ,KC3BzBC,GAAa,qHCYnB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,kOACrB,SAASC,GAAoB/P,GACzB,MAAMgQ,EAAgBhQ,EAAMiQ,WACtBrQ,EAAS,GACTsQ,EAAU,CACZV,MAAO,GACP7L,OAAQ,GACRwM,IAAK,IAEHC,EAAQ,GACd,IAAIjG,EAAI,EACR,MAmBMtK,EAnBYmQ,EAAcK,QAAQP,GAAeQ,IAC/Cd,GAAM7O,KAAK2P,IACXJ,EAAQV,MAAMpG,KAAKe,GACnBiG,EAAMhH,KAAKyG,IACXjQ,EAAOwJ,KAAKoG,GAAM5L,MAAM0M,KAEnBA,EAAYhQ,WApBF,SAqBf4P,EAAQC,IAAI/G,KAAKe,GACjBiG,EAAMhH,KAvBA,OAwBNxJ,EAAOwJ,KAAKkH,KAGZJ,EAAQvM,OAAOyF,KAAKe,GACpBiG,EAAMhH,KAAKwG,IACXhQ,EAAOwJ,KAAKnJ,WAAWqQ,OAEzBnG,EA7BU,QAgCQtK,MAhCR,OAiChB,MAAO,CAAED,SAAQC,QAAOqQ,UAASE,QACrC,CACA,SAASG,GAAkB7S,GACvB,OAAOqS,GAAoBrS,GAAGkC,MAClC,CACA,SAAS4Q,GAAkBC,GACvB,MAAM,MAAE5Q,EAAK,MAAEuQ,GAAUL,GAAoBU,GACvCC,EAAc7Q,EAAMqE,OAC1B,OAAQxG,IACJ,IAAIiT,EAAS,GACb,IAAK,IAAIxG,EAAI,EAAGA,EAAIuG,EAAavG,IAE7B,GADAwG,GAAU9Q,EAAMsK,QACH3I,IAAT9D,EAAEyM,GAAkB,CACpB,MAAMzF,EAAO0L,EAAMjG,GAEfwG,GADAjM,IAASkL,GACCvC,GAAS3P,EAAEyM,IAEhBzF,IAASmL,GACJL,GAAMlQ,UAAU5B,EAAEyM,IAGlBzM,EAAEyM,EAEpB,CAEJ,OAAOwG,EAEf,CACA,MAAMC,GAAwBlT,GAAmB,iBAANA,EAAiB,EAAI8R,GAAM7O,KAAKjD,GAAK8R,GAAMC,kBAAkB/R,GAAKA,EAM7G,MAAMmT,GAAU,CACZlQ,KA/EJ,SAAcjD,GACV,OAAQoT,MAAMpT,IACG,iBAANA,IACNA,EAAE8B,MAAM+N,KAAarJ,QAAU,IAC3BxG,EAAE8B,MAAMmQ,KAAazL,QAAU,GAChC,CACZ,EA0EIN,MAAO2M,GACPC,qBACAf,kBATJ,SAA2B/R,GACvB,MAAMgS,EAASa,GAAkB7S,GAEjC,OADoB8S,GAAkB9S,EAC/BqT,CAAYrB,EAAO5P,IAAI8Q,IAClC,GC5EMI,GAAc,IAAI5T,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS6T,GAAmBvT,GACxB,MAAOyB,EAAMa,GAAStC,EAAEwT,MAAM,GAAI,GAAGrR,MAAM,KAC3C,GAAa,gBAATV,EACA,OAAOzB,EACX,MAAOiG,GAAU3D,EAAMR,MAAM+N,KAAe,GAC5C,IAAK5J,EACD,OAAOjG,EACX,MAAMsG,EAAOhE,EAAMqQ,QAAQ1M,EAAQ,IACnC,IAAIwN,EAAeH,GAAY9K,IAAI/G,GAAQ,EAAI,EAG/C,OAFIwE,IAAW3D,IACXmR,GAAgB,KACbhS,EAAO,IAAMgS,EAAenN,EAAO,GAC9C,CACA,MAAMoN,GAAgB,uBAChBnL,GAAS,IACR4K,GACHpB,kBAAoB/R,IAChB,MAAM2T,EAAY3T,EAAE8B,MAAM4R,IAC1B,OAAOC,EAAYA,EAAUvR,IAAImR,IAAoBK,KAAK,KAAO5T,ICvBnE,GAAM,IACLiG,EACHrE,UAAW/B,KAAK+P,OCCdiE,GAAmB,CAErBC,YAAanN,EACboN,eAAgBpN,EAChBqN,iBAAkBrN,EAClBsN,kBAAmBtN,EACnBuN,gBAAiBvN,EACjBwN,aAAcxN,EACdyN,OAAQzN,EACR0N,oBAAqB1N,EACrB2N,qBAAsB3N,EACtB4N,wBAAyB5N,EACzB6N,uBAAwB7N,EAExB+B,MAAO/B,EACP8N,SAAU9N,EACVkC,OAAQlC,EACR+N,UAAW/N,EACXxD,IAAKwD,EACLtD,MAAOsD,EACPrD,OAAQqD,EACRvD,KAAMuD,EAENgO,QAAShO,EACTmC,WAAYnC,EACZiC,aAAcjC,EACdoC,cAAepC,EACfgC,YAAahC,EACbiO,OAAQjO,EACRkO,UAAWlO,EACXmO,YAAanO,EACboO,aAAcpO,EACdqO,WAAYrO,EAEZsO,oBAAqBtO,EACrBuO,oBAAqBvO,KCrCG,CACxB5G,OAAQ0G,EACRnF,QAASmF,EACTlF,QAASkF,EACT5F,QAAS4F,EACT9F,MAAK,EACLF,OAAQE,EACRD,OAAQC,EACRwU,OAAQxU,EACRM,KAAMwF,EACN3F,MAAO2F,EACPzF,MAAOyF,EACPzB,SAAU2B,EACVpG,WAAYoG,EACZnG,WAAYmG,EACZtF,WAAYsF,EACZtG,EAAGsG,EACHrG,EAAGqG,EACHvF,EAAGuF,EACHyO,YAAazO,EACb0O,qBAAsB1O,EACtB2O,QAASnP,EACTb,QAASwB,EACTvB,QAASuB,EACTyO,QAAS5O,GDeT6O,OAAQ,GAERC,YAAatP,EACbuP,cAAevP,EACfwP,WAAY,IEvCVC,GAAoB,IACnB/B,GAEH/B,MAAK,GACL+D,gBAAiB/D,GACjBgE,aAAchE,GACdiE,KAAMjE,GACNkE,OAAQlE,GAERmE,YAAanE,GACboE,eAAgBpE,GAChBqE,iBAAkBrE,GAClBsE,kBAAmBtE,GACnBuE,gBAAiBvE,GACjBvJ,OAAM,GACN+N,aAAc/N,IAKZgO,GAAuB5T,GAAQiT,GAAkBjT,GCvBvD,SAAS,GAAkBA,EAAKL,GAC5B,IAAIkU,EAAmBD,GAAoB5T,GAI3C,OAHI6T,IAAqBjO,KACrBiO,EAAmBrD,IAEhBqD,EAAiBzE,kBAClByE,EAAiBzE,kBAAkBzP,QACnCwB,CACV,CCHA,MAAM2S,GAAmB,IAAI/W,IAAI,CAAC,OAAQ,OAAQ,MCAlD,MAAMgX,WAA6BnI,GAC/B,WAAAC,CAAYC,EAAqBC,EAAYjN,EAAMkN,EAAanH,GAC5DmP,MAAMlI,EAAqBC,EAAYjN,EAAMkN,EAAanH,GAAS,EACvE,CACA,aAAA8G,GACI,MAAM,oBAAEG,EAAmB,QAAEjH,EAAO,KAAE/F,GAASoN,KAC/C,IAAKrH,IAAYA,EAAQD,QACrB,OACJoP,MAAMrI,gBAIN,IAAK,IAAI7B,EAAI,EAAGA,EAAIgC,EAAoBjI,OAAQiG,IAAK,CACjD,IAAImK,EAAWnI,EAAoBhC,GACnC,GAAwB,iBAAbmK,IACPA,EAAWA,EAASpU,OAChBO,EAAmB6T,IAAW,CAC9B,MAAM7O,EAAWT,GAAiBsP,EAAUpP,EAAQD,cACnCzD,IAAbiE,IACA0G,EAAoBhC,GAAK1E,GAEzB0E,IAAMgC,EAAoBjI,OAAS,IACnCqI,KAAKG,cAAgB4H,EAE7B,CAER,CAaA,GAPA/H,KAAKgI,wBAOA9Q,EAAeyC,IAAI/G,IAAwC,IAA/BgN,EAAoBjI,OACjD,OAEJ,MAAOsQ,EAAQC,GAAUtI,EACnBuI,EAAa9P,EAAuB4P,GACpCG,EAAa/P,EAAuB6P,GAI1C,GAAIC,IAAeC,EAMnB,GAAI7O,GAAc4O,IAAe5O,GAAc6O,GAC3C,IAAK,IAAIxK,EAAI,EAAGA,EAAIgC,EAAoBjI,OAAQiG,IAAK,CACjD,MAAMnK,EAAQmM,EAAoBhC,GACb,iBAAVnK,IACPmM,EAAoBhC,GAAKlK,WAAWD,GAE5C,MAEKmG,GAAiBhH,KAItBoN,KAAKxB,kBAAmB,EAEhC,CACA,oBAAAwJ,GACI,MAAM,oBAAEpI,EAAmB,KAAEhN,GAASoN,KAChCqI,EAAsB,GAC5B,IAAK,IAAIzK,EAAI,EAAGA,EAAIgC,EAAoBjI,OAAQiG,KACb,OAA3BgC,EAAoBhC,IACpBiD,GAAOjB,EAAoBhC,MAC3ByK,EAAoBxL,KAAKe,GAG7ByK,EAAoB1Q,QD7EhC,SAAqCiI,EAAqByI,EAAqBzV,GAC3E,IACI0V,EADA1K,EAAI,EAER,KAAOA,EAAIgC,EAAoBjI,SAAW2Q,GAAoB,CAC1D,MAAMP,EAAWnI,EAAoBhC,GACb,iBAAbmK,IACNH,GAAiBjO,IAAIoO,IACtBvE,GAAoBuE,GAAU1U,OAAOsE,SACrC2Q,EAAqB1I,EAAoBhC,IAE7CA,GACJ,CACA,GAAI0K,GAAsB1V,EACtB,IAAK,MAAM2V,KAAaF,EACpBzI,EAAoB2I,GAAa,GAAkB3V,EAAM0V,EAGrE,CC6DYE,CAA4B5I,EAAqByI,EAAqBzV,EAE9E,CACA,mBAAAsM,GACI,MAAM,QAAEvG,EAAO,oBAAEiH,EAAmB,KAAEhN,GAASoN,KAC/C,IAAKrH,IAAYA,EAAQD,QACrB,OACS,WAAT9F,IACAoN,KAAKX,iBAAmBlG,OAAOsP,aAEnCzI,KAAK0I,eAAiB9O,GAAiBhH,GAAM+F,EAAQhC,qBAAsBwC,OAAOC,iBAAiBT,EAAQD,UAC3GkH,EAAoB,GAAKI,KAAK0I,eAE9B,MAAMC,EAAkB/I,EAAoBA,EAAoBjI,OAAS,QACjD1C,IAApB0T,GACAhQ,EAAQmG,SAASlM,EAAM+V,GAAiBC,KAAKD,GAAiB,EAEtE,CACA,eAAAvJ,GACI,MAAM,QAAEzG,EAAO,KAAE/F,EAAI,oBAAEgN,GAAwBI,KAC/C,IAAKrH,IAAYA,EAAQD,QACrB,OACJ,MAAMjF,EAAQkF,EAAQmG,SAASlM,GAC/Ba,GAASA,EAAMmV,KAAK5I,KAAK0I,gBAAgB,GACzC,MAAMG,EAAqBjJ,EAAoBjI,OAAS,EAClDwI,EAAgBP,EAAoBiJ,GAC1CjJ,EAAoBiJ,GAAsBjP,GAAiBhH,GAAM+F,EAAQhC,qBAAsBwC,OAAOC,iBAAiBT,EAAQD,UACzG,OAAlByH,QAAiDlL,IAAvB+K,KAAKG,gBAC/BH,KAAKG,cAAgBA,GAGrBH,KAAKpB,mBAAmBjH,QACxBqI,KAAKpB,kBAAkBjC,QAAQ,EAAEmM,EAAoBC,MACjDpQ,EACKmG,SAASgK,GACT9J,IAAI+J,KAGjB/I,KAAKgI,sBACT,EC/HJ,MAAMgB,GAAiBvV,GAAU2N,QAAQ3N,GAASA,EAAMwV,aCGxD,IAAItL,GACJ,SAASuL,KACLvL,QAAM1I,CACV,CASA,MAAMkU,GAAO,CACTxL,IAAK,UACW1I,IAAR0I,IACAwL,GAAKnK,IAAItC,GAAUxB,cAAgBZ,GAAmBmD,gBAChDf,GAAUzB,UACVyC,YAAYC,OAEfA,IAEXqB,IAAMoK,IACFzL,GAAMyL,EACNC,eAAeH,MC1BvB,SAASI,GAAcC,EAAKC,IACG,IAAvBD,EAAIE,QAAQD,IACZD,EAAI1M,KAAK2M,EACjB,CACA,SAASE,GAAWH,EAAKC,GACrB,MAAMG,EAAQJ,EAAIE,QAAQD,GACtBG,GAAS,GACTJ,EAAIK,OAAOD,EAAO,EAC1B,CCNA,MAAME,GACF,WAAAlK,GACIK,KAAK8J,cAAgB,EACzB,CACA,GAAAxN,CAAIyN,GAEA,OADAT,GAActJ,KAAK8J,cAAeC,GAC3B,IAAML,GAAW1J,KAAK8J,cAAeC,EAChD,CACA,MAAAC,CAAOlI,EAAGC,EAAGC,GACT,MAAMiI,EAAmBjK,KAAK8J,cAAcnS,OAC5C,GAAKsS,EAEL,GAAyB,IAArBA,EAIAjK,KAAK8J,cAAc,GAAGhI,EAAGC,EAAGC,QAG5B,IAAK,IAAIpE,EAAI,EAAGA,EAAIqM,EAAkBrM,IAAK,CAKvC,MAAMmM,EAAU/J,KAAK8J,cAAclM,GACnCmM,GAAWA,EAAQjI,EAAGC,EAAGC,EAC7B,CAER,CACA,OAAAkI,GACI,OAAOlK,KAAK8J,cAAcnS,MAC9B,CACA,KAAAmF,GACIkD,KAAK8J,cAAcnS,OAAS,CAChC,EC9BJ,SAASwS,GAAkBC,EAAUC,GACjC,OAAOA,EAAgBD,GAAY,IAAOC,GAAiB,CAC/D,CCAA,MAIMC,GAAsB,CACxB5R,aAASzD,GAOb,MAAMsV,GAOF,WAAA5K,CAAY6K,EAAMC,EAAU,CAAC,GAQzBzK,KAAK0K,iBAAmB,KAIxB1K,KAAK2K,OAAS,CAAC,EACf3K,KAAK4K,gBAAkB,CAACzZ,EAAGmM,GAAS,KAChC,MAAMuN,EAAc1B,GAAKxL,MAYzB,GANIqC,KAAK8K,YAAcD,GACnB7K,KAAK+K,oBAET/K,KAAKgL,KAAOhL,KAAKtH,QACjBsH,KAAKiL,WAAW9Z,GAEZ6O,KAAKtH,UAAYsH,KAAKgL,OACtBhL,KAAK2K,OAAOO,QAAQlB,OAAOhK,KAAKtH,SAC5BsH,KAAKmL,YACL,IAAK,MAAMC,KAAapL,KAAKmL,WACzBC,EAAUC,QAKlB/N,GACA0C,KAAK2K,OAAOW,eAAetB,OAAOhK,KAAKtH,UAG/CsH,KAAKuL,aAAc,EACnBvL,KAAKiL,WAAWT,GAChBxK,KAAKwL,MAAQf,EAAQe,KACzB,CACA,UAAAP,CAAWvS,GA7DC,IAACjF,EA8DTuM,KAAKtH,QAAUA,EACfsH,KAAK8K,UAAY3B,GAAKxL,MACQ,OAA1BqC,KAAK0K,uBAAyCzV,IAAZyD,IAClCsH,KAAK0K,kBAjEAjX,EAiE2BuM,KAAKtH,SAhErC6L,MAAM7Q,WAAWD,KAkEzB,CACA,iBAAAsX,CAAkBU,EAAiBzL,KAAKtH,SACpCsH,KAAKyL,eAAiBA,EACtBzL,KAAK0L,cAAgB1L,KAAK8K,SAC9B,CAyCA,QAAAa,CAASC,GAIL,OAAO5L,KAAK6L,GAAG,SAAUD,EAC7B,CACA,EAAAC,CAAGC,EAAW9P,GACLgE,KAAK2K,OAAOmB,KACb9L,KAAK2K,OAAOmB,GAAa,IAAIjC,IAEjC,MAAMkC,EAAc/L,KAAK2K,OAAOmB,GAAWxP,IAAIN,GAC/C,MAAkB,WAAd8P,EACO,KACHC,IAKA,GAAM9O,KAAK,KACF+C,KAAK2K,OAAOO,OAAOhB,WACpBlK,KAAKgM,UAKdD,CACX,CACA,cAAAE,GACI,IAAK,MAAMC,KAAiBlM,KAAK2K,OAC7B3K,KAAK2K,OAAOuB,GAAepP,OAEnC,CAIA,MAAAqP,CAAOC,EAAeC,GAClBrM,KAAKoM,cAAgBA,EACrBpM,KAAKqM,kBAAoBA,CAC7B,CAgBA,GAAArN,CAAI7N,EAAGmM,GAAS,GACPA,GAAW0C,KAAKoM,cAIjBpM,KAAKoM,cAAcjb,EAAG6O,KAAK4K,iBAH3B5K,KAAK4K,gBAAgBzZ,EAAGmM,EAKhC,CACA,eAAAgP,CAAgBtB,EAAMtS,EAASsC,GAC3BgF,KAAKhB,IAAItG,GACTsH,KAAKgL,UAAO/V,EACZ+K,KAAKyL,eAAiBT,EACtBhL,KAAK0L,cAAgB1L,KAAK8K,UAAY9P,CAC1C,CAKA,IAAA4N,CAAKzX,EAAGob,GAAe,GACnBvM,KAAK4K,gBAAgBzZ,GACrB6O,KAAKgL,KAAO7Z,EACZ6O,KAAK0L,cAAgB1L,KAAKyL,oBAAiBxW,EAC3CsX,GAAgBvM,KAAKgM,OACjBhM,KAAKqM,mBACLrM,KAAKqM,mBACb,CACA,KAAAhB,GACIrL,KAAK2K,OAAOO,QAAQlB,OAAOhK,KAAKtH,QACpC,CACA,YAAA8T,CAAapB,GACJpL,KAAKmL,aACNnL,KAAKmL,WAAa,IAAIta,KAE1BmP,KAAKmL,WAAW7O,IAAI8O,EACxB,CACA,eAAAqB,CAAgBrB,GACRpL,KAAKmL,YACLnL,KAAKmL,WAAW3O,OAAO4O,EAE/B,CAQA,GAAArM,GAII,OAHIuL,GAAoB5R,SACpB4R,GAAoB5R,QAAQmE,KAAKmD,MAE9BA,KAAKtH,OAChB,CAIA,WAAAgU,GACI,OAAO1M,KAAKgL,IAChB,CAQA,WAAA/B,GACI,MAAM4B,EAAc1B,GAAKxL,MACzB,IAAKqC,KAAK0K,uBACkBzV,IAAxB+K,KAAKyL,gBACLZ,EAAc7K,KAAK8K,UA7OJ,GA8Of,OAAO,EAEX,MAAM9P,EAAQhK,KAAK0D,IAAIsL,KAAK8K,UAAY9K,KAAK0L,cAhP1B,IAkPnB,OAAOvB,GAAkBzW,WAAWsM,KAAKtH,SACrChF,WAAWsM,KAAKyL,gBAAiBzQ,EACzC,CAWA,KAAA2R,CAAMC,GAEF,OADA5M,KAAKgM,OACE,IAAIa,QAASC,IAChB9M,KAAKuL,aAAc,EACnBvL,KAAK+M,UAAYH,EAAeE,GAC5B9M,KAAK2K,OAAOqC,gBACZhN,KAAK2K,OAAOqC,eAAehD,WAEhCiD,KAAK,KACAjN,KAAK2K,OAAOuC,mBACZlN,KAAK2K,OAAOuC,kBAAkBlD,SAElChK,KAAKmN,kBAEb,CAMA,IAAAnB,GACQhM,KAAK+M,YACL/M,KAAK+M,UAAUf,OACXhM,KAAK2K,OAAOyC,iBACZpN,KAAK2K,OAAOyC,gBAAgBpD,UAGpChK,KAAKmN,gBACT,CAMA,WAAAE,GACI,QAASrN,KAAK+M,SAClB,CACA,cAAAI,UACWnN,KAAK+M,SAChB,CAUA,OAAAO,GACItN,KAAKmL,YAAYrO,QACjBkD,KAAK2K,OAAO2C,SAAStD,SACrBhK,KAAKiM,iBACLjM,KAAKgM,OACDhM,KAAKqM,mBACLrM,KAAKqM,mBAEb,EAEJ,SAASvM,GAAY0K,EAAMC,GACvB,OAAO,IAAIF,GAAYC,EAAMC,EACjC,CC5TA,MAAM8C,GAAa,IAAInV,EAAqB6K,GAAOqB,KCN3CpI,SAAUsR,GAAWjR,OAAQkR,IACrB/S,GAAoB2O,gBAAgB,GCH9CqE,GAAe,CACjBX,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJY,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,GAAqB,CAAC,EAC5B,IAAK,MAAMra,MAAO4Z,GACdS,GAAmBra,IAAO,CACtBsa,UAAYC,GAAUX,GAAa5Z,IAAKwa,KAAM1b,KAAWyb,EAAMzb,KCvBvE,MAWM2b,GAAY,KAAM,CACpB/c,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,K,eCTzC,MAAM6Z,GAAuB,CAAE9V,QAAS,MAClC+V,GAA2B,CAAE/V,SAAS,GCF5C,MAAMgW,GAAqB,IAAIC,QCA/B,SAASC,GAAoBzd,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAEwb,KACjB,CCDA,SAASkC,GAAe1d,GACpB,MAAoB,iBAANA,GAAkBmN,MAAMwQ,QAAQ3d,EAClD,CCLA,MAAM4d,GAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,GAAe,CAAC,aAAcD,ICLpC,SAASE,GAAsBZ,GAC3B,OAAQO,GAAoBP,EAAMa,UAC9BF,GAAaV,KAAM1b,GAASic,GAAeR,EAAMzb,IACzD,CACA,SAASuc,GAAcd,GACnB,OAAOjN,QAAQ6N,GAAsBZ,IAAUA,EAAMe,SACzD,CCVA,SAASC,GAAcxQ,GACnB,MAAM9D,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJA8D,GAAexL,OAAOsJ,QAAQ,CAAClJ,EAAOK,KAClCiH,EAAM,GAAGjH,GAAOL,EAAMsL,MACtBhE,EAAM,GAAGjH,GAAOL,EAAMwV,gBAEnBlO,CACX,CACA,SAASuU,GAAwBjB,EAAOkB,EAAYC,EAAQ3Q,GAIxD,GAA0B,mBAAf0Q,EAA2B,CAClC,MAAO7W,EAAS0R,GAAYiF,GAAcxQ,GAC1C0Q,EAAaA,OAAsBta,IAAXua,EAAuBA,EAASnB,EAAMmB,OAAQ9W,EAAS0R,EACnF,CAaA,GAR0B,iBAAfmF,IACPA,EAAalB,EAAMe,UAAYf,EAAMe,SAASG,IAOxB,mBAAfA,EAA2B,CAClC,MAAO7W,EAAS0R,GAAYiF,GAAcxQ,GAC1C0Q,EAAaA,OAAsBta,IAAXua,EAAuBA,EAASnB,EAAMmB,OAAQ9W,EAAS0R,EACnF,CACA,OAAOmF,CACX,CCtBA,MAAME,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQF,2BAAAC,CAA4BC,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACA,WAAAnQ,EAAY,OAAEoQ,EAAM,MAAE1B,EAAK,gBAAE2B,EAAe,oBAAEC,EAAmB,sBAAEC,EAAqB,YAAEC,GAAgB1F,EAAU,CAAC,GAKjHzK,KAAKtH,QAAU,KAIfsH,KAAKoQ,SAAW,IAAIvf,IAIpBmP,KAAKmP,eAAgB,EACrBnP,KAAKiP,uBAAwB,EAQ7BjP,KAAKqQ,mBAAqB,KAM1BrQ,KAAK3M,OAAS,IAAIsL,IAClBqB,KAAKN,iBAAmBA,GAIxBM,KAAKsQ,SAAW,CAAC,EAKjBtQ,KAAKuQ,mBAAqB,IAAI5R,IAM9BqB,KAAKwQ,iBAAmB,CAAC,EAIzBxQ,KAAK2K,OAAS,CAAC,EAMf3K,KAAKyQ,uBAAyB,CAAC,EAC/BzQ,KAAK0Q,aAAe,IAAM1Q,KAAKgK,OAAO,SAAUhK,KAAK2Q,cACrD3Q,KAAK1C,OAAS,KACL0C,KAAKtH,UAEVsH,KAAK4Q,eACL5Q,KAAK6Q,eAAe7Q,KAAKtH,QAASsH,KAAK8Q,YAAa9Q,KAAKqO,MAAM0C,MAAO/Q,KAAKgR,cAE/EhR,KAAKiR,kBAAoB,EACzBjR,KAAKkR,eAAiB,KAClB,MAAMvT,EAAMwL,GAAKxL,MACbqC,KAAKiR,kBAAoBtT,IACzBqC,KAAKiR,kBAAoBtT,EACzB,GAAML,OAAO0C,KAAK1C,QAAQ,GAAO,KAGzC,MAAM,aAAEqT,EAAY,YAAEG,GAAgBX,EACtCnQ,KAAK2Q,aAAeA,EACpB3Q,KAAKmR,WAAa,IAAKR,GACvB3Q,KAAKoR,cAAgB/C,EAAMgD,QAAU,IAAKV,GAAiB,CAAC,EAC5D3Q,KAAK8Q,YAAcA,EACnB9Q,KAAK+P,OAASA,EACd/P,KAAKqO,MAAQA,EACbrO,KAAKgQ,gBAAkBA,EACvBhQ,KAAKpH,MAAQmX,EAASA,EAAOnX,MAAQ,EAAI,EACzCoH,KAAKiQ,oBAAsBA,EAC3BjQ,KAAKyK,QAAUA,EACfzK,KAAKkQ,sBAAwB9O,QAAQ8O,GACrClQ,KAAKiP,sBAAwBA,GAAsBZ,GACnDrO,KAAKmP,cAAgBA,GAAcd,GAC/BrO,KAAKmP,gBACLnP,KAAKsR,gBAAkB,IAAIzgB,KAE/BmP,KAAKuR,uBAAyBnQ,QAAQ2O,GAAUA,EAAOrX,SAWvD,MAAM,WAAE8Y,KAAeC,GAAwBzR,KAAK2P,4BAA4BtB,EAAO,CAAC,EAAGrO,MAC3F,IAAK,MAAMlM,KAAO2d,EAAqB,CACnC,MAAMhe,EAAQge,EAAoB3d,QACRmB,IAAtB0b,EAAa7c,IAAsBkV,GAAcvV,IACjDA,EAAMuL,IAAI2R,EAAa7c,IAAM,EAErC,CACJ,CACA,KAAA4d,CAAM9a,GACFoJ,KAAKtH,QAAU9B,EACf8X,GAAmB1P,IAAIpI,EAAUoJ,MAC7BA,KAAKgR,aAAehR,KAAKgR,WAAWpa,UACpCoJ,KAAKgR,WAAWU,MAAM9a,GAEtBoJ,KAAK+P,QAAU/P,KAAKmP,gBAAkBnP,KAAKiP,wBAC3CjP,KAAK2R,sBAAwB3R,KAAK+P,OAAO6B,gBAAgB5R,OAE7DA,KAAK3M,OAAOsJ,QAAQ,CAAClJ,EAAOK,IAAQkM,KAAK6R,kBAAkB/d,EAAKL,IAC3Dgb,GAAyB/V,SCpJtC,WAEI,GADA+V,GAAyB/V,SAAU,EAC9B,KAEL,GAAIS,OAAO2Y,WAAY,CACnB,MAAMC,EAAmB5Y,OAAO2Y,WAAW,4BACrCE,EAA8B,IAAOxD,GAAqB9V,QAAUqZ,EAAiBE,QAC3FF,EAAiBG,iBAAiB,SAAUF,GAC5CA,GACJ,MAEIxD,GAAqB9V,SAAU,CAEvC,CDwIYyZ,GAEJnS,KAAKqQ,mBAC4B,UAA7BrQ,KAAKiQ,sBAE8B,WAA7BjQ,KAAKiQ,qBAEDzB,GAAqB9V,SAI/BsH,KAAK+P,QACL/P,KAAK+P,OAAOK,SAAS9T,IAAI0D,MAC7BA,KAAK5C,OAAO4C,KAAKqO,MAAOrO,KAAKgQ,gBACjC,CACA,OAAAoC,GACIpS,KAAKgR,YAAchR,KAAKgR,WAAWoB,UACnCvU,GAAYmC,KAAK0Q,cACjB7S,GAAYmC,KAAK1C,QACjB0C,KAAKuQ,mBAAmB5T,QAAS0V,GAAWA,KAC5CrS,KAAKuQ,mBAAmBzT,QACxBkD,KAAK2R,uBAAyB3R,KAAK2R,wBACnC3R,KAAK+P,QAAU/P,KAAK+P,OAAOK,SAAS5T,OAAOwD,MAC3C,IAAK,MAAMlM,KAAOkM,KAAK2K,OACnB3K,KAAK2K,OAAO7W,GAAKgJ,QAErB,IAAK,MAAMhJ,KAAOkM,KAAKsQ,SAAU,CAC7B,MAAMgC,EAAUtS,KAAKsQ,SAASxc,GAC1Bwe,IACAA,EAAQF,UACRE,EAAQC,WAAY,EAE5B,CACAvS,KAAKtH,QAAU,IACnB,CACA,iBAAAmZ,CAAkB/d,EAAKL,GACfuM,KAAKuQ,mBAAmB5W,IAAI7F,IAC5BkM,KAAKuQ,mBAAmBxR,IAAIjL,EAA5BkM,GAEJ,MAAMwS,EAAmB5hB,EAAe+I,IAAI7F,GACxC0e,GAAoBxS,KAAKyS,iBACzBzS,KAAKyS,kBAET,MAAMC,EAAiBjf,EAAMoY,GAAG,SAAW8G,IACvC3S,KAAK2Q,aAAa7c,GAAO6e,EACzB3S,KAAKqO,MAAMuE,UAAY,GAAMvV,UAAU2C,KAAK0Q,cACxC8B,GAAoBxS,KAAKgR,aACzBhR,KAAKgR,WAAW6B,kBAAmB,KAGrCC,EAAwBrf,EAAMoY,GAAG,gBAAiB7L,KAAKkR,gBAC7D,IAAI6B,EACA5Z,OAAO6Z,wBACPD,EAAkB5Z,OAAO6Z,sBAAsBhT,KAAMlM,EAAKL,IAE9DuM,KAAKuQ,mBAAmBvR,IAAIlL,EAAK,KAC7B4e,IACAI,IACIC,GACAA,IACAtf,EAAM+X,OACN/X,EAAMuY,QAElB,CACA,gBAAAiH,CAAiBC,GAIb,OAAKlT,KAAKtH,SACLsH,KAAKmT,0BACNnT,KAAK7H,OAAS+a,EAAM/a,KAGjB6H,KAAKmT,yBAAyBnT,KAAKtH,QAASwa,EAAMxa,SAF9C,CAGf,CACA,cAAA0a,GACI,IAAItf,EAAM,YACV,IAAKA,KAAOqa,GAAoB,CAC5B,MAAMkF,EAAoBlF,GAAmBra,GAC7C,IAAKuf,EACD,SACJ,MAAM,UAAEjF,EAAWkF,QAASC,GAAuBF,EAYnD,IARKrT,KAAKsQ,SAASxc,IACfyf,GACAnF,EAAUpO,KAAKqO,SACfrO,KAAKsQ,SAASxc,GAAO,IAAIyf,EAAmBvT,OAK5CA,KAAKsQ,SAASxc,GAAM,CACpB,MAAMwe,EAAUtS,KAAKsQ,SAASxc,GAC1Bwe,EAAQC,UACRD,EAAQlV,UAGRkV,EAAQZ,QACRY,EAAQC,WAAY,EAE5B,CACJ,CACJ,CACA,YAAA3B,GACI5Q,KAAKwT,MAAMxT,KAAK8Q,YAAa9Q,KAAK2Q,aAAc3Q,KAAKqO,MACzD,CAMA,kBAAA1X,GACI,OAAOqJ,KAAKtH,QACNsH,KAAKyT,2BAA2BzT,KAAKtH,QAASsH,KAAKqO,ORhQzC,CACpB7c,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,GQmQrC,CACA,cAAA+e,CAAe5f,GACX,OAAOkM,KAAK2Q,aAAa7c,EAC7B,CACA,cAAA6f,CAAe7f,EAAKL,GAChBuM,KAAK2Q,aAAa7c,GAAOL,CAC7B,CAKA,MAAA2J,CAAOiR,EAAO2B,IACN3B,EAAMuF,mBAAqB5T,KAAKqO,MAAMuF,oBACtC5T,KAAKkR,iBAETlR,KAAK6T,UAAY7T,KAAKqO,MACtBrO,KAAKqO,MAAQA,EACbrO,KAAK8T,oBAAsB9T,KAAKgQ,gBAChChQ,KAAKgQ,gBAAkBA,EAIvB,IAAK,IAAIpS,EAAI,EAAGA,EAAI6R,GAAkB9X,OAAQiG,IAAK,CAC/C,MAAM9J,EAAM2b,GAAkB7R,GAC1BoC,KAAKyQ,uBAAuB3c,KAC5BkM,KAAKyQ,uBAAuB3c,YACrBkM,KAAKyQ,uBAAuB3c,IAEvC,MACMigB,EAAW1F,EADK,KAAOva,GAEzBigB,IACA/T,KAAKyQ,uBAAuB3c,GAAOkM,KAAK6L,GAAG/X,EAAKigB,GAExD,CACA/T,KAAKwQ,iBE7Sb,SAAqC7X,EAASqb,EAAMhJ,GAChD,IAAK,MAAMlX,KAAOkgB,EAAM,CACpB,MAAMC,EAAYD,EAAKlgB,GACjBogB,EAAYlJ,EAAKlX,GACvB,GAAIkV,GAAciL,GAKdtb,EAAQwb,SAASrgB,EAAKmgB,QAErB,GAAIjL,GAAckL,GAKnBvb,EAAQwb,SAASrgB,EAAKgM,GAAYmU,EAAW,CAAEzI,MAAO7S,UAErD,GAAIub,IAAcD,EAMnB,GAAItb,EAAQyb,SAAStgB,GAAM,CACvB,MAAMugB,EAAgB1b,EAAQmG,SAAShL,IACP,IAA5BugB,EAAcC,UACdD,EAAczL,KAAKqL,GAEbI,EAAc9I,aACpB8I,EAAcrV,IAAIiV,EAE1B,KACK,CACD,MAAMtB,EAAcha,EAAQ+a,eAAe5f,GAC3C6E,EAAQwb,SAASrgB,EAAKgM,QAA4B7K,IAAhB0d,EAA4BA,EAAcsB,EAAW,CAAEzI,MAAO7S,IACpG,CAER,CAEA,IAAK,MAAM7E,KAAOkX,OACI/V,IAAd+e,EAAKlgB,IACL6E,EAAQ4b,YAAYzgB,GAE5B,OAAOkgB,CACX,CFgQgCQ,CAA4BxU,KAAMA,KAAK2P,4BAA4BtB,EAAOrO,KAAK6T,UAAW7T,MAAOA,KAAKwQ,kBAC1HxQ,KAAKyU,wBACLzU,KAAKyU,wBAEb,CACA,QAAAC,GACI,OAAO1U,KAAKqO,KAChB,CAIA,UAAAsG,CAAW/hB,GACP,OAAOoN,KAAKqO,MAAMe,SAAWpP,KAAKqO,MAAMe,SAASxc,QAAQqC,CAC7D,CAIA,oBAAA2f,GACI,OAAO5U,KAAKqO,MAAMwG,UACtB,CACA,qBAAAC,GACI,OAAO9U,KAAKqO,MAAM0G,kBACtB,CACA,qBAAAC,GACI,OAAOhV,KAAKmP,cACNnP,KACAA,KAAK+P,OACD/P,KAAK+P,OAAOiF,6BACZ/f,CACd,CAIA,eAAA2c,CAAgBqD,GACZ,MAAMC,EAAqBlV,KAAKgV,wBAChC,GAAIE,EAGA,OAFAA,EAAmB5D,iBACf4D,EAAmB5D,gBAAgBhV,IAAI2Y,GACpC,IAAMC,EAAmB5D,gBAAgB9U,OAAOyY,EAE/D,CAIA,QAAAd,CAASrgB,EAAKL,GAEV,MAAM4gB,EAAgBrU,KAAK3M,OAAO0L,IAAIjL,GAClCL,IAAU4gB,IACNA,GACArU,KAAKuU,YAAYzgB,GACrBkM,KAAK6R,kBAAkB/d,EAAKL,GAC5BuM,KAAK3M,OAAO2L,IAAIlL,EAAKL,GACrBuM,KAAK2Q,aAAa7c,GAAOL,EAAMsL,MAEvC,CAIA,WAAAwV,CAAYzgB,GACRkM,KAAK3M,OAAOmJ,OAAO1I,GACnB,MAAMiY,EAAc/L,KAAKuQ,mBAAmBxR,IAAIjL,GAC5CiY,IACAA,IACA/L,KAAKuQ,mBAAmB/T,OAAO1I,WAE5BkM,KAAK2Q,aAAa7c,GACzBkM,KAAKmV,2BAA2BrhB,EAAKkM,KAAK8Q,YAC9C,CAIA,QAAAsD,CAAStgB,GACL,OAAOkM,KAAK3M,OAAOsG,IAAI7F,EAC3B,CACA,QAAAgL,CAAShL,EAAK8Q,GACV,GAAI5E,KAAKqO,MAAMhb,QAAU2M,KAAKqO,MAAMhb,OAAOS,GACvC,OAAOkM,KAAKqO,MAAMhb,OAAOS,GAE7B,IAAIL,EAAQuM,KAAK3M,OAAO0L,IAAIjL,GAK5B,YAJcmB,IAAVxB,QAAwCwB,IAAjB2P,IACvBnR,EAAQqM,GAA6B,OAAjB8E,OAAwB3P,EAAY2P,EAAc,CAAE4G,MAAOxL,OAC/EA,KAAKmU,SAASrgB,EAAKL,IAEhBA,CACX,CAMA,SAAA4M,CAAUvM,EAAKoU,GACX,IAAIzU,OAAmCwB,IAA3B+K,KAAK2Q,aAAa7c,IAAuBkM,KAAKtH,QAEpDsH,KAAKoV,uBAAuBpV,KAAKqO,MAAOva,IACtCkM,KAAKqV,sBAAsBrV,KAAKtH,QAAS5E,EAAKkM,KAAKyK,SAFrDzK,KAAK2Q,aAAa7c,GX/XV,IAAC3C,EW6Yf,OAXIsC,UACqB,iBAAVA,IACN8E,EAAkB9E,IAAUmN,GAAkBnN,IAE/CA,EAAQC,WAAWD,IXtYZtC,EWwYasC,GXxYP8Z,GAAWjV,KAAKJ,EAAc/G,KWwYbmT,GAAQlQ,KAAK8T,KAC3CzU,EAAQ,GAAkBK,EAAKoU,KAEnClI,KAAKsV,cAAcxhB,EAAKkV,GAAcvV,GAASA,EAAMsL,MAAQtL,IAE1DuV,GAAcvV,GAASA,EAAMsL,MAAQtL,CAChD,CAKA,aAAA6hB,CAAcxhB,EAAKL,GACfuM,KAAKmR,WAAWrd,GAAOL,CAC3B,CAKA,aAAA8hB,CAAczhB,GACV,MAAM,QAAEud,GAAYrR,KAAKqO,MACzB,IAAImH,EACJ,GAAuB,iBAAZnE,GAA2C,iBAAZA,EAAsB,CAC5D,MAAMoE,EAAUnG,GAAwBtP,KAAKqO,MAAOgD,EAASrR,KAAKgQ,iBAAiBR,QAC/EiG,IACAD,EAAmBC,EAAQ3hB,GAEnC,CAIA,GAAIud,QAAgCpc,IAArBugB,EACX,OAAOA,EAMX,MAAMtN,EAASlI,KAAKoV,uBAAuBpV,KAAKqO,MAAOva,GACvD,YAAemB,IAAXiT,GAAyBc,GAAcd,QAMRjT,IAA5B+K,KAAKoR,cAActd,SACDmB,IAArBugB,OACEvgB,EACA+K,KAAKmR,WAAWrd,GARXoU,CASf,CACA,EAAA2D,CAAGC,EAAW9P,GAIV,OAHKgE,KAAK2K,OAAOmB,KACb9L,KAAK2K,OAAOmB,GAAa,IAAIjC,IAE1B7J,KAAK2K,OAAOmB,GAAWxP,IAAIN,EACtC,CACA,MAAAgO,CAAO8B,KAAc4J,GACb1V,KAAK2K,OAAOmB,IACZ9L,KAAK2K,OAAOmB,GAAW9B,UAAU0L,EAEzC,CACA,uBAAAC,GACInI,GAAUlQ,OAAO0C,KAAK1C,OAC1B,EG/cJ,MAAMsY,WAAyBlG,GAC3B,WAAA/P,GACImI,SAAS+N,WACT7V,KAAKN,iBAAmBmI,EAC5B,CACA,wBAAAsL,CAAyBrR,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEgU,wBAAwB/T,GAAS,GAAK,CACnD,CACA,sBAAAqT,CAAuB/G,EAAOva,GAC1B,OAAOua,EAAM0C,MACP1C,EAAM0C,MAAMjd,QACZmB,CACV,CACA,0BAAAkgB,CAA2BrhB,GAAK,KAAEiiB,EAAI,MAAEhF,WAC7BgF,EAAKjiB,UACLid,EAAMjd,EACjB,CACA,sBAAA2gB,GACQzU,KAAKgW,oBACLhW,KAAKgW,2BACEhW,KAAKgW,mBAEhB,MAAM,SAAE5F,GAAapQ,KAAKqO,MACtBrF,GAAcoH,KACdpQ,KAAKgW,kBAAoB5F,EAASvE,GAAG,SAAWoK,IACxCjW,KAAKtH,UACLsH,KAAKtH,QAAQwd,YAAc,GAAGD,OAI9C,ECnCJ,MAAME,GAAiB,CAAC1iB,EAAO0E,IACpBA,GAAyB,iBAAV1E,EAChB0E,EAAKpF,UAAUU,GACfA,ECJJ2iB,GAAiB,CACnB5kB,EAAG,aACHC,EAAG,aACHc,EAAG,aACHiU,qBAAsB,eAEpB6P,GAAgB1lB,EAAmBgH,OCLzC,SAAS2e,GAAgBvb,EAAO4V,EAAciD,GAC1C,MAAM,MAAE7C,EAAK,KAAEgF,EAAI,gBAAEQ,GAAoBxb,EAEzC,IAAI5F,GAAe,EACfqhB,GAAqB,EAOzB,IAAK,MAAM1iB,KAAO6c,EAAc,CAC5B,MAAMld,EAAQkd,EAAa7c,GAC3B,GAAIlD,EAAe+I,IAAI7F,GAEnBqB,GAAe,OAGd,GAAInB,EAAkBF,GACvBiiB,EAAKjiB,GAAOL,MAGX,CAED,MAAMgjB,EAAcN,GAAe1iB,EAAOuR,GAAiBlR,IACvDA,EAAIC,WAAW,WAEfyiB,GAAqB,EACrBD,EAAgBziB,GACZ2iB,GAGJ1F,EAAMjd,GAAO2iB,CAErB,CACJ,CAiBA,GAhBK9F,EAAa5d,YACVoC,GAAgBye,EAChB7C,EAAMhe,UD1BlB,SAAwB4d,EAAc5d,EAAW6gB,GAE7C,IAAI8C,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAI/Y,EAAI,EAAGA,EAAIyY,GAAezY,IAAK,CACpC,MAAM9J,EAAMnD,EAAmBiN,GACzBnK,EAAQkd,EAAa7c,GAC3B,QAAcmB,IAAVxB,EACA,SACJ,IAAImjB,GAAiB,EAOrB,GALIA,EADiB,iBAAVnjB,EACUA,KAAWK,EAAIC,WAAW,SAAW,EAAI,GAGnB,IAAtBL,WAAWD,IAE3BmjB,GAAkBhD,EAAmB,CACtC,MAAM6C,EAAcN,GAAe1iB,EAAOuR,GAAiBlR,IACtD8iB,IACDD,GAAqB,EAErBD,GAAmB,GADGN,GAAetiB,IAAQA,KACN2iB,OAEvC7C,IACA7gB,EAAUe,GAAO2iB,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgB/iB,OAG9BigB,EACA8C,EAAkB9C,EAAkB7gB,EAAW4jB,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CChB8BG,CAAelG,EAAc5V,EAAMhI,UAAW6gB,GAE3D7C,EAAMhe,YAKXge,EAAMhe,UAAY,SAOtByjB,EAAoB,CACpB,MAAM,QAAE/f,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEgQ,EAAU,GAAO6P,EAC3DxF,EAAMwF,gBAAkB,GAAG9f,KAAWC,KAAWgQ,GACrD,CACJ,CC3DA,SAASoQ,GAAWne,GAAS,MAAEoY,EAAK,KAAEgF,GAAQgB,EAAW/F,GACrD,MAAMgG,EAAere,EAAQoY,MAC7B,IAAIjd,EACJ,IAAKA,KAAOid,EAERiG,EAAaljB,GAAOid,EAAMjd,GAI9B,IAAKA,KADLkd,GAAYiG,sBAAsBD,EAAcD,GACpChB,EAGRiB,EAAaE,YAAYpjB,EAAKiiB,EAAKjiB,GAE3C,CCZA,MAAMqjB,GAAkB,CAAC,ECCzB,SAASC,GAAoBtjB,GAAK,OAAEoa,EAAM,SAAEmJ,IACxC,OAAQzmB,EAAe+I,IAAI7F,IACvBA,EAAIC,WAAW,YACbma,QAAuBjZ,IAAboiB,OACLF,GAAgBrjB,IAAgB,YAARA,EACvC,CCLA,SAAS6b,GAA4BtB,EAAOwF,EAAWhV,GACnD,MAAM,MAAEkS,GAAU1C,EACZiJ,EAAY,CAAC,EACnB,IAAK,MAAMxjB,KAAOid,GACV/H,GAAc+H,EAAMjd,KACnB+f,EAAU9C,OACP/H,GAAc6K,EAAU9C,MAAMjd,KAClCsjB,GAAoBtjB,EAAKua,SACmBpZ,IAA5C4J,GAAeC,SAAShL,IAAMwgB,aAC9BgD,EAAUxjB,GAAOid,EAAMjd,IAG/B,OAAOwjB,CACX,CCNA,MAAMC,WAA0B3B,GAC5B,WAAAjW,GACImI,SAAS+N,WACT7V,KAAK7H,KAAO,OACZ6H,KAAK6Q,eAAiBiG,EAC1B,CACA,qBAAAzB,CAAsBze,EAAU9C,GAC5B,GAAIlD,EAAe+I,IAAI7F,GACnB,OAAOkM,KAAKgR,YAAYwG,aAClB7kB,EAAsBmB,G3EuDb,EAAC8C,EAAUhE,KAClC,MAAM,UAAEG,EAAY,QAAWqG,iBAAiBxC,GAChD,OAAO9D,EAAwBC,EAAWH,I2ExD5B6kB,CAAmB7gB,EAAU9C,GAElC,CACD,MAAM4jB,GAhBQ/e,EAgByB/B,EAfxCuC,OAAOC,iBAAiBT,IAgBjBlF,GAASO,EAAkBF,GAC3B4jB,EAAcre,iBAAiBvF,GAC/B4jB,EAAc5jB,KAAS,EAC7B,MAAwB,iBAAVL,EAAqBA,EAAME,OAASF,CACtD,CArBR,IAA0BkF,CAsBtB,CACA,0BAAA8a,CAA2B7c,GAAU,mBAAEme,IACnC,OAAOpe,EAAmBC,EAAUme,EACxC,CACA,KAAAvB,CAAM1C,EAAaH,EAActC,GAC7BiI,GAAgBxF,EAAaH,EAActC,EAAMuF,kBACrD,CACA,2BAAAjE,CAA4BtB,EAAOwF,EAAWhV,GAC1C,OAAO8Q,GAA4BtB,EAAOwF,EAAWhV,EACzD,ECnCJ,MAAM8Y,GAAeC,GAAQA,EAAI9T,QAAQ,mBAAoB,SAAS+T,cCDhEC,GAAW,CACbC,OAAQ,oBACRC,MAAO,oBAELC,GAAY,CACdF,OAAQ,mBACRC,MAAO,mBCFX,SAASE,GAAcnd,GAAO,MAAEod,EAAK,MAAEC,EAAK,UAAEC,EAAS,WAAEC,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAEhGvC,GAAUwC,EAAU7E,EAAmBmD,GAMtC,GALAT,GAAgBvb,EAAOkb,EAAQrC,GAK3B6E,EAIA,YAHI1d,EAAMgW,MAAM2H,UACZ3d,EAAM4d,MAAMD,QAAU3d,EAAMgW,MAAM2H,UAI1C3d,EAAM4d,MAAQ5d,EAAMgW,MACpBhW,EAAMgW,MAAQ,CAAC,EACf,MAAM,MAAE4H,EAAK,MAAE5H,GAAUhW,EAKrB4d,EAAM5lB,YACNge,EAAMhe,UAAY4lB,EAAM5lB,iBACjB4lB,EAAM5lB,YAEbge,EAAMhe,WAAa4lB,EAAMpC,mBACzBxF,EAAMwF,gBAAkBoC,EAAMpC,iBAAmB,iBAC1CoC,EAAMpC,iBAEbxF,EAAMhe,YAKNge,EAAMva,aAAeugB,GAAWvgB,cAAgB,kBACzCmiB,EAAMniB,mBAGHvB,IAAVkjB,IACAQ,EAAMnnB,EAAI2mB,QACAljB,IAAVmjB,IACAO,EAAMlnB,EAAI2mB,QACInjB,IAAdojB,IACAM,EAAM7mB,MAAQumB,QAECpjB,IAAfqjB,GDlCR,SAAsBK,EAAOhhB,EAAQihB,EAAU,EAAGb,EAAS,EAAGc,GAAc,GAExEF,EAAML,WAAa,EAGnB,MAAMQ,EAAOD,EAAcf,GAAWG,GAEtCU,EAAMG,EAAKf,QAAUjgB,EAAG/E,WAAWglB,GAEnC,MAAMO,EAAaxgB,EAAG/E,UAAU4E,GAC1B4gB,EAAczgB,EAAG/E,UAAU6lB,GACjCD,EAAMG,EAAKd,OAAS,GAAGM,KAAcC,GACzC,CCuBQQ,CAAaJ,EAAOL,EAAYC,EAAaC,GAAY,EAEjE,CCnDA,MAAMQ,GAAsB,IAAInoB,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBC1BE4nB,GAAYQ,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIpB,cCGzD,SAAS,GAA4BxJ,EAAOwF,EAAWhV,GACnD,MAAMyY,EAAY3H,GAA8BtB,EAAOwF,EAAWhV,GAClE,IAAK,MAAM/K,KAAOua,EACd,GAAIrF,GAAcqF,EAAMva,KACpBkV,GAAc6K,EAAU/f,IAAO,CAI/BwjB,GAHuD,IAArC3mB,EAAmB8Y,QAAQ3V,GACvC,OAASA,EAAIolB,OAAO,GAAGC,cAAgBrlB,EAAI6O,UAAU,GACrD7O,GACiBua,EAAMva,EACjC,CAEJ,OAAOwjB,CACX,CCLA,MAAM8B,WAAyBxD,GAC3B,WAAAjW,GACImI,SAAS+N,WACT7V,KAAK7H,KAAO,MACZ6H,KAAKyY,UAAW,EAChBzY,KAAKyT,2BAA6BlF,EACtC,CACA,sBAAA6G,CAAuB/G,EAAOva,GAC1B,OAAOua,EAAMva,EACjB,CACA,qBAAAuhB,CAAsBze,EAAU9C,GAC5B,GAAIlD,EAAe+I,IAAI7F,GAAM,CACzB,MAAMulB,EAAc3R,GAAoB5T,GACxC,OAAOulB,GAAcA,EAAY9hB,SAAe,CACpD,CAEA,OADAzD,EAAOklB,GAAoBrf,IAAI7F,GAA0BA,EAAnB6jB,GAAY7jB,GAC3C8C,EAAS0iB,aAAaxlB,EACjC,CACA,2BAAA6b,CAA4BtB,EAAOwF,EAAWhV,GAC1C,OAAO,GAA4BwP,EAAOwF,EAAWhV,EACzD,CACA,KAAA2U,CAAM1C,EAAaH,EAActC,GAC7B6J,GAAcpH,EAAaH,EAAc3Q,KAAKyY,SAAUpK,EAAMuF,kBAAmBvF,EAAM0C,MAC3F,CACA,cAAAF,CAAeja,EAAUka,EAAaiG,EAAW/F,IC9BrD,SAAmBrY,EAASmY,EAAayI,EAAYvI,GACjD8F,GAAWne,EAASmY,OAAa7b,EAAW+b,GAC5C,IAAK,MAAMld,KAAOgd,EAAY6H,MAC1BhgB,EAAQ6gB,aAAcR,GAAoBrf,IAAI7F,GAA0BA,EAAnB6jB,GAAY7jB,GAAYgd,EAAY6H,MAAM7kB,GAEvG,CD0BQ2lB,CAAU7iB,EAAUka,EAAaiG,EAAW/F,EAChD,CACA,KAAAU,CAAM9a,GACFoJ,KAAKyY,SAAWA,GAAS7hB,EAAS8iB,SAClC5R,MAAM4J,MAAM9a,EAChB,EEpCJ,MAAM+iB,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAeC,GACpB,MAKqB,iBAAdA,IAIHA,EAAUhnB,SAAS,SAOvB8mB,GAAqBlQ,QAAQoQ,IAAc,GAIvC,SAASzlB,KAAKylB,GAItB,CCtBA,MAAMC,GAAyB,CAACD,EAAWpP,IAChCmP,GAAeC,GAChB,IAAIT,GAAiB3O,GACrB,IAAI8M,GAAkB9M,EAAS,CAC7BsP,gBAAiBF,IAAc,EAAAG,W,0BCN3C,MAAMC,IAAc,IAAAC,eAAc,CAAEC,QAAQ,I,eCA5C,MAAMC,IAAgC,IAAAF,eAAc,CAAC,GCCrD,SAASG,GAAuBhM,GAC5B,MAAM,QAAEgD,EAAO,QAAEnC,GCFrB,SAAgCb,EAAOiM,GACnC,GAAIrL,GAAsBZ,GAAQ,CAC9B,MAAM,QAAEgD,EAAO,QAAEnC,GAAYb,EAC7B,MAAO,CACHgD,SAAqB,IAAZA,GAAqBxC,GAAewC,GACvCA,OACApc,EACNia,QAASL,GAAeK,GAAWA,OAAUja,EAErD,CACA,OAAyB,IAAlBoZ,EAAMkM,QAAoBD,EAAU,CAAC,CAChD,CDTiCE,CAAuBnM,GAAO,IAAAoM,YAAWL,KACtE,OAAO,IAAAM,SAAQ,KAAM,CAAGrJ,UAASnC,YAAY,CAACyL,GAA0BtJ,GAAUsJ,GAA0BzL,IAChH,CACA,SAASyL,GAA0BC,GAC/B,OAAOtc,MAAMwQ,QAAQ8L,GAAQA,EAAK7V,KAAK,KAAO6V,CAClD,CEVA,MAAMC,GAAwB,KAAM,CAChC9J,MAAO,CAAC,EACRhe,UAAW,CAAC,EACZwjB,gBAAiB,CAAC,EAClBR,KAAM,CAAC,ICEX,SAAS+E,GAAkB5S,EAAQhE,EAAQmK,GACvC,IAAK,MAAMva,KAAOoQ,EACT8E,GAAc9E,EAAOpQ,KAAUsjB,GAAoBtjB,EAAKua,KACzDnG,EAAOpU,GAAOoQ,EAAOpQ,GAGjC,CAQA,SAASinB,GAAS1M,EAAO8B,GACrB,MACMY,EAAQ,CAAC,EAMf,OAFA+J,GAAkB/J,EALA1C,EAAM0C,OAAS,CAAC,EAKE1C,GACpC/M,OAAO0Z,OAAOjK,EAdlB,UAAgC,kBAAE6C,GAAqBzD,GACnD,OAAO,IAAAuK,SAAQ,KACX,MAAM3f,EDfsB,CAChCgW,MAAO,CAAC,EACRhe,UAAW,CAAC,EACZwjB,gBAAiB,CAAC,EAClBR,KAAM,CAAC,GCaH,OADAO,GAAgBvb,EAAOoV,EAAayD,GAC7BtS,OAAO0Z,OAAO,CAAC,EAAGjgB,EAAMgb,KAAMhb,EAAMgW,QAC5C,CAACZ,GACR,CAQyB8K,CAAuB5M,EAAO8B,IAC5CY,CACX,CACA,SAASmK,GAAa7M,EAAO8B,GAEzB,MAAMgL,EAAY,CAAC,EACbpK,EAAQgK,GAAS1M,EAAO8B,GAoB9B,OAnBI9B,EAAMT,OAA+B,IAAvBS,EAAM+M,eAEpBD,EAAUE,WAAY,EAEtBtK,EAAMuK,WACFvK,EAAMwK,iBACFxK,EAAMyK,mBACF,OAEZzK,EAAM0K,aACa,IAAfpN,EAAMT,KACA,OACA,QAAsB,MAAfS,EAAMT,KAAe,IAAM,WAEzB3Y,IAAnBoZ,EAAMqN,WACLrN,EAAMsN,OAAStN,EAAMuN,YAAcvN,EAAMwN,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUpK,MAAQA,EACXoK,CACX,CCpDA,MAAMW,GAAuB,KAAM,CFD/B/K,MAAO,CAAC,EACRhe,UAAW,CAAC,EACZwjB,gBAAiB,CAAC,EAClBR,KAAM,CAAC,EEAP4C,MAAO,CAAC,ICEZ,SAASoD,GAAY1N,EAAO8B,EAAa6L,EAAWnC,GAChD,MAAMoC,GAAc,IAAAvB,SAAQ,KACxB,MAAM3f,EDNqB,CFD/BgW,MAAO,CAAC,EACRhe,UAAW,CAAC,EACZwjB,gBAAiB,CAAC,EAClBR,KAAM,CAAC,EEAP4C,MAAO,CAAC,GCMJ,OADAT,GAAcnd,EAAOoV,EAAasI,GAASoB,GAAYxL,EAAMuF,kBAAmBvF,EAAM0C,OAC/E,IACAhW,EAAM4d,MACT5H,MAAO,IAAKhW,EAAMgW,SAEvB,CAACZ,IACJ,GAAI9B,EAAM0C,MAAO,CACb,MAAMmL,EAAY,CAAC,EACnBpB,GAAkBoB,EAAW7N,EAAM0C,MAAO1C,GAC1C4N,EAAYlL,MAAQ,IAAKmL,KAAcD,EAAYlL,MACvD,CACA,OAAOkL,CACX,CCfA,MAAME,GAAmB,IAAItrB,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASurB,GAAkBtoB,GACvB,OAAQA,EAAIC,WAAW,UAClBD,EAAIC,WAAW,SAAmB,cAARD,GAC3BA,EAAIC,WAAW,WACfD,EAAIC,WAAW,UACfD,EAAIC,WAAW,UACfD,EAAIC,WAAW,aACfooB,GAAiBxiB,IAAI7F,EAC7B,CCpDA,IAAIuoB,GAAiBvoB,IAASsoB,GAAkBtoB,GAoBhD,IAlB+B,mBADEwoB,GAyBLC,QAAQ,0BAA0BhlB,WArB1D8kB,GAAiBvoB,GAAQA,EAAIC,WAAW,OAASqoB,GAAkBtoB,GAAOwoB,GAAYxoB,GAsB1F,CACA,MAEA,CA7BA,IAAiCwoB,GCIjC,SAASE,GAAU3C,EAAWxL,EAAOoO,GAAK,aAAE9L,GAAiB+L,EAAUC,GAAqB,GACxF,MAGMV,GAHiBrC,GAAeC,GAChCkC,GACAb,IAC6B7M,EAAOsC,EAAc+L,EAAU7C,GAC5D+C,EDqBV,SAAqBvO,EAAOwO,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM9oB,KAAOua,EAQF,WAARva,GAA4C,iBAAjBua,EAAMhb,SAEjCgpB,GAAcvoB,KACU,IAAvB6oB,GAA+BP,GAAkBtoB,KAChD+oB,IAAUT,GAAkBtoB,IAE7Bua,EAAiB,WACdva,EAAIC,WAAW,aACnB6oB,EAAc9oB,GACVua,EAAMva,IAGlB,OAAO8oB,CACX,CC5C0BE,CAAYzO,EAA4B,iBAAdwL,EAAwB8C,GAClEI,EAAelD,IAAc,EAAAG,SAAW,IAAK4C,KAAkBX,EAAaQ,OAAQ,CAAC,GAMrF,SAAErM,GAAa/B,EACf2O,GAAmB,IAAAtC,SAAQ,IAAO1R,GAAcoH,GAAYA,EAASrR,MAAQqR,EAAW,CAACA,IAC/F,OAAO,IAAA6M,eAAcpD,EAAW,IACzBkD,EACH3M,SAAU4M,GAElB,C,0BClBA,SAASE,GAAmBzpB,GACxB,OAAOuV,GAAcvV,GAASA,EAAMsL,MAAQtL,CAChD,CCOA,SAAS0pB,GAAiB9O,EAAOiM,EAAStK,EAAiBoN,GACvD,MAAM/pB,EAAS,CAAC,EACVgqB,EAAeD,EAAmB/O,EAAO,CAAC,GAChD,IAAK,MAAMva,KAAOupB,EACdhqB,EAAOS,GAAOopB,GAAmBG,EAAavpB,IAElD,IAAI,QAAEud,EAAO,QAAEnC,GAAYb,EAC3B,MAAMiP,EAA0BrO,GAAsBZ,GAChDkP,EAAkBpO,GAAcd,GAClCiM,GACAiD,IACCD,IACiB,IAAlBjP,EAAMkM,eACUtlB,IAAZoc,IACAA,EAAUiJ,EAAQjJ,cACNpc,IAAZia,IACAA,EAAUoL,EAAQpL,UAE1B,IAAIsO,IAA4BxN,IACE,IAA5BA,EAAgBqB,QAEtBmM,EAA4BA,IAAyC,IAAZnM,EACzD,MAAMoM,EAAeD,EAA4BtO,EAAUmC,EAC3D,GAAIoM,GACwB,kBAAjBA,IACN7O,GAAoB6O,GAAe,CACpC,MAAMC,EAAOpf,MAAMwQ,QAAQ2O,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAI7f,EAAI,EAAGA,EAAI8f,EAAK/lB,OAAQiG,IAAK,CAClC,MAAM1E,EAAWoW,GAAwBjB,EAAOqP,EAAK9f,IACrD,GAAI1E,EAAU,CACV,MAAM,cAAEykB,EAAa,WAAE9I,KAAe3M,GAAWhP,EACjD,IAAK,MAAMpF,KAAOoU,EAAQ,CACtB,IAAI0V,EAAc1V,EAAOpU,GACzB,GAAIwK,MAAMwQ,QAAQ8O,GAAc,CAQ5BA,EAAcA,EAHAJ,EACRI,EAAYjmB,OAAS,EACrB,EAEV,CACoB,OAAhBimB,IACAvqB,EAAOS,GAAO8pB,EAEtB,CACA,IAAK,MAAM9pB,KAAO6pB,EACdtqB,EAAOS,GAAO6pB,EAAc7pB,EAEpC,CACJ,CACJ,CACA,OAAOT,CACX,CACA,MAAMwqB,GAAsBC,GAAW,CAACzP,EAAOqO,KAC3C,MAAMpC,GAAU,IAAAG,YAAWL,IACrBpK,GAAkB,IAAAyK,YAAWsD,GAAA,GAC7BC,EAAO,IAjEjB,UAAmB,4BAAErO,EAA2B,kBAAEsO,GAAsB5P,EAAOiM,EAAStK,GAKpF,MAJc,CACVW,aAAcwM,GAAiB9O,EAAOiM,EAAStK,EAAiBL,GAChEmB,YAAamN,IAGrB,CA2DuBC,CAAUJ,EAAQzP,EAAOiM,EAAStK,GACrD,OAAO0M,EAAWsB,KAAS,QAAYA,ICvErCG,GAAmCN,GAAmB,CACxDlO,4BAA2B,GAC3BsO,kBAAmBpD,KCFjBuD,GAAkCP,GAAmB,CACvDlO,4BAA6B,GAC7BsO,kBAAmBnC,KCNvB,MAAMuC,GAAwBC,OAAOC,IAAI,yBCAzC,SAASC,GAAY/B,GACjB,OAAQA,GACW,iBAARA,GACPnb,OAAOC,UAAUC,eAAeC,KAAKgb,EAAK,UAClD,CCGA,SAASgC,GAAatO,EAAatR,EAAe6f,GAC9C,OAAO,IAAAC,aAAa/nB,IACZA,GACAuZ,EAAYyO,SAAWzO,EAAYyO,QAAQhoB,GAE3CiI,IACIjI,EACAiI,EAAc6S,MAAM9a,GAGpBiI,EAAcuT,WAGlBsM,IAC2B,mBAAhBA,EACPA,EAAY9nB,GAEP4nB,GAAYE,KACjBA,EAAYhmB,QAAU9B,KASlC,CAACiI,GACL,CCjCA,MACMggB,GAA+B,QAAUlH,GADjB,kBCIxBmH,IAA2B,IAAA5E,eAAc,CAAC,G,eCIhD,SAAS6E,GAAiBlF,EAAW1J,EAAa9B,EAAO2Q,EAAqBC,GAC1E,MAAQpgB,cAAekR,IAAW,IAAA0K,YAAWL,IACvC8E,GAAc,IAAAzE,YAAWR,IACzBjK,GAAkB,IAAAyK,YAAWsD,GAAA,GAC7B9N,GAAsB,IAAAwK,YAAW0E,GAAA,GAAqBC,cACtDC,GAAmB,IAAAC,QAAO,MAIhCN,EACIA,GACIE,EAAYK,UACfF,EAAiB3mB,SAAWsmB,IAC7BK,EAAiB3mB,QAAUsmB,EAAoBnF,EAAW,CACtD1J,cACAJ,SACA1B,QACA2B,kBACAE,wBAAuBF,IACW,IAA5BA,EAAgBqB,QAEtBpB,yBAGR,MAAMpR,EAAgBwgB,EAAiB3mB,QAKjC8mB,GAA2B,IAAA/E,YAAWqE,KACxCjgB,GACCA,EAAcmS,aACfiO,GACwB,SAAvBpgB,EAAc1G,MAA0C,QAAvB0G,EAAc1G,MA0DxD,SAA8B0G,EAAewP,EAAO4Q,EAA2BQ,GAC3E,MAAM,SAAEpI,EAAQ,OAAEnJ,EAAM,KAAEN,EAAI,gBAAE8R,EAAe,aAAEC,EAAY,WAAEC,EAAU,gBAAEC,GAAqBxR,EAChGxP,EAAcmS,WAAa,IAAIiO,EAA0BpgB,EAAc8R,aAActC,EAAM,8BACrFpZ,EACA6qB,GAAyBjhB,EAAckR,SAC7ClR,EAAcmS,WAAW+O,WAAW,CAChC1I,WACAnJ,SACA8R,oBAAqB5e,QAAQwM,IAAU8R,GAAmBlB,GAAYkB,GACtE7gB,gBAQAohB,cAAiC,iBAAX/R,EAAsBA,EAAS,OACrDuR,yBACAS,UAAWL,EACXF,eACAC,cAER,CAhFQO,CAAqBd,EAAiB3mB,QAAS2V,EAAO4Q,EAA2BO,GAErF,MAAMjN,GAAY,IAAA+M,SAAO,IACzB,IAAAc,oBAAmB,KAKXvhB,GAAiB0T,EAAU7Z,SAC3BmG,EAAczB,OAAOiR,EAAO2B,KAOpC,MAAMqQ,EAAoBhS,EAAMwQ,IAC1ByB,GAAe,IAAAhB,QAAOle,QAAQif,KAC/BlnB,OAAOonB,0BAA0BF,IAClClnB,OAAOqnB,8BAA8BH,IAoCzC,OAnCA,QAA0B,KACjBxhB,IAEL0T,EAAU7Z,SAAU,EACpBS,OAAOsnB,iBAAkB,EACzB5hB,EAAcuU,iBACdvU,EAAc8W,0BAWV2K,EAAa5nB,SAAWmG,EAAc6hB,gBACtC7hB,EAAc6hB,eAAeC,qBAGrC,IAAAC,WAAU,KACD/hB,KAEAyhB,EAAa5nB,SAAWmG,EAAc6hB,gBACvC7hB,EAAc6hB,eAAeC,iBAE7BL,EAAa5nB,UAEb2Q,eAAe,KACXlQ,OAAO0nB,8BAA8BR,KAEzCC,EAAa5nB,SAAU,MAGxBmG,CACX,CAyBA,SAASihB,GAAyBjhB,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAc4L,QAAQsP,gBACvBlb,EAAcmS,WACd8O,GAAyBjhB,EAAckR,OACjD,CCtGA,SAAS+Q,GAAsBjH,GAAW,mBAAE8C,GAAqB,GAAU,CAAC,EAAGoE,EAAmB/B,GAC9F+B,GC5BJ,SAAsBzQ,GAClB,IAAK,MAAMxc,KAAOwc,EACdnC,GAAmBra,GAAO,IACnBqa,GAAmBra,MACnBwc,EAASxc,GAGxB,CDqByBktB,CAAaD,GAClC,MAAME,EAAiBrH,GAAeC,GAChCuE,GACAD,GACN,SAAS+C,EAAmB7S,EAAOqQ,GAK/B,IAAIyC,EACJ,MAAMC,EAAiB,KAChB,IAAA3G,YAAW0E,GAAA,MACX9Q,EACHgJ,SAAUgK,GAAYhT,KAEpB,SAAEqO,GAAa0E,EACf9G,EAAUD,GAAuBhM,GACjC8B,EAAc8Q,EAAe5S,EAAOqO,GAC1C,IAAKA,GAAY,KAAW,EA+BpC,YACqB,IAAAjC,YAAWR,IAAaE,OAKrC,CAQR,CA5CYmH,GACA,MAAMC,EA4ClB,SAAoClT,GAChC,MAAM,KAAET,EAAI,OAAEM,GAAWC,GACzB,IAAKP,IAASM,EACV,MAAO,CAAC,EACZ,MAAMsT,EAAW,IAAK5T,KAASM,GAC/B,MAAO,CACHiT,cAAevT,GAAMQ,UAAUC,IAAUH,GAAQE,UAAUC,GACrDmT,EAASL,mBACTlsB,EACNwsB,eAAgBD,EAASC,eAEjC,CAvDqCC,CAA2BN,GACpDD,EAAgBI,EAAiBJ,cAOjC7G,EAAQzb,cAAgBkgB,GAAiBlF,EAAW1J,EAAaiR,EAAgBpC,EAAqBuC,EAAiBE,eAC3H,CAKA,OAAQ,KAAAE,MAAKvH,GAAcwH,SAAU,CAAEnuB,MAAO6mB,EAASlK,SAAU,CAAC+Q,GAAiB7G,EAAQzb,eAAiB,KAAAgjB,KAAIV,EAAe,CAAEtiB,cAAeyb,EAAQzb,iBAAkBuiB,IAAqB,KAAM5E,GAAU3C,EAAWxL,EAAOoQ,GAAatO,EAAamK,EAAQzb,cAAe6f,GAAcvO,EAAauM,EAAUC,KAC3T,CACAuE,EAAmBY,YAAc,UAA+B,iBAAdjI,EAC5CA,EACA,UAAUA,EAAUiI,aAAejI,EAAUjnB,MAAQ,QAC3D,MAAMmvB,GAA4B,IAAAC,YAAWd,GAE7C,OADAa,EAA0B1D,IAAyBxE,EAC5CkI,CACX,CACA,SAASV,IAAY,SAAEhK,IACnB,MAAM4K,GAAgB,IAAAxH,YAAWyH,GAAAC,GAAoBC,GACrD,OAAOH,QAA8BhtB,IAAboiB,EAClB4K,EAAgB,IAAM5K,EACtBA,CACV,CE3EA,SAASgL,GAAkBtB,EAAmB/B,GAC1C,GAAqB,oBAAVsD,MACP,OAAOxB,GAMX,MAAMyB,EAAiB,IAAI5jB,IACrB6jB,EAAU,CAAC3I,EAAWpP,IACjBqW,GAAsBjH,EAAWpP,EAASsW,EAAmB/B,GAWxE,OAAO,IAAIsD,MANuB,CAACzI,EAAWpP,IAInC+X,EAAQ3I,EAAWpP,GAEc,CAMxC1L,IAAK,CAAC0jB,EAAS3uB,IACC,WAARA,EACO0uB,GAIND,EAAe5oB,IAAI7F,IACpByuB,EAAevjB,IAAIlL,EAAKgtB,GAAsBhtB,OAAKmB,EAAW8rB,EAAmB/B,IAE9EuD,EAAexjB,IAAIjL,KAGtC,CCxCA,SAAS4uB,GAAe7jB,EAAe0Q,EAAYC,GAC/C,MAAMnB,EAAQxP,EAAc6V,WAC5B,OAAOpF,GAAwBjB,EAAOkB,OAAuBta,IAAXua,EAAuBA,EAASnB,EAAMmB,OAAQ3Q,EACpG,CCLA,SAAS8jB,GAAmB9N,EAAY/gB,GACpC,OAAQ+gB,IAAa/gB,IACjB+gB,GAAsB,SACtBA,CACR,CCJA,MAAM+N,GAAqBzxB,GAChBmN,MAAMwQ,QAAQ3d,GCOzB,SAAS0xB,GAAehkB,EAAe/K,EAAKL,GACpCoL,EAAcuV,SAAStgB,GACvB+K,EAAcC,SAAShL,GAAKkL,IAAIvL,GAGhCoL,EAAcsV,SAASrgB,EAAKgM,GAAYrM,GAEhD,CACA,SAASqvB,GAA6B3xB,GAElC,OAAOyxB,GAAkBzxB,GAAKA,EAAEA,EAAEwG,OAAS,IAAM,EAAIxG,CACzD,CChBA,SAAS4xB,GAAqBlkB,EAAe/K,GACzC,MAAM0d,EAAa3S,EAAcC,SAAS,cAK1C,GCP6BrL,EDOD+d,ECNrBpQ,QAAQ4H,GAAcvV,IAAUA,EAAM6I,KDOzC,OAAOkV,EAAWlV,IAAIxI,GAErB,IAAK0d,GAAclX,GAAmB0oB,WAAY,CACnD,MAAMC,EAAgB,IAAI3oB,GAAmB0oB,WAAW,QACxDnkB,EAAcsV,SAAS,aAAc8O,GACrCA,EAAc3mB,IAAIxI,EACtB,CCdJ,IAAiCL,CDejC,CEfA,SAASyvB,GAAqBrkB,GAC1B,OAAOA,EAAcwP,MAAMwQ,GAC/B,CCGA,MAAMsE,GAAmB,CAACrhB,EAAGC,IAAO5Q,GAAM4Q,EAAED,EAAE3Q,IACxCiyB,GAAO,IAAIC,IAAiBA,EAAahoB,OAAO8nB,ICDhD,GAAyBG,GAAsB,IAAVA,EAErCC,GAAyBC,GAAiBA,EAAe,ICTzDC,GAAmB,CACrBvV,OAAQ,EACRwV,WAAY,EACZC,MAAO,GCFX,SAASC,GAASC,EAAGC,EAAGC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDF,EAAc,GAATC,EAAID,GAASE,EACzBA,EAAI,GACGD,EACPC,EAAI,EAAI,EACDF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAChCF,CACX,CCbA,SAASG,GAAaliB,EAAGC,GACrB,OAAQ8hB,GAAOA,EAAI,EAAI9hB,EAAID,CAC/B,CCSA,MAAMmiB,GAAiB,CAACpvB,EAAMC,EAAI3D,KAC9B,MAAM+yB,EAAWrvB,EAAOA,EAClBsvB,EAAOhzB,GAAK2D,EAAKA,EAAKovB,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAInzB,KAAKqB,KAAK8xB,IAE9BC,GAAa,CAAC5hB,GAAKL,GAAMU,IAE/B,SAASwhB,GAAOphB,GACZ,MAAM9K,GAFYhH,EAEQ8R,EAFFmhB,GAAW9rB,KAAMH,GAASA,EAAK/D,KAAKjD,KAA3C,IAACA,EAIlB,GADQiQ,QAAQjJ,IACXiJ,QAAQjJ,GACT,OAAO,EACX,IAAImsB,EAAQnsB,EAAKd,MAAM4L,GAKvB,OAJI9K,IAAS0K,KAETyhB,EFZR,UAAoB,IAAExhB,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAE1L,IAC9CwL,GAAO,IAEPE,GAAa,IACb,IAAIZ,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAS,GAAc,IAQT,CACD,MAAM+gB,EAAI9gB,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC8gB,EAAI,EAAI7gB,EAAY8gB,EAC1B1hB,EAAMwhB,GAASC,EAAGC,EAAGhhB,EAAM,EAAI,GAC/BT,EAAQuhB,GAASC,EAAGC,EAAGhhB,GACvBR,EAAOshB,GAASC,EAAGC,EAAGhhB,EAAM,EAAI,EACpC,MAVIV,EAAMC,EAAQC,EAAOU,EAWzB,MAAO,CACHZ,IAAKpR,KAAK+P,MAAY,IAANqB,GAChBC,MAAOrR,KAAK+P,MAAc,IAARsB,GAClBC,KAAMtR,KAAK+P,MAAa,IAAPuB,GACjBhL,QAER,CEbgBitB,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAAC3vB,EAAMC,KACpB,MAAM2vB,EAAWJ,GAAOxvB,GAClB6vB,EAASL,GAAOvvB,GACtB,IAAK2vB,IAAaC,EACd,OAAOV,GAAanvB,EAAMC,GAE9B,MAAM6vB,EAAU,IAAKF,GACrB,OAAQtzB,IACJwzB,EAAQviB,IAAM6hB,GAAeQ,EAASriB,IAAKsiB,EAAOtiB,IAAKjR,GACvDwzB,EAAQtiB,MAAQ4hB,GAAeQ,EAASpiB,MAAOqiB,EAAOriB,MAAOlR,GAC7DwzB,EAAQriB,KAAO2hB,GAAeQ,EAASniB,KAAMoiB,EAAOpiB,KAAMnR,GAC1DwzB,EAAQrtB,MAAQ1C,EAAU6vB,EAASntB,MAAOotB,EAAOptB,MAAOnG,GACjDgR,GAAKpP,UAAU4xB,KC1CxBC,GAAkB,IAAI/zB,IAAI,CAAC,OAAQ,WCSzC,SAAS,GAAUiR,EAAGC,GAClB,OAAQ8hB,GAAMjvB,EAAYkN,EAAGC,EAAG8hB,EACpC,CACA,SAASgB,GAAS/iB,GACd,MAAiB,iBAANA,EACA,GAEW,iBAANA,EACL5N,EAAmB4N,GACpBkiB,GACA/gB,GAAM7O,KAAK0N,GACP0iB,GACAM,GAELxmB,MAAMwQ,QAAQhN,GACZijB,GAEW,iBAANjjB,EACLmB,GAAM7O,KAAK0N,GAAK0iB,GAAWQ,GAE/BhB,EACX,CACA,SAASe,GAASjjB,EAAGC,GACjB,MAAMqC,EAAS,IAAItC,GACbmjB,EAAY7gB,EAAOzM,OACnButB,EAAapjB,EAAEvO,IAAI,CAACpC,EAAGyM,IAAMinB,GAAS1zB,EAAT0zB,CAAY1zB,EAAG4Q,EAAEnE,KACpD,OAAQimB,IACJ,IAAK,IAAIjmB,EAAI,EAAGA,EAAIqnB,EAAWrnB,IAC3BwG,EAAOxG,GAAKsnB,EAAWtnB,GAAGimB,GAE9B,OAAOzf,EAEf,CACA,SAAS4gB,GAAUljB,EAAGC,GAClB,MAAMqC,EAAS,IAAKtC,KAAMC,GACpBmjB,EAAa,CAAC,EACpB,IAAK,MAAMpxB,KAAOsQ,OACCnP,IAAX6M,EAAEhO,SAAiCmB,IAAX8M,EAAEjO,KAC1BoxB,EAAWpxB,GAAO+wB,GAAS/iB,EAAEhO,GAAX+wB,CAAiB/iB,EAAEhO,GAAMiO,EAAEjO,KAGrD,OAAQ3C,IACJ,IAAK,MAAM2C,KAAOoxB,EACd9gB,EAAOtQ,GAAOoxB,EAAWpxB,GAAK3C,GAElC,OAAOiT,EAEf,CAaA,MAAM0gB,GAAa,CAAC7c,EAAQC,KACxB,MAAMid,EAAW7gB,GAAQL,kBAAkBiE,GACrCkd,EAAc5hB,GAAoByE,GAClCod,EAAc7hB,GAAoB0E,GAIxC,OAHuBkd,EAAYzhB,QAAQC,IAAIjM,SAAW0tB,EAAY1hB,QAAQC,IAAIjM,QAC9EytB,EAAYzhB,QAAQV,MAAMtL,SAAW0tB,EAAY1hB,QAAQV,MAAMtL,QAC/DytB,EAAYzhB,QAAQvM,OAAOO,QAAU0tB,EAAY1hB,QAAQvM,OAAOO,OAE3DitB,GAAgBjrB,IAAIsO,KACpBod,EAAYhyB,OAAOsE,QACnBitB,GAAgBjrB,IAAIuO,KAChBkd,EAAY/xB,OAAOsE,OD1EpC,SAAuBsQ,EAAQC,GAC3B,OAAI0c,GAAgBjrB,IAAIsO,GACZ4b,GAAOA,GAAK,EAAI5b,EAASC,EAGzB2b,GAAOA,GAAK,EAAI3b,EAASD,CAEzC,CCoEmBqd,CAAcrd,EAAQC,GAE1Bkb,GAAK2B,GA1BpB,SAAoB9c,EAAQC,GACxB,MAAMqd,EAAgB,GAChBC,EAAW,CAAEviB,MAAO,EAAGW,IAAK,EAAGxM,OAAQ,GAC7C,IAAK,IAAIwG,EAAI,EAAGA,EAAIsK,EAAO7U,OAAOsE,OAAQiG,IAAK,CAC3C,MAAMzF,EAAO+P,EAAOrE,MAAMjG,GACpB6nB,EAAcxd,EAAOtE,QAAQxL,GAAMqtB,EAASrtB,IAC5CutB,EAAczd,EAAO5U,OAAOoyB,IAAgB,EAClDF,EAAc3nB,GAAK8nB,EACnBF,EAASrtB,IACb,CACA,OAAOotB,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAYhyB,QAAS8xB,GAIzEnB,GAAa/b,EAAQC,ICpFpC,SAAS0d,GAAI/wB,EAAMC,EAAI+uB,GACnB,GAAoB,iBAAThvB,GACO,iBAAPC,GACM,iBAAN+uB,EACP,OAAOjvB,EAAUC,EAAMC,EAAI+uB,GAG/B,OADcgB,GAAShwB,EAChBgxB,CAAMhxB,EAAMC,EACvB,CCRA,MAAMgxB,GAAmB1oB,IACrB,MAAM2oB,EAAgB,EAAG9qB,eAAgBmC,EAAOnC,GAChD,MAAO,CACH0R,MAAO,CAACxQ,GAAY,IAAS,GAAMiB,OAAO2oB,EAAe5pB,GACzD6P,KAAM,IAAMnO,GAAYkoB,GAKxBpoB,IAAK,IAAOjB,GAAUxB,aAAewB,GAAUzB,UAAYkO,GAAKxL,QCZlEqoB,GAAuB,CAACC,EAAQC,EACtCC,EAAa,MAET,IAAIC,EAAS,GACb,MAAMC,EAAYr1B,KAAK2D,IAAI3D,KAAK+P,MAAMmlB,EAAWC,GAAa,GAC9D,IAAK,IAAIvoB,EAAI,EAAGA,EAAIyoB,EAAWzoB,IAC3BwoB,GAAUp1B,KAAK+P,MAAoC,IAA9BklB,EAAOroB,GAAKyoB,EAAY,KAAe,IAAQ,KAExE,MAAO,UAAUD,EAAOzjB,UAAU,EAAGyjB,EAAOzuB,OAAS,OCJnD2uB,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAIN,EAAW,EAEf,IAAInrB,EAAQyrB,EAAUxS,KAAKkS,GAC3B,MAAQnrB,EAAM0rB,MAAQP,EAAWI,IAC7BJ,GAHa,GAIbnrB,EAAQyrB,EAAUxS,KAAKkS,GAE3B,OAAOA,GAAYI,GAAuBI,IAAWR,CACzD,CCXA,SAASS,GAAsBC,EAAc7C,EAAGrrB,GAC5C,MAAMmuB,EAAQ71B,KAAK2D,IAAIovB,EAFI,EAEwB,GACnD,OAAO5Z,GAAkBzR,EAAUkuB,EAAaC,GAAQ9C,EAAI8C,EAChE,CCNA,MAAMC,GAES,IAFTA,GAGO,GAHPA,GAII,EAJJA,GAKQ,EALRA,GAOQ,IAPRA,GAQM,GARNA,GASc,GATdA,GAWS,CACPC,SAAU,IACVxvB,QAAS,GAbXuvB,GAeS,CACPC,SAAU,KACVxvB,QAAS,IAjBXuvB,GAoBW,IApBXA,GAqBW,GArBXA,GAsBU,IAtBVA,GAuBU,ECpBVE,GAAU,KAChB,SAASC,IAAW,SAAEf,EAAWY,GAAuB,OAAEI,EAASJ,GAAqB,SAAE1c,EAAW0c,GAAuB,KAAEK,EAAOL,KACjI,IAAIM,EACAC,EACgB,GAAsBP,IAC1C,IAAIQ,EAAe,EAAIJ,EAIvBI,EAAenwB,EAAM2vB,GAA2BA,GAA2BQ,GAC3EpB,EAAW/uB,EAAM2vB,GAA4BA,GAA4BvD,GAAsB2C,IAC3FoB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCtsB,EAAQwsB,EAAmBtB,EAC3BpkB,EAAI0lB,EAAmBpd,EACvBrI,EAAI0lB,GAAgBF,EAAcD,GAClCtlB,EAAIhR,KAAK02B,KAAK1sB,GACpB,OAAOgsB,GAAWllB,EAAIC,EAAKC,GAE/BqlB,EAAcE,IACV,MACMvsB,EADmBusB,EAAeD,EACPpB,EAC3ByB,EAAI3sB,EAAQoP,EAAWA,EACvBwd,EAAI52B,KAAK62B,IAAIP,EAAc,GAAKt2B,KAAK62B,IAAIN,EAAc,GAAKrB,EAC5D4B,EAAI92B,KAAK02B,KAAK1sB,GACd0H,EAAI+kB,GAAgBz2B,KAAK62B,IAAIN,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBP,GAAU,GAAK,EAAI,KACzCW,EAAIC,GAAKE,GAAMplB,KAOtC0kB,EAAYG,GACEv2B,KAAK02B,KAAKH,EAAerB,KACxBqB,EAAend,GAAY8b,EAAW,GAC1C,KAEXmB,EAAcE,GACAv2B,KAAK02B,KAAKH,EAAerB,IACIA,EAAWA,GAAvC9b,EAAWmd,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYU,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAInqB,EAAI,EAAGA,EAAIqqB,GAAgBrqB,IAChCoqB,GAAkBZ,EAASY,GAAUX,EAAWW,GAEpD,OAAOA,CACX,CAzByBE,CAAgBd,EAAUC,EAD1B,EAAInB,GAGzB,GADAA,EAAW,GAAsBA,GAC7B3hB,MAAMgjB,GACN,MAAO,CACHY,UAAWrB,GACXsB,QAAStB,GACTZ,YAGH,CACD,MAAMiC,EAAYn3B,KAAK62B,IAAIN,EAAc,GAAKJ,EAC9C,MAAO,CACHgB,YACAC,QAAwB,EAAfd,EAAmBt2B,KAAKqB,KAAK80B,EAAOgB,GAC7CjC,WAER,CACJ,CACA,MAAM+B,GAAiB,GAQvB,SAASR,GAAgBF,EAAcD,GACnC,OAAOC,EAAev2B,KAAKqB,KAAK,EAAIi1B,EAAeA,EACvD,CCzEA,MAAMe,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa9d,EAASqO,GAC3B,OAAOA,EAAKxK,KAAMxa,QAAyBmB,IAAjBwV,EAAQ3W,GACtC,CAuCA,SAAS00B,GAAOC,EAA0B3B,GAA+BI,EAASJ,IAC9E,MAAMrc,EAA6C,iBAA5Bge,EACjB,CACEC,eAAgBD,EAChBnoB,UAAW,CAAC,EAAG,GACf4mB,UAEFuB,EACN,IAAI,UAAEE,EAAS,UAAEC,GAAcne,EAC/B,MAAMxC,EAASwC,EAAQnK,UAAU,GAC3B4H,EAASuC,EAAQnK,UAAUmK,EAAQnK,UAAU3I,OAAS,GAKtDoD,EAAQ,CAAE0rB,MAAM,EAAOhzB,MAAOwU,IAC9B,UAAEkgB,EAAS,QAAEC,EAAO,KAAEjB,EAAI,SAAEjB,EAAQ,SAAE9b,EAAQ,uBAAEye,GAtD1D,SAA0Bpe,GACtB,IAAIqe,EAAgB,CAChB1e,SAAU0c,GACVqB,UAAWrB,GACXsB,QAAStB,GACTK,KAAML,GACN+B,wBAAwB,KACrBpe,GAGP,IAAK8d,GAAa9d,EAAS6d,KACvBC,GAAa9d,EAAS4d,IACtB,GAAI5d,EAAQie,eAAgB,CACxB,MAAMA,EAAiBje,EAAQie,eACzBK,EAAQ,EAAI/3B,KAAKC,IAAwB,IAAjBy3B,GACxBP,EAAYY,EAAOA,EACnBX,EAAU,EACZjxB,EAAM,IAAM,EAAG,GAAKsT,EAAQyc,QAAU,IACtCl2B,KAAKqB,KAAK81B,GACdW,EAAgB,IACTA,EACH3B,KAAML,GACNqB,YACAC,UAER,KACK,CACD,MAAMY,EAAU/B,GAAWxc,GAC3Bqe,EAAgB,IACTA,KACAE,EACH7B,KAAML,IAEVgC,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFG,CAAiB,IAC5Fxe,EACHL,UAAWmZ,GAAsB9Y,EAAQL,UAAY,KAEnD8e,EAAkB9e,GAAY,EAC9Bkd,EAAec,GAAW,EAAIp3B,KAAKqB,KAAK81B,EAAYhB,IACpDgC,EAAejhB,EAASD,EACxBmhB,EAAsB7F,GAAsBvyB,KAAKqB,KAAK81B,EAAYhB,IAQlEkC,EAAkBr4B,KAAKe,IAAIo3B,GAAgB,EAOjD,IAAIG,EACJ,GAPAX,IAAcA,EAAYU,EACpBvC,GAAyBC,SACzBD,GAAyBvvB,SAC/BqxB,IAAcA,EAAYS,EACpBvC,GAAyBC,SACzBD,GAAyBvvB,SAE3B+vB,EAAe,EAAG,CAClB,MAAMiC,EAAc9B,GAAgB2B,EAAqB9B,GAEzDgC,EAAiBvF,IACb,MAAMqD,EAAWp2B,KAAK02B,KAAKJ,EAAe8B,EAAsBrF,GAChE,OAAQ7b,EACJkf,IACO8B,EACC5B,EAAe8B,EAAsBD,GACrCI,EACAv4B,KAAKw4B,IAAID,EAAcxF,GACvBoF,EAAen4B,KAAKy4B,IAAIF,EAAcxF,IAE1D,MACK,GAAqB,IAAjBuD,EAELgC,EAAiBvF,GAAM7b,EACnBlX,KAAK02B,KAAK0B,EAAsBrF,IAC3BoF,GACID,EAAkBE,EAAsBD,GAAgBpF,OAEpE,CAED,MAAM2F,EAAoBN,EAAsBp4B,KAAKqB,KAAKi1B,EAAeA,EAAe,GACxFgC,EAAiBvF,IACb,MAAMqD,EAAWp2B,KAAK02B,KAAKJ,EAAe8B,EAAsBrF,GAE1D4F,EAAW34B,KAAK0D,IAAIg1B,EAAoB3F,EAAG,KACjD,OAAQ7b,EACHkf,IACK8B,EACE5B,EAAe8B,EAAsBD,GACrCn4B,KAAK44B,KAAKD,GACVD,EACIP,EACAn4B,KAAK64B,KAAKF,IAClBD,EAEhB,CACA,MAAMlD,EAAY,CACdsD,mBAAoBjB,GAAyB3C,GAAmB,KAChElS,KAAO+P,IACH,MAAMrrB,EAAU4wB,EAAcvF,GAC9B,GAAK8E,EAmBD9tB,EAAM0rB,KAAO1C,GAAKmC,MAnBO,CACzB,IAAI6D,EAAwB,IAANhG,EAAUmF,EAAkB,EAM9C5B,EAAe,IACfyC,EACU,IAANhG,EACM,GAAsBmF,GACtBvC,GAAsB2C,EAAevF,EAAGrrB,IAEtD,MAAMsxB,EAA2Bh5B,KAAKe,IAAIg4B,IAAoBpB,EACxDsB,EAA+Bj5B,KAAKe,IAAImW,EAASxP,IAAYkwB,EACnE7tB,EAAM0rB,KACFuD,GAA4BC,CACpC,CAKA,OADAlvB,EAAMtH,MAAQsH,EAAM0rB,KAAOve,EAASxP,EAC7BqC,GAEX2I,SAAU,KACN,MAAMomB,EAAqB94B,KAAK0D,IAAI6xB,GAAsBC,GAAYF,IAChEL,EAASD,GAAsBjxB,GAAayxB,EAAUxS,KAAK8V,EAAqB/0B,GAAUtB,MAAOq2B,EAAoB,IAC3H,OAAOA,EAAqB,MAAQ7D,GAExCiE,aAAc,QAElB,OAAO1D,CACX,CClKA,SAAS2D,IAAQ,UAAE7pB,EAAS,SAAE8J,EAAW,EAAG,MAAEggB,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAE91B,EAAG,IAAEC,EAAG,UAAEi0B,EAAY,GAAG,UAAED,IAC/J,MAAM1gB,EAAS3H,EAAU,GACnBvF,EAAQ,CACV0rB,MAAM,EACNhzB,MAAOwU,GAGLwiB,EAAmBt5B,QACT8D,IAARP,EACOC,OACCM,IAARN,GAEG3D,KAAKe,IAAI2C,EAAMvD,GAAKH,KAAKe,IAAI4C,EAAMxD,GAD/BuD,EAC0CC,EAEzD,IAAI+1B,EAAYN,EAAQhgB,EACxB,MAAMugB,EAAQ1iB,EAASyiB,EACjBxiB,OAA0BjT,IAAjBu1B,EAA6BG,EAAQH,EAAaG,GAK7DziB,IAAWyiB,IACXD,EAAYxiB,EAASD,GACzB,MAAM2iB,EAAa7G,IAAO2G,EAAY15B,KAAK02B,KAAK3D,EAAIsG,GAC9CQ,EAAc9G,GAAM7b,EAAS0iB,EAAU7G,GACvC+G,EAAiB/G,IACnB,MAAM/oB,EAAQ4vB,EAAU7G,GAClB9N,EAAS4U,EAAW9G,GAC1BhpB,EAAM0rB,KAAOz1B,KAAKe,IAAIiJ,IAAU4tB,EAChC7tB,EAAMtH,MAAQsH,EAAM0rB,KAAOve,EAAS+N,GAQxC,IAAI8U,EACAC,EACJ,MAAMC,EAAsBlH,IAjCN,IAAC5yB,KAkCA4J,EAAMtH,WAlCSwB,IAARP,GAAqBvD,EAAIuD,QAAiBO,IAARN,GAAqBxD,EAAIwD,KAoCrFo2B,EAAsBhH,EACtBiH,EAAWxC,GAAO,CACdloB,UAAW,CAACvF,EAAMtH,MAAOg3B,EAAgB1vB,EAAMtH,QAC/C2W,SAAUuc,GAAsBkE,EAAY9G,EAAGhpB,EAAMtH,OACrD20B,QAASkC,EACTnC,UAAWoC,EACX3B,YACAD,gBAIR,OADAsC,EAAmB,GACZ,CACHnB,mBAAoB,KACpB9V,KAAO+P,IAOH,IAAImH,GAAkB,EAUtB,OATKF,QAAoC/1B,IAAxB81B,IACbG,GAAkB,EAClBJ,EAAc/G,GACdkH,EAAmBlH,SAMK9uB,IAAxB81B,GAAqChH,GAAKgH,EACnCC,EAAShX,KAAK+P,EAAIgH,KAGxBG,GAAmBJ,EAAc/G,GAC3BhpB,IAIvB,CDkFAytB,GAAO2C,eAAkB1gB,IACrB,MAAM2gB,EEjKV,SAA+B3gB,EAAS3Y,EAAQ,IAAKu5B,GACjD,MAAM7E,EAAY6E,EAAgB,IAAK5gB,EAASnK,UAAW,CAAC,EAAGxO,KACzDo0B,EAAWl1B,KAAK0D,IAAI6xB,GAAsBC,GAAYF,IAC5D,MAAO,CACHnuB,KAAM,YACNmzB,KAAOv2B,GACIyxB,EAAUxS,KAAKkS,EAAWnxB,GAAUtB,MAAQ3B,EAEvDo0B,SAAU3C,GAAsB2C,GAExC,CFuJ6BqF,CAAsB9gB,EAAS,IAAK+d,IAI7D,OAHA/d,EAAQ6gB,KAAOF,EAAiBE,KAChC7gB,EAAQyb,SAAW,GAAsBkF,EAAiBlF,UAC1Dzb,EAAQtS,KAAO,YACRsS,GGvJX,MAAM+gB,GAAa,CAACzH,EAAG0H,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAM1H,GAAK,EAAM2H,EAAK,EAAMD,IAAO1H,EAAI,EAAM0H,GACrG1H,EAoBJ,SAAS4H,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO3xB,GACX,MAAM4xB,EAAYC,GArBtB,SAAyBz6B,EAAG06B,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAzuB,EAAI,EACR,GACIyuB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWZ,GAAWa,EAAUT,EAAKE,GAAOt6B,EACxC46B,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZr7B,KAAKe,IAAIq6B,GAfO,QAgBnBxuB,EAfuB,IAgB7B,OAAOyuB,CACX,CAK6BC,CAAgBL,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQ/H,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIyH,GAAWQ,EAASjI,GAAI8H,EAAKE,EACxE,CC9CA,MAAMQ,GAAuBZ,GAAY,IAAM,EAAG,EAAG,GAC/Ca,GAAwBb,GAAY,EAAG,EAAG,IAAM,GAChDc,GAA0Bd,GAAY,IAAM,EAAG,IAAM,GCFrDe,GAAgBzG,GAAYpC,GAAMA,GAAK,GAAMoC,EAAO,EAAIpC,GAAK,GAAK,EAAIoC,EAAO,GAAK,EAAIpC,KAAO,ECA7F8I,GAAiB1G,GAAYpC,GAAM,EAAIoC,EAAO,EAAIpC,GCElD+I,GAAwBjB,GAAY,IAAM,KAAM,IAAM,KACtDkB,GAAuBF,GAAcC,IACrCE,GAA0BJ,GAAaG,ICJvCE,GAAclJ,IAAOA,GAAK,GAAK,EAAI,GAAMgJ,GAAOhJ,GAAK,IAAO,EAAI7yB,KAAK62B,IAAI,GAAI,IAAMhE,EAAI,KCCvFmJ,GAAUnJ,GAAM,EAAI7yB,KAAKw4B,IAAIx4B,KAAKi8B,KAAKpJ,IACvCqJ,GAAUP,GAAcK,IACxBG,GAAYT,GAAaM,ICLzBI,GAAsBnH,GAAW3nB,MAAMwQ,QAAQmX,IAAgC,iBAAdA,EAAO,GCSxEoH,GAAe,CACjBC,OAAQlzB,GACRmyB,OAAM,GACNE,UAAS,GACTD,QAAO,GACPQ,OAAM,GACNG,UAAS,GACTD,QAAO,GACPL,OAAM,GACNC,UAAS,GACTF,QAAO,GACPG,WAAU,IAKRQ,GAA8Bhe,IAChC,GAAI6d,GAAmB7d,GAAa,CAEtBA,EAAW5X,OACrB,MAAO61B,EAAIC,EAAIC,EAAIC,GAAMpe,EACzB,OAAOoc,GAAY6B,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAToB,iBASFpe,EAGZ8d,GAAa9d,GAEjBA,GCxBLxa,GAAW,CAACF,EAAMC,EAAIrB,KACxB,MAAMm6B,EAAmB94B,EAAKD,EAC9B,OAA4B,IAArB+4B,EAAyB,GAAKn6B,EAAQoB,GAAQ+4B,GCqBzD,SAASC,GAAYC,EAAO1pB,GAAUjN,MAAO42B,GAAU,EAAI,KAAEzC,EAAI,MAAEzF,GAAU,CAAC,GAC1E,MAAMmI,EAAcF,EAAMn2B,OAM1B,GAL0ByM,EAAOzM,OAKb,IAAhBq2B,EACA,MAAO,IAAM5pB,EAAO,GACxB,GAAoB,IAAhB4pB,GAAqB5pB,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAM6pB,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOI,UACnB9pB,EAAS,IAAIA,GAAQ8pB,WAEzB,MAAMC,EAlDV,SAAsB/pB,EAAQknB,EAAM8C,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAe9zB,GAAmBsrB,KAAOA,GACxD0I,EAAYlqB,EAAOzM,OAAS,EAClC,IAAK,IAAIiG,EAAI,EAAGA,EAAI0wB,EAAW1wB,IAAK,CAChC,IAAIioB,EAAQwI,EAAajqB,EAAOxG,GAAIwG,EAAOxG,EAAI,IAC/C,GAAI0tB,EAAM,CACN,MAAMiD,EAAiBjwB,MAAMwQ,QAAQwc,GAAQA,EAAK1tB,IAAMxD,GAAOkxB,EAC/DzF,EAAQzC,GAAKmL,EAAgB1I,EACjC,CACAsI,EAAOtxB,KAAKgpB,EAChB,CACA,OAAOsI,CACX,CAqCmBK,CAAapqB,EAAQknB,EAAMzF,GACpCyI,EAAYH,EAAOx2B,OACnB82B,EAAgBt9B,IAClB,GAAI88B,GAAoB98B,EAAI28B,EAAM,GAC9B,OAAO1pB,EAAO,GAClB,IAAIxG,EAAI,EACR,GAAI0wB,EAAY,EACZ,KAAO1wB,EAAIkwB,EAAMn2B,OAAS,KAClBxG,EAAI28B,EAAMlwB,EAAI,IADOA,KAKjC,MAAM8wB,EAAkB35B,GAAS+4B,EAAMlwB,GAAIkwB,EAAMlwB,EAAI,GAAIzM,GACzD,OAAOg9B,EAAOvwB,GAAG8wB,IAErB,OAAOX,EACA58B,GAAMs9B,EAAat3B,EAAM22B,EAAM,GAAIA,EAAME,EAAc,GAAI78B,IAC5Ds9B,CACV,CCrEA,SAASE,GAAcplB,GACnB,MAAMwO,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQ6W,GACxB,MAAMl6B,EAAMqjB,EAAOA,EAAOpgB,OAAS,GACnC,IAAK,IAAIiG,EAAI,EAAGA,GAAKgxB,EAAWhxB,IAAK,CACjC,MAAMixB,EAAiB95B,GAAS,EAAG65B,EAAWhxB,GAC9Cma,EAAOlb,KAAKjI,EAAUF,EAAK,EAAGm6B,GAClC,CACJ,CDLIC,CAAW/W,EAAQxO,EAAI5R,OAAS,GACzBogB,CACX,CEEA,SAASzX,IAAU,SAAE4lB,EAAW,IAAK5lB,UAAWyuB,EAAc,MAAEC,EAAK,KAAE1D,EAAO,cAK1E,MAAM2D,ECbY,CAAC3D,GACZhtB,MAAMwQ,QAAQwc,IAA4B,iBAAZA,EAAK,GDYlB4D,CAAc5D,GAChCA,EAAK/3B,IAAIg6B,IACTA,GAA2BjC,GAK3BvwB,EAAQ,CACV0rB,MAAM,EACNhzB,MAAOs7B,EAAe,IAKpBI,EE3BV,SAA8BpX,EAAQmO,GAClC,OAAOnO,EAAOxkB,IAAK67B,GAAMA,EAAIlJ,EACjC,CFyB0BmJ,CAGtBL,GAASA,EAAMr3B,SAAWo3B,EAAep3B,OACnCq3B,EACAL,GAAcI,GAAiB7I,GAC/BoJ,EAAoBzB,GAAYsB,EAAeJ,EAAgB,CACjEzD,KAAMhtB,MAAMwQ,QAAQmgB,GACdA,GA9BS57B,EA+BK07B,EA/BG9I,EA+BagJ,EA9BjC57B,EAAOE,IAAI,IAAM0yB,GAAUwG,IAAW7iB,OAAO,EAAGvW,EAAOsE,OAAS,MAD3E,IAAuBtE,EAAQ4yB,EAiC3B,MAAO,CACH6D,mBAAoB5D,EACpBlS,KAAO+P,IACHhpB,EAAMtH,MAAQ67B,EAAkBvL,GAChChpB,EAAM0rB,KAAO1C,GAAKmC,EACXnrB,GAGnB,CG9CA,MAAMw0B,GAAa97B,GAAoB,OAAVA,EAC7B,SAAS+7B,GAAiBlvB,GAAW,OAAEmvB,EAAM,WAAEC,EAAa,QAAUvvB,EAAewvB,EAAQ,GACzF,MAAMC,EAAoBtvB,EAAU5G,OAAO61B,IAErC5lB,EADmBgmB,EAAQ,GAAMF,GAAyB,SAAfC,GAAyBD,EAAS,GAAM,EACxD,EAAIG,EAAkBj4B,OAAS,EAChE,OAAQgS,QAA2B1U,IAAlBkL,EAEXA,EADAyvB,EAAkBjmB,EAE5B,CCJA,MAAMkmB,GAAoB,CACtBC,MAAO3F,GACPA,QAAO,GACP4F,MAAOzvB,GACPA,UAAWA,GACXkoB,OAAM,IAEV,SAASwH,GAAsBnb,GACI,iBAApBA,EAAW1c,OAClB0c,EAAW1c,KAAO03B,GAAkBhb,EAAW1c,MAEvD,CCfA,MAAM83B,GACF,WAAAtwB,GACIK,KAAKkwB,gBACT,CACA,YAAIC,GACA,OAAOnwB,KAAKowB,SAChB,CACA,cAAAF,GACIlwB,KAAKowB,UAAY,IAAIvjB,QAASC,IAC1B9M,KAAK8M,QAAUA,GAEvB,CACA,cAAAujB,GACIrwB,KAAK8M,SACT,CAMA,IAAAG,CAAKqjB,EAAWC,GACZ,OAAOvwB,KAAKmwB,SAASljB,KAAKqjB,EAAWC,EACzC,ECVJ,MAAMC,GAAqB34B,GAAYA,EAAU,IACjD,MAAM44B,WAAoBR,GACtB,WAAAtwB,CAAY8K,GACR3C,QACA9H,KAAKjF,MAAQ,OACbiF,KAAK0wB,UAAY,KACjB1wB,KAAK2wB,WAAY,EAIjB3wB,KAAK6K,YAAc,EAInB7K,KAAK4wB,SAAW,KAIhB5wB,KAAK6wB,cAAgB,EAKrB7wB,KAAKgM,KAAO,KACR,MAAM,YAAElM,GAAgBE,KAAKyK,QACzB3K,GAAeA,EAAYgL,YAAc3B,GAAKxL,OAC9CqC,KAAK8wB,KAAK3nB,GAAKxL,OAEnBqC,KAAK2wB,WAAY,EACE,SAAf3wB,KAAKjF,QAETiF,KAAK+wB,WACL/wB,KAAKyK,QAAQumB,aAEjBvN,GAAiBC,aACjB1jB,KAAKyK,QAAUA,EACfzK,KAAKixB,gBACLjxB,KAAKkxB,QACoB,IAArBzmB,EAAQ0mB,UACRnxB,KAAKoxB,OACb,CACA,aAAAH,GACI,MAAM,QAAExmB,GAAYzK,KACpBgwB,GAAsBvlB,GACtB,MAAM,KAAEtS,EAAOmI,GAAS,OAAEmvB,EAAS,EAAC,YAAE4B,EAAc,EAAC,WAAE3B,EAAU,SAAEtlB,EAAW,GAAOK,EACrF,IAAMnK,UAAWgxB,GAAgB7mB,EACjC,MAAM8mB,EAAmBp5B,GAAQmI,GAK7BixB,IAAqBjxB,IACK,iBAAnBgxB,EAAY,KACnBtxB,KAAKwxB,aAAepO,GAAKoN,GAAmB5K,GAAI0L,EAAY,GAAIA,EAAY,KAC5EA,EAAc,CAAC,EAAG,MAEtB,MAAM9K,EAAY+K,EAAiB,IAAK9mB,EAASnK,UAAWgxB,IAKzC,WAAf5B,IACA1vB,KAAKyxB,kBAAoBF,EAAiB,IACnC9mB,EACHnK,UAAW,IAAIgxB,GAAapD,UAC5B9jB,UAAWA,KAWkB,OAAjCoc,EAAUsD,qBACVtD,EAAUsD,mBAAqBvD,GAAsBC,IAEzD,MAAM,mBAAEsD,GAAuBtD,EAC/BxmB,KAAK8pB,mBAAqBA,EAC1B9pB,KAAK0xB,iBAAmB5H,EAAqBuH,EAC7CrxB,KAAK2xB,cAAgB3xB,KAAK0xB,kBAAoBjC,EAAS,GAAK4B,EAC5DrxB,KAAKwmB,UAAYA,CACrB,CACA,UAAAoL,CAAW32B,GACP,MAAM42B,EAAgB7gC,KAAK+P,MAAM9F,EAAY+E,KAAK0wB,WAAa1wB,KAAK6wB,cAE9C,OAAlB7wB,KAAK4wB,SACL5wB,KAAK6K,YAAc7K,KAAK4wB,SAMxB5wB,KAAK6K,YAAcgnB,CAE3B,CACA,IAAAf,CAAK71B,EAAW62B,GAAS,GACrB,MAAM,UAAEtL,EAAS,cAAEmL,EAAa,aAAEH,EAAY,kBAAEC,EAAiB,iBAAEC,EAAgB,mBAAE5H,GAAwB9pB,KAC7G,GAAuB,OAAnBA,KAAK0wB,UACL,OAAOlK,EAAUxS,KAAK,GAC1B,MAAM,MAAE+d,EAAQ,EAAC,UAAEzxB,EAAS,OAAEmvB,EAAM,WAAEC,EAAU,YAAE2B,EAAW,KAAEl5B,EAAI,SAAEya,EAAQ,cAAEzS,GAAmBH,KAAKyK,QAOnGzK,KAAK2vB,MAAQ,EACb3vB,KAAK0wB,UAAY1/B,KAAK0D,IAAIsL,KAAK0wB,UAAWz1B,GAErC+E,KAAK2vB,MAAQ,IAClB3vB,KAAK0wB,UAAY1/B,KAAK0D,IAAIuG,EAAY02B,EAAgB3xB,KAAK2vB,MAAO3vB,KAAK0wB,YAEvEoB,EACA9xB,KAAK6K,YAAc5P,EAGnB+E,KAAK4xB,WAAW32B,GAGpB,MAAM+2B,EAAmBhyB,KAAK6K,YAAcknB,GAAS/xB,KAAK6wB,eAAiB,EAAI,GAAK,GAC9EoB,EAAiBjyB,KAAK6wB,eAAiB,EACvCmB,EAAmB,EACnBA,EAAmBL,EACzB3xB,KAAK6K,YAAc7Z,KAAK2D,IAAIq9B,EAAkB,GAE3B,aAAfhyB,KAAKjF,OAA0C,OAAlBiF,KAAK4wB,WAClC5wB,KAAK6K,YAAc8mB,GAEvB,IAAIO,EAAUlyB,KAAK6K,YACfsnB,EAAiB3L,EACrB,GAAIiJ,EAAQ,CAMR,MAAM16B,EAAW/D,KAAK0D,IAAIsL,KAAK6K,YAAa8mB,GAAiBD,EAK7D,IAAIU,EAAmBphC,KAAKqhC,MAAMt9B,GAK9Bu9B,EAAoBv9B,EAAW,GAK9Bu9B,GAAqBv9B,GAAY,IAClCu9B,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBphC,KAAK0D,IAAI09B,EAAkB3C,EAAS,GAIhCruB,QAAQgxB,EAAmB,KAE3B,YAAf1C,GACA4C,EAAoB,EAAIA,EACpBjB,IACAiB,GAAqBjB,EAAcK,IAGnB,WAAfhC,IACLyC,EAAiBV,IAGzBS,EAAU/6B,EAAM,EAAG,EAAGm7B,GAAqBZ,CAC/C,CAMA,MAAM32B,EAAQk3B,EACR,CAAExL,MAAM,EAAOhzB,MAAO6M,EAAU,IAChC6xB,EAAene,KAAKke,GACtBV,IACAz2B,EAAMtH,MAAQ+9B,EAAaz2B,EAAMtH,QAErC,IAAI,KAAEgzB,GAAS1rB,EACVk3B,GAAyC,OAAvBnI,IACnBrD,EACIzmB,KAAK6wB,eAAiB,EAChB7wB,KAAK6K,aAAe8mB,EACpB3xB,KAAK6K,aAAe,GAElC,MAAM0nB,EAAwC,OAAlBvyB,KAAK4wB,WACb,aAAf5wB,KAAKjF,OAAwC,YAAfiF,KAAKjF,OAAuB0rB,GAW/D,OATI8L,GAAuBp6B,IAASgyB,KAChCpvB,EAAMtH,MAAQ+7B,GAAiBlvB,EAAWN,KAAKyK,QAAStK,EAAeH,KAAK2vB,QAE5E/c,GACAA,EAAS7X,EAAMtH,OAEf8+B,GACAvyB,KAAKwyB,SAEFz3B,CACX,CAMA,IAAAkS,CAAKH,EAAS2lB,GACV,OAAOzyB,KAAKmwB,SAASljB,KAAKH,EAAS2lB,EACvC,CACA,YAAIvM,GACA,OAAO3C,GAAsBvjB,KAAK8pB,mBACtC,CACA,QAAI3gB,GACA,OAAOoa,GAAsBvjB,KAAK6K,YACtC,CACA,QAAI1B,CAAKC,GACLA,EAAU,GAAsBA,GAChCpJ,KAAK6K,YAAczB,EACI,OAAnBpJ,KAAK0wB,WACa,OAAlB1wB,KAAK4wB,UACkB,IAAvB5wB,KAAK6wB,cACL7wB,KAAK4wB,SAAWxnB,EAEXpJ,KAAK0yB,SACV1yB,KAAK0wB,UAAY1wB,KAAK0yB,OAAO/0B,MAAQyL,EAAUpJ,KAAK6wB,eAExD7wB,KAAK0yB,QAAQ/lB,OAAM,EACvB,CACA,SAAIgjB,GACA,OAAO3vB,KAAK6wB,aAChB,CACA,SAAIlB,CAAMgD,GACN3yB,KAAK4xB,WAAWzoB,GAAKxL,OACrB,MAAMi1B,EAAa5yB,KAAK6wB,gBAAkB8B,EAC1C3yB,KAAK6wB,cAAgB8B,EACjBC,IACA5yB,KAAKmJ,KAAOoa,GAAsBvjB,KAAK6K,aAE/C,CACA,IAAAqmB,GACI,GAAIlxB,KAAK2wB,UACL,OACJ,MAAM,OAAE+B,EAAS5M,GAAe,UAAE4K,GAAc1wB,KAAKyK,QAChDzK,KAAK0yB,SACN1yB,KAAK0yB,OAASA,EAAQz3B,GAAc+E,KAAK8wB,KAAK71B,KAElD+E,KAAKyK,QAAQooB,WACb,MAAMl1B,EAAMqC,KAAK0yB,OAAO/0B,MACL,aAAfqC,KAAKjF,OACLiF,KAAKkwB,iBACLlwB,KAAK0wB,UAAY/yB,GAEM,OAAlBqC,KAAK4wB,SACV5wB,KAAK0wB,UAAY/yB,EAAMqC,KAAK4wB,SAEtB5wB,KAAK0wB,YACX1wB,KAAK0wB,UAAYA,GAAa/yB,GAEf,aAAfqC,KAAKjF,OAAwBiF,KAAK2vB,MAAQ,IAC1C3vB,KAAK0wB,WAAa1wB,KAAK8pB,oBAE3B9pB,KAAK4wB,SAAW,KAKhB5wB,KAAKjF,MAAQ,UACbiF,KAAK0yB,OAAO/lB,OAChB,CACA,KAAAykB,GACIpxB,KAAKjF,MAAQ,SACbiF,KAAK4xB,WAAWzoB,GAAKxL,OACrBqC,KAAK4wB,SAAW5wB,KAAK6K,WACzB,CACA,QAAAtL,GACuB,YAAfS,KAAKjF,OACLiF,KAAKkxB,OAETlxB,KAAKjF,MAAQ,WACbiF,KAAK4wB,SAAW,IACpB,CACA,MAAA4B,GACIxyB,KAAKqwB,iBACLrwB,KAAK+wB,WACL/wB,KAAKjF,MAAQ,WACbiF,KAAKyK,QAAQ5K,cACjB,CACA,MAAAtD,GACIyD,KAAK4wB,SAAW,KAChB5wB,KAAK0wB,UAAY,EACjB1wB,KAAK8wB,KAAK,GACV9wB,KAAK+wB,WACL/wB,KAAKyK,QAAQqoB,YACjB,CACA,QAAA/B,GACI/wB,KAAKjF,MAAQ,OACbiF,KAAK+yB,aACL/yB,KAAK0wB,UAAY1wB,KAAK4wB,SAAW,KACjCnN,GAAiBC,YACrB,CACA,UAAAqP,GACS/yB,KAAK0yB,SAEV1yB,KAAK0yB,OAAO1mB,OACZhM,KAAK0yB,YAASz9B,EAClB,CACA,MAAA68B,CAAOkB,GAEH,OADAhzB,KAAK0wB,UAAY,EACV1wB,KAAK8wB,KAAKkC,GAAY,EACjC,CACA,cAAAC,CAAeC,GAOX,OANIlzB,KAAKyK,QAAQ0oB,eACbnzB,KAAKyK,QAAQtS,KAAO,YACpB6H,KAAKyK,QAAQ6gB,KAAO,SACpBtrB,KAAKixB,iBAETjxB,KAAK0yB,QAAQ1mB,OACNknB,EAASE,QAAQpzB,KAC5B,EChVJ,SAASqzB,GAAKr3B,GACV,IAAIgsB,EACJ,MAAO,UACY/yB,IAAX+yB,IACAA,EAAShsB,KACNgsB,EAEf,CCNA,MAAMsL,GAAyCD,GAAK,SAAgCp+B,IAA1BkE,OAAOo6B,gBCE3DC,GAAgB,CAAC,ECDvB,SAASC,GAAaz3B,EAAU03B,GAC5B,MAAMC,EAAWN,GAAKr3B,GACtB,MAAO,IAAMw3B,GAAcE,IAAiBC,GAChD,CCJA,MAAMC,GAAqCH,GAAa,KACpD,IACII,SACK5W,cAAc,OACd/N,QAAQ,CAAEzI,QAAS,GAAK,CAAEwf,OAAQ,gBAC3C,CACA,MAAO2B,GACH,OAAO,CACX,CACA,OAAO,GACR,gBCZGkM,GAAsB,EAAEhyB,EAAGC,EAAGC,EAAG2lB,KAAO,gBAAgB7lB,MAAMC,MAAMC,MAAM2lB,KCE1EoM,GAAuB,CACzBzG,OAAQ,SACRhC,KAAM,OACNiB,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXO,OAAsB8G,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC1D5G,QAAuB4G,GAAoB,CAAC,IAAM,EAAG,EAAG,MACxDjH,OAAsBiH,GAAoB,CAAC,IAAM,IAAM,KAAO,MAC9DlH,QAAuBkH,GAAoB,CAAC,IAAM,KAAM,IAAM,OCLlE,SAASE,GAAwB/N,EAAQC,GACrC,OAAKD,EAGsB,mBAAXA,EACL2N,KACD5N,GAAqBC,EAAQC,GAC7B,WAEDkH,GAAmBnH,GACjB6N,GAAoB7N,GAEtB3nB,MAAMwQ,QAAQmX,GACZA,EAAO1yB,IAAK0gC,GAAkBD,GAAwBC,EAAe/N,IACxE6N,GAAqBvH,SAGlBuH,GAAqB9N,QAf5B,CAiBR,CCrBA,SAASiO,GAAoBv7B,EAASw7B,EAAW7zB,GAAW,MAAEyxB,EAAQ,EAAC,SAAE7L,EAAW,IAAG,OAAEuJ,EAAS,EAAC,WAAEC,EAAa,OAAM,KAAEpE,EAAO,UAAS,MAAE0D,GAAW,CAAC,EAAGoF,OAAgBn/B,GACvK,MAAMo/B,EAAkB,CACpB,CAACF,GAAY7zB,GAEb0uB,IACAqF,EAAgBtc,OAASiX,GAC7B,MAAM/I,EAAS+N,GAAwB1I,EAAMpF,GAIzC5nB,MAAMwQ,QAAQmX,KACdoO,EAAgBpO,OAASA,GACzBzrB,GAAY/G,OACZgwB,GAAiBE,QAErB,MAAMlZ,EAAU,CACZsnB,QACA7L,WACAD,OAAS3nB,MAAMwQ,QAAQmX,GAAmB,SAATA,EACjC/e,KAAM,OACNotB,WAAY7E,EAAS,EACrB8E,UAA0B,YAAf7E,EAA2B,YAAc,UAEpD0E,IACA3pB,EAAQ2pB,cAAgBA,GAC5B,MAAMrnB,EAAYpU,EAAQuW,QAAQmlB,EAAiB5pB,GAMnD,OALIjQ,GAAY/G,OACZsZ,EAAUojB,SAASqE,QAAQ,KACvB/Q,GAAiBE,UAGlB5W,CACX,CCpCA,SAAS0nB,GAAYt8B,GACjB,MAAuB,mBAATA,GAAuB,mBAAoBA,CAC7D,CCSA,MAAMu8B,WAAwBzE,GAC1B,WAAAtwB,CAAY8K,GAIR,GAHA3C,QACA9H,KAAK20B,aAAe,KACpB30B,KAAK2wB,WAAY,GACZlmB,EACD,OACJ,MAAM,QAAE9R,EAAO,KAAE/F,EAAI,UAAE0N,EAAS,cAAE8zB,EAAa,aAAEjB,GAAe,EAAK,cAAEhzB,EAAa,WAAEN,GAAgB4K,EACtGzK,KAAK40B,gBAAkBxzB,QAAQgzB,GAC/Bp0B,KAAKmzB,aAAeA,EACpBnzB,KAAKyK,QAAUA,EACEA,EAAQtS,KACzB,MAAM0c,ECpBd,UAA+B,KAAE1c,KAASsS,IACtC,OAAIgqB,GAAYt8B,IAASy7B,KACdz7B,EAAKgzB,eAAe1gB,IAG3BA,EAAQyb,WAAazb,EAAQyb,SAAW,KACxCzb,EAAQ6gB,OAAS7gB,EAAQ6gB,KAAO,WAE7B7gB,EACX,CDW2BoqB,CAAsBpqB,GACzCzK,KAAK+M,UAAYmnB,GAAoBv7B,EAAS/F,EAAM0N,EAAWuU,EAAYuf,IAC/C,IAAxBvf,EAAWsc,UACXnxB,KAAK+M,UAAUqkB,QAEnBpxB,KAAK+M,UAAU+nB,SAAW,KAEtB,GADA90B,KAAK20B,aAAe30B,KAAKmJ,MACpBirB,EAAe,CAChB,MAAMrsB,EAAWynB,GAAiBlvB,EAAWN,KAAKyK,QAAStK,EAAeH,KAAK2vB,OAC3E3vB,KAAK+0B,kBACL/0B,KAAK+0B,kBAAkBhtB,GE/B3C,SAAkBpP,EAAS/F,EAAMa,GCFhB,CAACb,GAASA,EAAKmB,WAAW,MDGvCihC,CAASpiC,GACH+F,EAAQoY,MAAMmG,YAAYtkB,EAAMa,GAC/BkF,EAAQoY,MAAMne,GAAQa,CACjC,CFkCoBwhC,CAASt8B,EAAS/F,EAAMmV,GAE5B/H,KAAK+M,UAAUxQ,QACnB,CACAsD,MACAG,KAAKqwB,iBAEb,CACA,IAAAa,GACQlxB,KAAK2wB,YAET3wB,KAAK+M,UAAUmkB,OACI,aAAflxB,KAAKjF,OACLiF,KAAKkwB,iBAEb,CACA,KAAAkB,GACIpxB,KAAK+M,UAAUqkB,OACnB,CACA,QAAA7xB,GACIS,KAAK+M,UAAUylB,UACnB,CACA,MAAAj2B,GACI,IACIyD,KAAK+M,UAAUxQ,QACnB,CACA,MAAOqrB,GAAK,CAChB,CACA,IAAA5b,GACI,GAAIhM,KAAK2wB,UACL,OACJ3wB,KAAK2wB,WAAY,EACjB,MAAM,MAAE51B,GAAUiF,KACJ,SAAVjF,GAA8B,aAAVA,IAGpBiF,KAAK+0B,kBACL/0B,KAAK+0B,oBAGL/0B,KAAKk1B,eAEJl1B,KAAK40B,iBACN50B,KAAKzD,SACb,CAaA,YAAA24B,GACSl1B,KAAK40B,iBACN50B,KAAK+M,UAAUmoB,gBAEvB,CACA,YAAIhP,GACA,MAAMA,EAAWlmB,KAAK+M,UAAUooB,QAAQC,sBAAsBlP,UAAY,EAC1E,OAAO3C,GAAsB8R,OAAOnP,GACxC,CACA,QAAI/c,GACA,OAAOoa,GAAsB8R,OAAOr1B,KAAK+M,UAAUlC,cAAgB,EACvE,CACA,QAAI1B,CAAKC,GACLpJ,KAAK20B,aAAe,KACpB30B,KAAK+M,UAAUlC,YAAc,GAAsBzB,EACvD,CAKA,SAAIumB,GACA,OAAO3vB,KAAK+M,UAAUuoB,YAC1B,CACA,SAAI3F,CAAMgD,GAEFA,EAAW,IACX3yB,KAAK20B,aAAe,MACxB30B,KAAK+M,UAAUuoB,aAAe3C,CAClC,CACA,SAAI53B,GACA,OAA6B,OAAtBiF,KAAK20B,aACN,WACA30B,KAAK+M,UAAUwoB,SACzB,CACA,aAAI7E,GACA,OAAO2E,OAAOr1B,KAAK+M,UAAU2jB,UACjC,CACA,aAAIA,CAAU8E,GACVx1B,KAAK+M,UAAU2jB,UAAY8E,CAC/B,CAIA,cAAAvC,EAAe,SAAEC,EAAQ,QAAEE,IAKvB,OAJIpzB,KAAKmzB,cACLnzB,KAAK+M,UAAUooB,QAAQM,aAAa,CAAExP,OAAQ,WAElDjmB,KAAK+M,UAAU+nB,SAAW,KACtB5B,GAAYI,MACZtzB,KAAK+M,UAAUmmB,SAAWA,EACnB94B,IAGAg5B,EAAQpzB,KAEvB,EItJJ,MAAM01B,GAA6B,CAC/B3I,WAAU,GACVD,UAAS,GACTK,UAAS,IAKb,SAASwI,GAAoB9gB,GACM,iBAApBA,EAAWyW,MACAzW,EAAWyW,QAJnBoK,KAKV7gB,EAAWyW,KAAOoK,GAA2B7gB,EAAWyW,MAEhE,CCHA,MAAMsK,WAAgClB,GAClC,WAAA/0B,CAAY8K,GAURkrB,GAAoBlrB,GAQpBulB,GAAsBvlB,GACtB3C,MAAM2C,GACFA,EAAQimB,YACR1wB,KAAK0wB,UAAYjmB,EAAQimB,WAE7B1wB,KAAKyK,QAAUA,CACnB,CASA,iBAAAsqB,CAAkBthC,GACd,MAAM,YAAEqM,EAAW,SAAE8S,EAAQ,WAAE/S,EAAU,QAAElH,KAAY8R,GAAYzK,KAAKyK,QACxE,IAAK3K,EACD,OACJ,QAAc7K,IAAVxB,EAEA,YADAqM,EAAYd,IAAIvL,GAGpB,MAAMoiC,EAAkB,IAAIpF,GAAY,IACjChmB,EACH0mB,UAAU,IAER6B,EAAa,GAAsBhzB,KAAK20B,cAAgB30B,KAAKmJ,MACnErJ,EAAYwM,gBAAgBupB,EAAgB/D,OAAOkB,EAhDvC,IAgDiEv/B,MAAOoiC,EAAgB/D,OAAOkB,GAAYv/B,MAhD3G,IAiDZoiC,EAAgB7pB,MACpB,EClDJ,MAAM8pB,GAAe,CAACriC,EAAOb,IAEZ,WAATA,MAKiB,iBAAVa,IAAsB6K,MAAMwQ,QAAQrb,OAE1B,iBAAVA,IACN6Q,GAAQlQ,KAAKX,IAAoB,MAAVA,GACvBA,EAAMM,WAAW,UCjB1B,MAAMgiC,GAAoB,IAAIllC,IAAI,CAC9B,UACA,WACA,SACA,cAIEmlC,GAA8B3C,GAAK,IAAM/xB,OAAOE,eAAeC,KAAKw0B,QAAQ10B,UAAW,YCM7F,MAAM20B,WAAkCjG,GACpC,WAAAtwB,EAAY,SAAEwxB,GAAW,EAAI,MAAEY,EAAQ,EAAC,KAAE55B,EAAO,YAAW,OAAEs3B,EAAS,EAAC,YAAE4B,EAAc,EAAC,WAAE3B,EAAa,OAAM,UAAEpvB,EAAS,KAAE1N,EAAI,YAAEkN,EAAW,QAAEnH,KAAY8R,IACtJ3C,QAIA9H,KAAKgM,KAAO,KACJhM,KAAKm2B,aACLn2B,KAAKm2B,WAAWnqB,OAChBhM,KAAKo2B,kBAETp2B,KAAKq2B,kBAAkB95B,UAE3ByD,KAAKs2B,UAAYntB,GAAKxL,MACtB,MAAM44B,EAAsB,CACxBpF,WACAY,QACA55B,OACAs3B,SACA4B,cACA3B,aACA98B,OACAkN,cACAnH,aACG8R,GAED+rB,EAAqB79B,GAAS+G,kBAAoBA,GACxDM,KAAKq2B,iBAAmB,IAAIG,EAAmBl2B,EAAW,CAACsvB,EAAmBzvB,EAAes2B,IAAWz2B,KAAK02B,oBAAoB9G,EAAmBzvB,EAAeo2B,GAAsBE,GAAS7jC,EAAMkN,EAAanH,GACrNqH,KAAKq2B,kBAAkBp2B,iBAC3B,CACA,mBAAAy2B,CAAoBp2B,EAAWH,EAAesK,EAASksB,GACnD32B,KAAKq2B,sBAAmBphC,EACxB,MAAM,KAAErC,EAAI,KAAEuF,EAAI,SAAEiS,EAAQ,MAAE2nB,EAAK,UAAE6E,EAAS,SAAEhkB,GAAanI,EAC7DzK,KAAK62B,WAAa1tB,GAAKxL,MCvC/B,SAAoB2C,EAAW1N,EAAMuF,EAAMiS,GAMvC,MAAM0sB,EAAiBx2B,EAAU,GACjC,GAAuB,OAAnBw2B,EACA,OAAO,EAMX,GAAa,YAATlkC,GAA+B,eAATA,EACtB,OAAO,EACX,MAAMmkC,EAAiBz2B,EAAUA,EAAU3I,OAAS,GAC9Cq/B,EAAqBlB,GAAagB,EAAgBlkC,GAClDqkC,EAAqBnB,GAAaiB,EAAgBnkC,GAGxD,SAAKokC,IAAuBC,KA9BhC,SAA6B32B,GACzB,MAAM5H,EAAU4H,EAAU,GAC1B,GAAyB,IAArBA,EAAU3I,OACV,OAAO,EACX,IAAK,IAAIiG,EAAI,EAAGA,EAAI0C,EAAU3I,OAAQiG,IAClC,GAAI0C,EAAU1C,KAAOlF,EACjB,OAAO,CAEnB,CAyBYw+B,CAAoB52B,KACb,WAATnI,GAAqBs8B,GAAYt8B,KAAUiS,EACrD,CDkBa+sB,CAAW72B,EAAW1N,EAAMuF,EAAMiS,MAC/B9P,GAAmB88B,mBAAsBrF,GACzCnf,IAAW4c,GAAiBlvB,EAAWmK,EAAStK,IAEpDG,EAAU,GAAKA,EAAUA,EAAU3I,OAAS,GAC5C8S,EAAQyb,SAAW,EACnBzb,EAAQglB,OAAS,GAcrB,MAOM4H,EAAkB,CACpB3G,UARciG,EACX32B,KAAK62B,YAEF72B,KAAK62B,WAAa72B,KAAKs2B,UA9Df,GA+DJt2B,KAAK62B,WAFT72B,KAAKs2B,eAITrhC,EAGFkL,mBACGsK,EACHnK,aAOEyM,GAAa6pB,GDjF3B,SAAkCnsB,GAC9B,MAAM,YAAE3K,EAAW,KAAElN,EAAI,YAAEy+B,EAAW,WAAE3B,EAAU,QAAEtH,EAAO,KAAEjwB,GAASsS,EAChE6sB,EAAUx3B,GAAa0L,OAAO9S,QAOpC,KAAM4+B,aAAmBC,aACrB,OAAO,EAEX,MAAM,SAAE3kB,EAAQ,kBAAEgB,GAAsB9T,EAAY0L,MAAMkJ,WAC1D,OAAQshB,MACJpjC,GACAmjC,GAAkBp8B,IAAI/G,KACZ,cAATA,IAAyBghB,KAKzBhB,IACAye,GACc,WAAf3B,GACY,IAAZtH,GACS,YAATjwB,CACR,CCuDwCq/B,CAAyBH,GACnD,IAAIzB,GAAwB,IACvByB,EACH1+B,QAAS0+B,EAAgBv3B,YAAY0L,MAAM9S,UAE7C,IAAI+3B,GAAY4G,GACtBtqB,EAAUojB,SAASljB,KAAK,IAAMjN,KAAKqwB,kBAAkBoH,MAAMr9B,IACvD4F,KAAK03B,kBACL13B,KAAKo2B,aAAerpB,EAAUkmB,eAAejzB,KAAK03B,iBAClD13B,KAAK03B,qBAAkBziC,GAE3B+K,KAAKm2B,WAAappB,CACtB,CACA,YAAIojB,GACA,OAAKnwB,KAAKm2B,WAICn2B,KAAK+M,UAAUojB,SAHfnwB,KAAKowB,SAKpB,CACA,IAAAnjB,CAAKqjB,EAAWqH,GACZ,OAAO33B,KAAKmwB,SAASqE,QAAQlE,GAAWrjB,KAAK,OACjD,CACA,aAAIF,GAKA,OAJK/M,KAAKm2B,aACNn2B,KAAKq2B,kBAAkB11B,StJ9D/BxC,IAAW,EACXqB,KACApB,KACAD,IAAW,GsJ8DA6B,KAAKm2B,UAChB,CACA,YAAIjQ,GACA,OAAOlmB,KAAK+M,UAAUmZ,QAC1B,CACA,QAAI/c,GACA,OAAOnJ,KAAK+M,UAAU5D,IAC1B,CACA,QAAIA,CAAKC,GACLpJ,KAAK+M,UAAU5D,KAAOC,CAC1B,CACA,SAAIumB,GACA,OAAO3vB,KAAK+M,UAAU4iB,KAC1B,CACA,SAAI50B,GACA,OAAOiF,KAAK+M,UAAUhS,KAC1B,CACA,SAAI40B,CAAMgD,GACN3yB,KAAK+M,UAAU4iB,MAAQgD,CAC3B,CACA,aAAIjC,GACA,OAAO1wB,KAAK+M,UAAU2jB,SAC1B,CACA,cAAAuC,CAAeC,GAOX,OANIlzB,KAAKm2B,WACLn2B,KAAKo2B,aAAep2B,KAAK+M,UAAUkmB,eAAeC,GAGlDlzB,KAAK03B,gBAAkBxE,EAEpB,IAAMlzB,KAAKgM,MACtB,CACA,IAAAklB,GACIlxB,KAAK+M,UAAUmkB,MACnB,CACA,KAAAE,GACIpxB,KAAK+M,UAAUqkB,OACnB,CACA,QAAA7xB,GACIS,KAAK+M,UAAUxN,UACnB,CACA,MAAAhD,GACQyD,KAAKm2B,YACLn2B,KAAK+M,UAAUxQ,SAEnByD,KAAKq2B,kBAAkB95B,QAC3B,EE1KJ,MAAM,GAAa9I,GAAoB,OAAVA,ECE7B,MAAMmkC,GAAoB,CACtBz/B,KAAM,SACNgwB,UAAW,IACXC,QAAS,GACTO,UAAW,IAQTkP,GAAsB,CACxB1/B,KAAM,YACN+tB,SAAU,IAMRoF,GAAO,CACTnzB,KAAM,YACNmzB,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBpF,SAAU,IAERtR,GAAuB,CAACkjB,GAAYx3B,eAClCA,EAAU3I,OAAS,EACZkgC,GAEFjnC,EAAe+I,IAAIm+B,GACjBA,EAAS/jC,WAAW,SAxBQ,CACvCoE,KAAM,SACNgwB,UAAW,IACXC,QAAoB,IAsBa9nB,EAAU,GAtBnB,EAAItP,KAAKqB,KAAK,KAAO,GAC7Cs2B,UAAW,IAsBDiP,GAEHtM,GC9BX,MAAMyM,GAAqB,CAACnlC,EAAMa,EAAOyU,EAAQ2M,EAAa,CAAC,EAAGlc,EAASi+B,IAAe/2B,IACtF,MAAMm4B,EAAkBrV,GAAmB9N,EAAYjiB,IAAS,CAAC,EAM3Dm/B,EAAQiG,EAAgBjG,OAASld,EAAWkd,OAAS,EAK3D,IAAI,QAAEG,EAAU,GAAMrd,EACtBqd,GAAoB,GAAsBH,GAC1C,MAAMtnB,EAAU,CACZnK,UAAWhC,MAAMwQ,QAAQ5G,GAAUA,EAAS,CAAC,KAAMA,GACnDojB,KAAM,UACNlhB,SAAU3W,EAAMwV,iBACb+uB,EACHjG,OAAQG,EACRtf,SAAWzhB,IACPsC,EAAMuL,IAAI7N,GACV6mC,EAAgBplB,UAAYolB,EAAgBplB,SAASzhB,IAEzD0O,WAAY,KACRA,IACAm4B,EAAgBn4B,YAAcm4B,EAAgBn4B,cAElDjN,OACAkN,YAAarM,EACbkF,QAASi+B,OAAY3hC,EAAY0D,IC/BzC,UAA6B,KAAEs/B,EAAMlG,MAAOmG,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE5I,EAAM,WAAEC,EAAU,YAAE2B,EAAW,KAAEx8B,EAAI,QAAEq9B,KAAYrd,IACrJ,QAASvT,OAAOwX,KAAKjE,GAAYld,MACrC,EDmCS2gC,CAAoBN,IACrB12B,OAAO0Z,OAAOvQ,EAASmK,GAAqBhiB,EAAM6X,IAOtDA,EAAQyb,WAAazb,EAAQyb,SAAW,GAAsBzb,EAAQyb,WACtEzb,EAAQ4mB,cAAgB5mB,EAAQ4mB,YAAc,GAAsB5mB,EAAQ4mB,mBAIvDp8B,IAAjBwV,EAAQ5V,OACR4V,EAAQnK,UAAU,GAAKmK,EAAQ5V,MAEnC,IAAI0jC,GAAa,EAwBjB,KAvBqB,IAAjB9tB,EAAQtS,MACc,IAArBsS,EAAQyb,WAAmBzb,EAAQ4mB,eACpC5mB,EAAQyb,SAAW,EACG,IAAlBzb,EAAQsnB,QACRwG,GAAa,KAGjBj+B,GAAmB88B,mBACnB98B,GAAmBk+B,kBACnBD,GAAa,EACb9tB,EAAQyb,SAAW,EACnBzb,EAAQsnB,MAAQ,GAMpBtnB,EAAQ0oB,cAAgB6E,EAAgB7/B,OAAS6/B,EAAgB1M,KAM7DiN,IAAe3B,QAA6B3hC,IAAhBxB,EAAMsL,MAAqB,CACvD,MAAMoB,EFlFd,SAA0BG,GAAW,OAAEmvB,EAAM,WAAEC,EAAa,QAAUvvB,GAClE,MAAMyvB,EAAoBtvB,EAAU5G,OAAO,IACrCiQ,EAAQ8lB,GAAyB,SAAfC,GAAyBD,EAAS,GAAM,EAC1D,EACAG,EAAkBj4B,OAAS,EACjC,OAAQgS,QAA2B1U,IAAlBkL,EAEXA,EADAyvB,EAAkBjmB,EAE5B,CE0E8B,CAAiBc,EAAQnK,UAAW03B,GAC1D,QAAsB/iC,IAAlBkL,EAKA,YAJA,GAAM/C,OAAO,KACTqN,EAAQmI,SAASzS,GACjBsK,EAAQ5K,cAIpB,CACA,OAAOm4B,EAAgBS,OACjB,IAAIhI,GAAYhmB,GAChB,IAAIyrB,GAA0BzrB,IElFxC,SAASiuB,IAAqB,cAAEC,EAAa,eAAEC,GAAkB9kC,GAC7D,MAAM+kC,EAAcF,EAAcn3B,eAAe1N,KAAgC,IAAxB8kC,EAAe9kC,GAExE,OADA8kC,EAAe9kC,IAAO,EACf+kC,CACX,CACA,SAASC,GAAcj6B,EAAek6B,GAAqB,MAAEhH,EAAQ,EAAC,mBAAEiH,EAAkB,KAAE7gC,GAAS,CAAC,GAClG,IAAI,WAAE0c,EAAahW,EAAc+V,uBAAsB,cAAE+I,KAAkBzV,GAAW6wB,EAClFC,IACAnkB,EAAamkB,GACjB,MAAMC,EAAa,GACbC,EAAqB/gC,GACvB0G,EAAc6hB,gBACd7hB,EAAc6hB,eAAeyY,WAAWhhC,GAC5C,IAAK,MAAMrE,KAAOoU,EAAQ,CACtB,MAAMzU,EAAQoL,EAAcC,SAAShL,EAAK+K,EAAc8R,aAAa7c,IAAQ,MACvE8pB,EAAc1V,EAAOpU,GAC3B,QAAoBmB,IAAhB2oB,GACCsb,GACGR,GAAqBQ,EAAoBplC,GAC7C,SAEJ,MAAMkkC,EAAkB,CACpBjG,WACGpP,GAAmB9N,GAAc,CAAC,EAAG/gB,IAKtCoM,EAAezM,EAAMsL,MAC3B,QAAqB9J,IAAjBiL,IACCzM,EAAM4Z,cACN/O,MAAMwQ,QAAQ8O,IACfA,IAAgB1d,IACf83B,EAAgB5tB,SACjB,SAMJ,IAAIwsB,GAAY,EAChB,GAAIz9B,OAAOigC,uBAAwB,CAC/B,MAAMC,EAAWnW,GAAqBrkB,GACtC,GAAIw6B,EAAU,CACV,MAAM3I,EAAYv3B,OAAOigC,uBAAuBC,EAAUvlC,EAAK,IAC7C,OAAd48B,IACAsH,EAAgBtH,UAAYA,EAC5BkG,GAAY,EAEpB,CACJ,CACA7T,GAAqBlkB,EAAe/K,GACpCL,EAAMkZ,MAAMorB,GAAmBjkC,EAAKL,EAAOmqB,EAAa/e,EAAcwR,oBAAsBnZ,EAAeyC,IAAI7F,GACzG,CAAEqE,MAAM,GACR6/B,EAAiBn5B,EAAe+3B,IACtC,MAAM7pB,EAAYtZ,EAAMsZ,UACpBA,GACAksB,EAAWp8B,KAAKkQ,EAExB,CAQA,OAPI4Q,GACA9Q,QAAQysB,IAAIL,GAAYhsB,KAAK,KACzB,GAAM7P,OAAO,KACTugB,GlEvDhB,SAAmB9e,EAAe0Q,GAC9B,MAAMrW,EAAWwpB,GAAe7jB,EAAe0Q,GAC/C,IAAI,cAAEoO,EAAgB,CAAC,EAAC,WAAE9I,EAAa,CAAC,KAAM3M,GAAWhP,GAAY,CAAC,EACtEgP,EAAS,IAAKA,KAAWyV,GACzB,IAAK,MAAM7pB,KAAOoU,EAEd2a,GAAehkB,EAAe/K,EADhBgvB,GAA6B5a,EAAOpU,IAG1D,CkE+CiCylC,CAAU16B,EAAe8e,OAI/Csb,CACX,CC7EA,SAASO,GAAe36B,EAAe4W,EAAShL,EAAU,CAAC,GACvD,MAAMvR,EAAWwpB,GAAe7jB,EAAe4W,EAA0B,SAAjBhL,EAAQtS,KAC1D0G,EAAcmR,iBAAiBR,YAC/Bva,GACN,IAAI,WAAE4f,EAAahW,EAAc+V,wBAA0B,CAAC,GAAM1b,GAAY,CAAC,EAC3EuR,EAAQuuB,qBACRnkB,EAAapK,EAAQuuB,oBAMzB,MAAMS,EAAevgC,EACf,IAAM2T,QAAQysB,IAAIR,GAAcj6B,EAAe3F,EAAUuR,IACzD,IAAMoC,QAAQC,UAKd4sB,EAAqB76B,EAAcyS,iBAAmBzS,EAAcyS,gBAAgBqoB,KACpF,CAACC,EAAe,KACd,MAAM,cAAEzB,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBxjB,EAClE,OAkBZ,SAAyBhW,EAAe4W,EAASsc,EAAQ,EAAGoG,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAG5tB,GACtH,MAAMwuB,EAAa,GACbY,EAAch7B,EAAcyS,gBAAgBqoB,KAC5CG,GAAsBD,EAAc,GAAKzB,EACzC2B,EAA2C,mBAAlB5B,EACzB6B,EAA0BD,EACzBn8B,GAAMu6B,EAAcv6B,EAAGi8B,GAED,IAArBxB,EACM,CAACz6B,EAAI,IAAMA,EAAIw6B,EACf,CAACx6B,EAAI,IAAMk8B,EAAqBl8B,EAAIw6B,EAYlD,OAXA95B,MAAMzJ,KAAKgK,EAAcyS,iBACpB2oB,KAAKC,IACLv9B,QAAQ,CAACsY,EAAOrX,KACjBqX,EAAMjL,OAAO,iBAAkByL,GAC/BwjB,EAAWp8B,KAAK28B,GAAevkB,EAAOQ,EAAS,IACxChL,EACHsnB,MAAOA,GACFgI,EAAkB,EAAI5B,GACvB6B,EAAwBp8B,KAC7BqP,KAAK,IAAMgI,EAAMjL,OAAO,oBAAqByL,OAE7C5I,QAAQysB,IAAIL,EACvB,CAzCmBkB,CAAgBt7B,EAAe4W,EAASmkB,EAAczB,EAAeC,EAAiBC,EAAkB5tB,IAEjH,IAAMoC,QAAQC,WAKd,KAAEmrB,GAASpjB,EACjB,GAAIojB,EAAM,CACN,MAAOmC,EAAOC,GAAiB,mBAATpC,EAChB,CAACwB,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOW,IAAQntB,KAAK,IAAMotB,IAC9B,CAEI,OAAOxtB,QAAQysB,IAAI,CAACG,IAAgBC,EAAmBjvB,EAAQsnB,QAEvE,CAyBA,SAASmI,GAAgBp4B,EAAGC,GACxB,OAAOD,EAAEmR,iBAAiBlR,EAC9B,CCrEA,SAASu4B,GAAetmB,EAAMhJ,GAC1B,IAAK1M,MAAMwQ,QAAQ9D,GACf,OAAO,EACX,MAAMuvB,EAAavvB,EAAKrT,OACxB,GAAI4iC,IAAevmB,EAAKrc,OACpB,OAAO,EACX,IAAK,IAAIiG,EAAI,EAAGA,EAAI28B,EAAY38B,IAC5B,GAAIoN,EAAKpN,KAAOoW,EAAKpW,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,MAAM48B,GAAkBxrB,GAAarX,OACrC,SAAS8iC,GAAkB57B,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAcoQ,sBAAuB,CACtC,MAAMqL,EAAUzb,EAAckR,QACxB0qB,GAAkB57B,EAAckR,SAChC,CAAC,EAIP,YAHoC9a,IAAhC4J,EAAcwP,MAAMgD,UACpBiJ,EAAQjJ,QAAUxS,EAAcwP,MAAMgD,SAEnCiJ,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAI1c,EAAI,EAAGA,EAAI48B,GAAiB58B,IAAK,CACtC,MAAMhL,EAAOoc,GAAapR,GACpBgd,EAAO/b,EAAcwP,MAAMzb,IAC7Bic,GAAe+L,KAAkB,IAATA,KACxBN,EAAQ1nB,GAAQgoB,EAExB,CACA,OAAON,CACX,CChBA,MAAMogB,GAAuB,IAAI3rB,IAAsBmf,UACjDyM,GAAoB5rB,GAAqBpX,OAC/C,SAASijC,GAAY/7B,GACjB,OAAQo6B,GAAepsB,QAAQysB,IAAIL,EAAW1lC,IAAI,EAAGwZ,YAAWtC,aCRpE,SAA8B5L,EAAe0Q,EAAY9E,EAAU,CAAC,GAEhE,IAAIsC,EACJ,GAFAlO,EAAcmL,OAAO,iBAAkBuF,GAEnCjR,MAAMwQ,QAAQS,GAAa,CAC3B,MAAM0pB,EAAa1pB,EAAWhc,IAAKkiB,GAAY+jB,GAAe36B,EAAe4W,EAAShL,IACtFsC,EAAYF,QAAQysB,IAAIL,EAC5B,MACK,GAA0B,iBAAf1pB,EACZxC,EAAYysB,GAAe36B,EAAe0Q,EAAY9E,OAErD,CACD,MAAMowB,EAA2C,mBAAftrB,EAC5BmT,GAAe7jB,EAAe0Q,EAAY9E,EAAQ+E,QAClDD,EACNxC,EAAYF,QAAQysB,IAAIR,GAAcj6B,EAAeg8B,EAAoBpwB,GAC7E,CACA,OAAOsC,EAAUE,KAAK,KAClBpO,EAAcmL,OAAO,oBAAqBuF,IAElD,CDXkFurB,CAAqBj8B,EAAekO,EAAWtC,IACjI,CACA,SAASswB,GAAqBl8B,GAC1B,IAAIqQ,EAAU0rB,GAAY/7B,GACtB9D,EAAQigC,KACRC,GAAkB,EAKtB,MAAMC,EAA2B/iC,GAAS,CAACmD,EAAKiU,KAC5C,MAAMrW,EAAWwpB,GAAe7jB,EAAe0Q,EAAqB,SAATpX,EACrD0G,EAAcmR,iBAAiBR,YAC/Bva,GACN,GAAIiE,EAAU,CACV,MAAM,WAAE2b,EAAU,cAAE8I,KAAkBzV,GAAWhP,EACjDoC,EAAM,IAAKA,KAAQ4M,KAAWyV,EAClC,CACA,OAAOriB,GAmBX,SAASqlB,EAAewa,GACpB,MAAM,MAAE9sB,GAAUxP,EACZyb,EAAUmgB,GAAkB57B,EAAckR,SAAW,CAAC,EAKtDkpB,EAAa,GAKbmC,EAAc,IAAIvqC,IAMxB,IAAIwqC,EAAkB,CAAC,EAKnBC,EAAsB5U,IAO1B,IAAK,IAAI9oB,EAAI,EAAGA,EAAI+8B,GAAmB/8B,IAAK,CACxC,MAAMzF,EAAOuiC,GAAqB98B,GAC5B29B,EAAYxgC,EAAM5C,GAClByiB,OAAuB3lB,IAAhBoZ,EAAMlW,GACbkW,EAAMlW,GACNmiB,EAAQniB,GACRqjC,EAAgB3sB,GAAe+L,GAK/B6gB,EAActjC,IAASgjC,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsB19B,GAO1B,IAAI+9B,EAAc/gB,IAASN,EAAQniB,IAC/ByiB,IAASvM,EAAMlW,IACfqjC,EAeJ,GAXIG,GACAV,GACAp8B,EAAc0S,yBACdoqB,GAAc,GAMlBJ,EAAU5C,cAAgB,IAAK0C,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElB7gB,IAAS2gB,EAAUK,UAErBhtB,GAAoBgM,IACJ,kBAATA,EACP,SAOJ,MAAMihB,EAAmBC,GAAuBP,EAAUK,SAAUhhB,GACpE,IAAImhB,EAAoBF,GAEnB1jC,IAASgjC,GACNI,EAAUG,WACTC,GACDH,GAEH59B,EAAI09B,GAAuBE,EAC5BQ,GAAuB,EAK3B,MAAMC,EAAiB39B,MAAMwQ,QAAQ8L,GAAQA,EAAO,CAACA,GAKrD,IAAIshB,EAAiBD,EAAe5gC,OAAO6/B,EAAwB/iC,GAAO,CAAC,IACvD,IAAhBsjC,IACAS,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMZ,EAC9Ba,EAAU,IACTD,KACAD,GAEDG,EAAiBvoC,IACnBioC,GAAoB,EAChBX,EAAYzhC,IAAI7F,KAChBkoC,GAAuB,EACvBZ,EAAY5+B,OAAO1I,IAEvBynC,EAAU3C,eAAe9kC,IAAO,EAChC,MAAMgM,EAAcjB,EAAcC,SAAShL,GACvCgM,IACAA,EAAYwU,WAAY,IAEhC,IAAK,MAAMxgB,KAAOsoC,EAAS,CACvB,MAAMpoB,EAAOkoB,EAAepoC,GACtBkX,EAAOmxB,EAAmBroC,GAEhC,GAAIunC,EAAgB75B,eAAe1N,GAC/B,SAIJ,IAAIwoC,GAAkB,EAElBA,EADA1Z,GAAkB5O,IAAS4O,GAAkB5X,IAC1BsvB,GAAetmB,EAAMhJ,GAGtBgJ,IAAShJ,EAE3BsxB,EACItoB,QAEAqoB,EAAcvoC,GAIdsnC,EAAY9+B,IAAIxI,QAGNmB,IAAT+e,GAAsBonB,EAAYzhC,IAAI7F,GAK3CuoC,EAAcvoC,GAOdynC,EAAU5C,cAAc7kC,IAAO,CAEvC,CAKAynC,EAAUK,SAAWhhB,EACrB2gB,EAAUY,mBAAqBD,EAI3BX,EAAUG,WACVL,EAAkB,IAAKA,KAAoBa,IAE3CjB,GAAmBp8B,EAAcqR,wBACjC6rB,GAAoB,GAQpBA,MAFyBJ,GAAeE,IACIG,IAE5C/C,EAAWp8B,QAAQo/B,EAAe1oC,IAAKwZ,IAAc,CACjDA,UAAWA,EACXtC,QAAS,CAAEtS,WAGvB,CAMA,GAAIijC,EAAYzB,KAAM,CAClB,MAAM4C,EAAoB,CAAC,EAK3B,GAA6B,kBAAlBluB,EAAMgD,QAAuB,CACpC,MAAMmrB,EAAoB9Z,GAAe7jB,EAAeP,MAAMwQ,QAAQT,EAAMgD,SACtEhD,EAAMgD,QAAQ,GACdhD,EAAMgD,SACRmrB,GAAqBA,EAAkB3nB,aACvC0nB,EAAkB1nB,WAAa2nB,EAAkB3nB,WAEzD,CACAumB,EAAYz+B,QAAS7I,IACjB,MAAM2oC,EAAiB59B,EAAc0W,cAAczhB,GAC7CgM,EAAcjB,EAAcC,SAAShL,GACvCgM,IACAA,EAAYwU,WAAY,GAE5BioB,EAAkBzoC,GAAO2oC,GAAkB,OAE/CxD,EAAWp8B,KAAK,CAAEkQ,UAAWwvB,GACjC,CACA,IAAIG,EAAgBt7B,QAAQ63B,EAAWthC,QAOvC,OANIsjC,IACmB,IAAlB5sB,EAAMgD,SAAqBhD,EAAMgD,UAAYhD,EAAMa,SACnDrQ,EAAc0S,yBACfmrB,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBxtB,EAAQ+pB,GAAcpsB,QAAQC,SACzD,CAiBA,MAAO,CACH6T,iBACAgc,UAfJ,SAAmBxkC,EAAMujC,GAErB,GAAI3gC,EAAM5C,GAAMujC,WAAaA,EACzB,OAAO7uB,QAAQC,UAEnBjO,EAAcyS,iBAAiB3U,QAASsY,GAAUA,EAAMyL,gBAAgBic,UAAUxkC,EAAMujC,IACxF3gC,EAAM5C,GAAMujC,SAAWA,EACvB,MAAMzC,EAAatY,EAAexoB,GAClC,IAAK,MAAMrE,KAAOiH,EACdA,EAAMjH,GAAK6kC,cAAgB,CAAC,EAEhC,OAAOM,CACX,EAII2D,mBA5QJ,SAA4BC,GACxB3tB,EAAU2tB,EAAah+B,EAC3B,EA2QIs6B,SAAU,IAAMp+B,EAChB+hC,MAAO,KACH/hC,EAAQigC,KACRC,GAAkB,GAG9B,CACA,SAASa,GAAuB9wB,EAAMgJ,GAClC,MAAoB,iBAATA,EACAA,IAAShJ,IAEX1M,MAAMwQ,QAAQkF,KACXsmB,GAAetmB,EAAMhJ,EAGrC,CACA,SAAS+xB,GAAgBrB,GAAW,GAChC,MAAO,CACHA,WACA/C,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBuD,mBAAoB,CAAC,EAE7B,CACA,SAASnB,KACL,MAAO,CACH9rB,QAAS6tB,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZlhB,SAAUkhB,KACVG,UAAWH,KACXI,WAAYJ,KACZpvB,KAAMovB,KAEd,CEnVA,MAAMzpB,GACF,WAAA3T,CAAYy9B,GACRp9B,KAAKuS,WAAY,EACjBvS,KAAKo9B,KAAOA,CAChB,CACA,MAAAhgC,GAAW,ECHf,IAAIglB,GAAK,ECCT,MAAM6W,GAAa,CACflsB,UAAW,CACPuG,QCDR,cAA+BA,GAM3B,WAAA3T,CAAYy9B,GACRt1B,MAAMs1B,GACNA,EAAK1c,iBAAmB0c,EAAK1c,eAAiBqa,GAAqBqC,GACvE,CACA,mCAAAC,GACI,MAAM,QAAEnuB,GAAYlP,KAAKo9B,KAAK1oB,WAC1B9F,GAAoBM,KACpBlP,KAAKs9B,gBAAkBpuB,EAAQquB,UAAUv9B,KAAKo9B,MAEtD,CAIA,KAAA1rB,GACI1R,KAAKq9B,qCACT,CACA,MAAAjgC,GACI,MAAM,QAAE8R,GAAYlP,KAAKo9B,KAAK1oB,YACtBxF,QAASsuB,GAAgBx9B,KAAKo9B,KAAKvpB,WAAa,CAAC,EACrD3E,IAAYsuB,GACZx9B,KAAKq9B,qCAEb,CACA,OAAAjrB,GACIpS,KAAKo9B,KAAK1c,eAAeoc,QACzB98B,KAAKs9B,mBACT,ID7BA3vB,KAAM,CACF2F,QDLR,cAAmCA,GAC/B,WAAA3T,GACImI,SAAS+N,WACT7V,KAAKoiB,GAAKA,IACd,CACA,MAAAhlB,GACI,IAAK4C,KAAKo9B,KAAKptB,gBACX,OACJ,MAAM,UAAEytB,EAAS,eAAEC,GAAmB19B,KAAKo9B,KAAKptB,iBACxCytB,UAAWE,GAAkB39B,KAAKo9B,KAAKtpB,qBAAuB,CAAC,EACvE,IAAK9T,KAAKo9B,KAAK1c,gBAAkB+c,IAAcE,EAC3C,OAEJ,MAAMC,EAAgB59B,KAAKo9B,KAAK1c,eAAeic,UAAU,QAASc,GAC9DC,IAAmBD,GACnBG,EAAc3wB,KAAK,KACfywB,EAAe19B,KAAKoiB,KAGhC,CACA,KAAA1Q,GACI,MAAM,SAAEmsB,EAAQ,eAAEH,GAAmB19B,KAAKo9B,KAAKptB,iBAAmB,CAAC,EAC/D0tB,GACAA,EAAe19B,KAAKoiB,IAEpByb,IACA79B,KAAKoS,QAAUyrB,EAAS79B,KAAKoiB,IAErC,CACA,OAAAhQ,GAAY,KGhCV0rB,GAAa,CACftsC,GAAG,EACHC,GAAG,GAEP,SAASssC,KACL,OAAOD,GAAWtsC,GAAKssC,GAAWrsC,CACtC,CCNA,SAASusC,GAAY91B,EAAQ4D,EAAW/B,EAASU,EAAU,CAAEwzB,SAAS,IAElE,OADA/1B,EAAOgK,iBAAiBpG,EAAW/B,EAASU,GACrC,IAAMvC,EAAOg2B,oBAAoBpyB,EAAW/B,EACvD,CCHA,MAAMo0B,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,GACtB,MAAO,CACH7oC,MAAO,CACH/D,EAAG4sC,EAAMK,MACThtC,EAAG2sC,EAAMM,OAGrB,CCNA,SAASC,GAAgBz2B,EAAQ4D,EAAW/B,EAASU,GACjD,OAAOuzB,GAAY91B,EAAQ4D,EDMR,CAAC/B,GACZq0B,GAAUD,GAAiBC,IAAUr0B,EAAQq0B,EAAOI,GAAiBJ,ICPvCQ,CAAe70B,GAAUU,EACnE,CCGA,SAASo0B,GAAWhpC,GAChB,OAAOA,EAAKlB,IAAMkB,EAAKnB,GAC3B,CAIA,SAASoqC,GAAc9jC,EAAOkJ,EAAQgE,EAAQD,EAAS,IACnDjN,EAAMiN,OAASA,EACfjN,EAAMxF,YAAcZ,EAAUsP,EAAOxP,IAAKwP,EAAOvP,IAAKqG,EAAMiN,QAC5DjN,EAAMlJ,MAAQ+sC,GAAW32B,GAAU22B,GAAW36B,GAC9ClJ,EAAMtF,UACFd,EAAUsT,EAAOxT,IAAKwT,EAAOvT,IAAKqG,EAAMiN,QAAUjN,EAAMxF,aACvDwF,EAAMlJ,OAjBG,OAiBmBkJ,EAAMlJ,OAhBzB,QAiBVyS,MAAMvJ,EAAMlJ,UACZkJ,EAAMlJ,MAAQ,IAEbkJ,EAAMtF,YAlBO,KAmBdsF,EAAMtF,WAlBQ,KAmBd6O,MAAMvJ,EAAMtF,cACZsF,EAAMtF,UAAY,EAE1B,CACA,SAASqpC,GAAa/jC,EAAOkJ,EAAQgE,EAAQD,GACzC62B,GAAc9jC,EAAMxJ,EAAG0S,EAAO1S,EAAG0W,EAAO1W,EAAGyW,EAASA,EAAOxR,aAAUxB,GACrE6pC,GAAc9jC,EAAMvJ,EAAGyS,EAAOzS,EAAGyW,EAAOzW,EAAGwW,EAASA,EAAOvR,aAAUzB,EACzE,CACA,SAAS+pC,GAAiB92B,EAAQ+2B,EAAUlvB,GACxC7H,EAAOxT,IAAMqb,EAAOrb,IAAMuqC,EAASvqC,IACnCwT,EAAOvT,IAAMuT,EAAOxT,IAAMmqC,GAAWI,EACzC,CAKA,SAASC,GAAyBh3B,EAAQgG,EAAQ6B,GAC9C7H,EAAOxT,IAAMwZ,EAAOxZ,IAAMqb,EAAOrb,IACjCwT,EAAOvT,IAAMuT,EAAOxT,IAAMmqC,GAAW3wB,EACzC,CACA,SAASixB,GAAqBj3B,EAAQgG,EAAQ6B,GAC1CmvB,GAAyBh3B,EAAO1W,EAAG0c,EAAO1c,EAAGue,EAAOve,GACpD0tC,GAAyBh3B,EAAOzW,EAAGyc,EAAOzc,EAAGse,EAAOte,EACxD,CCjDA,SAAS2tC,GAASpjC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCDA,MAAMqjC,GAAmB,EAAG3mC,aACjBA,EAAUA,EAAQ4mC,cAAcC,YAAc,KCFnDppC,GAAW,CAAC2L,EAAGC,IAAM/Q,KAAKe,IAAI+P,EAAIC,GCSxC,MAAMy9B,GACF,WAAA7/B,CAAYy+B,EAAOqB,GAAU,mBAAE1qB,EAAkB,cAAE2qB,EAAgBvmC,OAAM,iBAAEwmC,GAAmB,EAAK,kBAAEC,EAAoB,GAAO,CAAC,GAgE7H,GA5DA5/B,KAAK6/B,WAAa,KAIlB7/B,KAAK8/B,cAAgB,KAIrB9/B,KAAK+/B,kBAAoB,KAIzB//B,KAAKy/B,SAAW,CAAC,EAIjBz/B,KAAK0/B,cAAgBvmC,OACrB6G,KAAKggC,YAAc,KACf,IAAMhgC,KAAK8/B,gBAAiB9/B,KAAK+/B,kBAC7B,OACJ,MAAME,EAAOC,GAAWlgC,KAAK+/B,kBAAmB//B,KAAKmgC,SAC/CC,EAAmC,OAApBpgC,KAAK6/B,WAIpBQ,EDtClB,SAAoBv+B,EAAGC,GAEnB,MAAMu+B,EAASnqC,GAAS2L,EAAEtQ,EAAGuQ,EAAEvQ,GACzB+uC,EAASpqC,GAAS2L,EAAErQ,EAAGsQ,EAAEtQ,GAC/B,OAAOT,KAAKqB,KAAKiuC,GAAU,EAAIC,GAAU,EAC7C,CCiC4CC,CAAWP,EAAKloB,OAAQ,CAAEvmB,EAAG,EAAGC,EAAG,KAAQuO,KAAK4/B,kBAChF,IAAKQ,IAAiBC,EAClB,OACJ,MAAM,MAAE9qC,GAAU0qC,GACZ,UAAEhlC,GAAcyB,GACtBsD,KAAKmgC,QAAQtjC,KAAK,IAAKtH,EAAO0F,cAC9B,MAAM,QAAEwlC,EAAO,OAAEC,GAAW1gC,KAAKy/B,SAC5BW,IACDK,GAAWA,EAAQzgC,KAAK8/B,cAAeG,GACvCjgC,KAAK6/B,WAAa7/B,KAAK8/B,eAE3BY,GAAUA,EAAO1gC,KAAK8/B,cAAeG,IAEzCjgC,KAAK2gC,kBAAoB,CAACvC,EAAO6B,KAC7BjgC,KAAK8/B,cAAgB1B,EACrBp+B,KAAK+/B,kBAAoBlpC,GAAeopC,EAAMjgC,KAAK+U,oBAEnD,GAAM3X,OAAO4C,KAAKggC,aAAa,IAEnChgC,KAAK4gC,gBAAkB,CAACxC,EAAO6B,KAC3BjgC,KAAK6gC,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoBhhC,KAAKy/B,SAGtD,GAFIz/B,KAAK2/B,kBACLqB,GAAmBA,KACjBhhC,KAAK8/B,gBAAiB9/B,KAAK+/B,kBAC7B,OACJ,MAAMkB,EAAUf,GAA0B,kBAAf9B,EAAMjmC,KAC3B6H,KAAK+/B,kBACLlpC,GAAeopC,EAAMjgC,KAAK+U,oBAAqB/U,KAAKmgC,SACtDngC,KAAK6/B,YAAciB,GACnBA,EAAM1C,EAAO6C,GAEjBF,GAAgBA,EAAa3C,EAAO6C,KAGnC9C,GAAiBC,GAClB,OACJp+B,KAAK2/B,iBAAmBA,EACxB3/B,KAAKy/B,SAAWA,EAChBz/B,KAAK+U,mBAAqBA,EAC1B/U,KAAK4/B,kBAAoBA,EACzB5/B,KAAK0/B,cAAgBA,GAAiBvmC,OACtC,MACM+nC,EAAcrqC,GADP2nC,GAAiBJ,GACWp+B,KAAK+U,qBACxC,MAAExf,GAAU2rC,GACZ,UAAEjmC,GAAcyB,GACtBsD,KAAKmgC,QAAU,CAAC,IAAK5qC,EAAO0F,cAC5B,MAAM,eAAEkmC,GAAmB1B,EAC3B0B,GACIA,EAAe/C,EAAO8B,GAAWgB,EAAalhC,KAAKmgC,UACvDngC,KAAKohC,gBAAkBhe,GAAKub,GAAgB3+B,KAAK0/B,cAAe,cAAe1/B,KAAK2gC,mBAAoBhC,GAAgB3+B,KAAK0/B,cAAe,YAAa1/B,KAAK4gC,iBAAkBjC,GAAgB3+B,KAAK0/B,cAAe,gBAAiB1/B,KAAK4gC,iBAC9O,CACA,cAAAS,CAAe5B,GACXz/B,KAAKy/B,SAAWA,CACpB,CACA,GAAAoB,GACI7gC,KAAKohC,iBAAmBphC,KAAKohC,kBAC7BvjC,GAAYmC,KAAKggC,YACrB,EAEJ,SAASnpC,GAAeopC,EAAMlrB,GAC1B,OAAOA,EAAqB,CAAExf,MAAOwf,EAAmBkrB,EAAK1qC,QAAW0qC,CAC5E,CACA,SAASqB,GAAcx/B,EAAGC,GACtB,MAAO,CAAEvQ,EAAGsQ,EAAEtQ,EAAIuQ,EAAEvQ,EAAGC,EAAGqQ,EAAErQ,EAAIsQ,EAAEtQ,EACtC,CACA,SAASyuC,IAAW,MAAE3qC,GAAS4qC,GAC3B,MAAO,CACH5qC,QACAyF,MAAOsmC,GAAc/rC,EAAOgsC,GAAgBpB,IAC5CpoB,OAAQupB,GAAc/rC,EAAOisC,GAAiBrB,IAC9C/1B,SAAUnB,GAAYk3B,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQxoC,OAAS,EACpC,CACA,SAASsR,GAAYk3B,EAASsB,GAC1B,GAAItB,EAAQxoC,OAAS,EACjB,MAAO,CAAEnG,EAAG,EAAGC,EAAG,GAEtB,IAAImM,EAAIuiC,EAAQxoC,OAAS,EACrB+pC,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBpB,GAClC,KAAOviC,GAAK,IACR8jC,EAAmBvB,EAAQviC,KACvB+jC,EAAU1mC,UAAYymC,EAAiBzmC,UACvC,GAAsBwmC,MAG1B7jC,IAEJ,IAAK8jC,EACD,MAAO,CAAElwC,EAAG,EAAGC,EAAG,GAEtB,MAAM0X,EAAOoa,GAAsBoe,EAAU1mC,UAAYymC,EAAiBzmC,WAC1E,GAAa,IAATkO,EACA,MAAO,CAAE3X,EAAG,EAAGC,EAAG,GAEtB,MAAMs4B,EAAkB,CACpBv4B,GAAImwC,EAAUnwC,EAAIkwC,EAAiBlwC,GAAK2X,EACxC1X,GAAIkwC,EAAUlwC,EAAIiwC,EAAiBjwC,GAAK0X,GAQ5C,OANI4gB,EAAgBv4B,IAAMk1B,MACtBqD,EAAgBv4B,EAAI,GAEpBu4B,EAAgBt4B,IAAMi1B,MACtBqD,EAAgBt4B,EAAI,GAEjBs4B,CACX,CC3HA,SAAS6X,GAA4B/rC,EAAMnB,EAAKC,GAC5C,MAAO,CACHD,SAAaO,IAARP,EAAoBmB,EAAKnB,IAAMA,OAAMO,EAC1CN,SAAaM,IAARN,EACCkB,EAAKlB,IAAMA,GAAOkB,EAAKlB,IAAMkB,EAAKnB,UAClCO,EAEd,CAcA,SAAS4sC,GAA4BC,EAAYC,GAC7C,IAAIrtC,EAAMqtC,EAAgBrtC,IAAMotC,EAAWptC,IACvCC,EAAMotC,EAAgBptC,IAAMmtC,EAAWntC,IAO3C,OAJIotC,EAAgBptC,IAAMotC,EAAgBrtC,IACtCotC,EAAWntC,IAAMmtC,EAAWptC,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMqtC,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH1tC,IAAK2tC,GAAoBH,EAAaC,GACtCxtC,IAAK0tC,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC5GA,MAAMC,GAAsB,IAAI5zB,QAChC,MAAM6zB,GACF,WAAA7iC,CAAYd,GACRmB,KAAKyiC,aAAe,KACpBziC,KAAK89B,YAAa,EAClB99B,KAAK0iC,iBAAmB,KACxB1iC,KAAKxK,YAAc,CAAEhE,EAAG,EAAGC,EAAG,GAI9BuO,KAAK2iC,aAAc,EACnB3iC,KAAK4iC,uBAAwB,EAI7B5iC,KAAK6iC,QjJrBW,CACpBrxC,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiJ0BjCqL,KAAK8iC,mBAAqB,KAI1B9iC,KAAK+iC,cAAgB,KACrB/iC,KAAKnB,cAAgBA,CACzB,CACA,KAAA8N,CAAMq2B,GAAa,aAAEC,GAAe,EAAK,kBAAErD,GAAsB,CAAC,GAI9D,MAAM,gBAAE5vB,GAAoBhQ,KAAKnB,cACjC,GAAImR,IAAiD,IAA9BA,EAAgBytB,UACnC,OACJ,MAmGM,iBAAEkC,GAAqB3/B,KAAK0U,WAClC1U,KAAKkjC,WAAa,IAAI1D,GAAWwD,EAAa,CAC1C7B,eArGoB/C,IACpB,MAAM,iBAAEuB,GAAqB3/B,KAAK0U,WAGlCirB,EAAmB3/B,KAAKmjC,iBAAmBnjC,KAAKojC,gBAC5CH,GACAjjC,KAAKijC,aAAazE,GAAiBJ,GAAO7oC,QAgG9CkrC,QA7FY,CAACrC,EAAO6B,KAEpB,MAAM,KAAEryB,EAAI,gBAAEy1B,EAAe,YAAEC,GAAgBtjC,KAAK0U,WACpD,GAAI9G,IAASy1B,IACLrjC,KAAKyiC,cACLziC,KAAKyiC,eACTziC,KAAKyiC,aC9DJ,OADI5sC,ED+D2B+X,IC9Df,MAAT/X,EACZioC,GAAWjoC,GACJ,MAGPioC,GAAWjoC,IAAQ,EACZ,KACHioC,GAAWjoC,IAAQ,IAKvBioC,GAAWtsC,GAAKssC,GAAWrsC,EACpB,MAGPqsC,GAAWtsC,EAAIssC,GAAWrsC,GAAI,EACvB,KACHqsC,GAAWtsC,EAAIssC,GAAWrsC,GAAI,KD8CzBuO,KAAKyiC,cACN,OClEpB,IAAqB5sC,EDoETmK,KAAK8iC,mBAAqB1E,EAC1Bp+B,KAAK+iC,cAAgB9C,EACrBjgC,KAAK89B,YAAa,EAClB99B,KAAK0iC,iBAAmB,KACxB1iC,KAAKujC,qBACDvjC,KAAKnB,cAAcmS,aACnBhR,KAAKnB,cAAcmS,WAAWwyB,oBAAqB,EACnDxjC,KAAKnB,cAAcmS,WAAW9I,YAASjT,GAK3CmqC,GAAUvpC,IACN,IAAI6C,EAAUsH,KAAKyjC,mBAAmB5tC,GAAMkJ,OAAS,EAIrD,GAAIlH,EAAQzD,KAAKsE,GAAU,CACvB,MAAM,WAAEsY,GAAehR,KAAKnB,cAC5B,GAAImS,GAAcA,EAAW9C,OAAQ,CACjC,MAAMw1B,EAAe1yB,EAAW9C,OAAOy1B,UAAU9tC,GACjD,GAAI6tC,EAAc,CAEdhrC,EADemmC,GAAW6E,IACNhwC,WAAWgF,GAAW,IAC9C,CACJ,CACJ,CACAsH,KAAKxK,YAAYK,GAAQ6C,IAGzB4qC,GACA,GAAM/lC,WAAW,IAAM+lC,EAAYlF,EAAO6B,IAE9Cld,GAAqB/iB,KAAKnB,cAAe,aACzC,MAAM,eAAE6hB,GAAmB1gB,KAAKnB,cAChC6hB,GAAkBA,EAAeic,UAAU,aAAa,IAgDxD+D,OA9CW,CAACtC,EAAO6B,KACnBjgC,KAAK8iC,mBAAqB1E,EAC1Bp+B,KAAK+iC,cAAgB9C,EACrB,MAAM,gBAAEoD,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAY9jC,KAAK0U,WAE9E,IAAK2uB,IAAoBrjC,KAAKyiC,aAC1B,OACJ,MAAM,OAAE1qB,GAAWkoB,EAEnB,GAAI2D,GAA+C,OAA1B5jC,KAAK0iC,iBAM1B,OALA1iC,KAAK0iC,iBAiXrB,SAA6B3qB,EAAQgsB,EAAgB,IACjD,IAAIxP,EAAY,KACZvjC,KAAKe,IAAIgmB,EAAOtmB,GAAKsyC,EACrBxP,EAAY,IAEPvjC,KAAKe,IAAIgmB,EAAOvmB,GAAKuyC,IAC1BxP,EAAY,KAEhB,OAAOA,CACX,CA1XwCyP,CAAoBjsB,QAEd,OAA1B/X,KAAK0iC,kBACLmB,GAAmBA,EAAgB7jC,KAAK0iC,mBAKhD1iC,KAAKikC,WAAW,IAAKhE,EAAK1qC,MAAOwiB,GACjC/X,KAAKikC,WAAW,IAAKhE,EAAK1qC,MAAOwiB,GAOjC/X,KAAKnB,cAAcvB,SAKnBwmC,GAAUA,EAAO1F,EAAO6B,IAgBxBc,aAdiB,CAAC3C,EAAO6B,KACzBjgC,KAAK8iC,mBAAqB1E,EAC1Bp+B,KAAK+iC,cAAgB9C,EACrBjgC,KAAKgM,KAAKoyB,EAAO6B,GACjBjgC,KAAK8iC,mBAAqB,KAC1B9iC,KAAK+iC,cAAgB,MAUrB/B,gBARoB,IAAM5B,GAAUvpC,GAA0C,WAAjCmK,KAAKkkC,kBAAkBruC,IACpEmK,KAAKyjC,mBAAmB5tC,GAAMkX,WAAWmkB,SAQ1C,CACCnc,mBAAoB/U,KAAKnB,cAAciW,wBACvC6qB,mBACAC,oBACAF,cAAeL,GAAiBr/B,KAAKnB,gBAE7C,CAIA,IAAAmN,CAAKoyB,EAAO6C,GACR,MAAMkD,EAAa/F,GAASp+B,KAAK8iC,mBAC3BsB,EAAenD,GAAWjhC,KAAK+iC,cAC/BjF,EAAa99B,KAAK89B,WAExB,GADA99B,KAAKzD,UACAuhC,IAAesG,IAAiBD,EACjC,OACJ,MAAM,SAAE/5B,GAAag6B,EACrBpkC,KAAK4M,eAAexC,GACpB,MAAM,UAAEi6B,GAAcrkC,KAAK0U,WACvB2vB,GACA,GAAM9mC,WAAW,IAAM8mC,EAAUF,EAAYC,GAErD,CAIA,MAAA7nC,GACIyD,KAAK89B,YAAa,EAClB,MAAM,WAAE9sB,EAAU,eAAE0P,GAAmB1gB,KAAKnB,cACxCmS,IACAA,EAAWwyB,oBAAqB,GAEpCxjC,KAAKkjC,YAAcljC,KAAKkjC,WAAWrC,MACnC7gC,KAAKkjC,gBAAajuC,EAClB,MAAM,gBAAEouC,GAAoBrjC,KAAK0U,YAC5B2uB,GAAmBrjC,KAAKyiC,eACzBziC,KAAKyiC,eACLziC,KAAKyiC,aAAe,MAExB/hB,GAAkBA,EAAeic,UAAU,aAAa,EAC5D,CACA,UAAAsH,CAAWpuC,EAAMyuC,EAAQvsB,GACrB,MAAM,KAAEnK,GAAS5N,KAAK0U,WAEtB,IAAKqD,IAAWwsB,GAAW1uC,EAAM+X,EAAM5N,KAAK0iC,kBACxC,OACJ,MAAM8B,EAAYxkC,KAAKyjC,mBAAmB5tC,GAC1C,IAAIme,EAAOhU,KAAKxK,YAAYK,GAAQkiB,EAAOliB,GAEvCmK,KAAK2iC,aAAe3iC,KAAK2iC,YAAY9sC,KACrCme,EDtMZ,SAA0Bze,GAAO,IAAEb,EAAG,IAAEC,GAAOkuC,GAa3C,YAZY5tC,IAARP,GAAqBa,EAAQb,EAE7Ba,EAAQstC,EACFjuC,EAAUF,EAAKa,EAAOstC,EAAQnuC,KAC9B1D,KAAK2D,IAAIY,EAAOb,QAETO,IAARN,GAAqBY,EAAQZ,IAElCY,EAAQstC,EACFjuC,EAAUD,EAAKY,EAAOstC,EAAQluC,KAC9B3D,KAAK0D,IAAIa,EAAOZ,IAEnBY,CACX,CCwLmBkvC,CAAiBzwB,EAAMhU,KAAK2iC,YAAY9sC,GAAOmK,KAAK6iC,QAAQhtC,KAEvE2uC,EAAUxlC,IAAIgV,EAClB,CACA,kBAAAuvB,GACI,MAAM,gBAAE7jB,EAAe,YAAEwiB,GAAgBliC,KAAK0U,WACxCxG,EAASlO,KAAKnB,cAAcmS,aAC7BhR,KAAKnB,cAAcmS,WAAW9C,OAC7BlO,KAAKnB,cAAcmS,WAAW0zB,SAAQ,GACtC1kC,KAAKnB,cAAcmS,YAAY9C,OAC/By2B,EAAkB3kC,KAAK2iC,YACzBjjB,GAAmBlB,GAAYkB,GAC1B1f,KAAK2iC,cACN3iC,KAAK2iC,YAAc3iC,KAAK4kC,yBAKxB5kC,KAAK2iC,eADLjjB,IAAmBxR,IDvLnC,SAAiCy1B,GAAW,IAAErvC,EAAG,KAAEC,EAAI,OAAEE,EAAM,MAAED,IAC7D,MAAO,CACHhD,EAAGowC,GAA4B+B,EAAUnyC,EAAG+C,EAAMC,GAClD/C,EAAGmwC,GAA4B+B,EAAUlyC,EAAG6C,EAAKG,GAEzD,CCmLmCowC,CAAwB32B,EAAOy1B,UAAWjkB,GAMrE1f,KAAK6iC,QDhIb,SAA4BX,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHxwC,EAAGywC,GAAmBC,EAAa,OAAQ,SAC3CzwC,EAAGwwC,GAAmBC,EAAa,MAAO,UAElD,CCqHuB4C,CAAmB5C,GAK9ByC,IAAoB3kC,KAAK2iC,aACzBz0B,GACAlO,KAAK2iC,cACJ3iC,KAAK4iC,uBACNxD,GAAUvpC,KACmB,IAArBmK,KAAK2iC,aACL3iC,KAAKyjC,mBAAmB5tC,KACxBmK,KAAK2iC,YAAY9sC,GD1JrC,SAA+BqY,EAAQy0B,GACnC,MAAMoC,EAAsB,CAAC,EAO7B,YANwB9vC,IAApB0tC,EAAYjuC,MACZqwC,EAAoBrwC,IAAMiuC,EAAYjuC,IAAMwZ,EAAOxZ,UAE/BO,IAApB0tC,EAAYhuC,MACZowC,EAAoBpwC,IAAMguC,EAAYhuC,IAAMuZ,EAAOxZ,KAEhDqwC,CACX,CCiJ6CC,CAAsB92B,EAAOy1B,UAAU9tC,GAAOmK,KAAK2iC,YAAY9sC,MAIxG,CACA,qBAAA+uC,GACI,MAAQllB,gBAAiBijB,EAAW,yBAAEsC,GAA6BjlC,KAAK0U,WACxE,IAAKiuB,IAAgBnkB,GAAYmkB,GAC7B,OAAO,EACX,MAAMuC,EAAqBvC,EAAYjqC,SAEjC,WAAEsY,GAAehR,KAAKnB,cAE5B,IAAKmS,IAAeA,EAAW9C,OAC3B,OAAO,EACX,MAAMi3B,EnM5Pd,SAAwBxsC,EAASysC,EAAoBrwB,GACjD,MAAMswB,EAAc1uC,EAAmBgC,EAASoc,IAC1C,OAAEuwB,GAAWF,EAKnB,OAJIE,IACApvC,EAAcmvC,EAAY7zC,EAAG8zC,EAAOvtB,OAAOvmB,GAC3C0E,EAAcmvC,EAAY5zC,EAAG6zC,EAAOvtB,OAAOtmB,IAExC4zC,CACX,CmMoP+BE,CAAeL,EAAoBl0B,EAAW+X,KAAM/oB,KAAKnB,cAAciW,yBAC9F,IAAI0wB,EDnMZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACH3zC,EAAGqwC,GAA4B8B,EAAUnyC,EAAG2zC,EAAe3zC,GAC3DC,EAAGowC,GAA4B8B,EAAUlyC,EAAG0zC,EAAe1zC,GAEnE,CC8LkCg0C,CAAwBz0B,EAAW9C,OAAOy1B,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EvM9PpC,UAAiC,EAAEzzC,EAAC,EAAEC,IAClC,MAAO,CAAE6C,IAAK7C,EAAEiD,IAAKF,MAAOhD,EAAEmD,IAAKF,OAAQhD,EAAEkD,IAAKJ,KAAM/C,EAAEkD,IAC9D,CuM4P6DixC,CAAwBH,IACzExlC,KAAK4iC,wBAA0B8C,EAC3BA,IACAF,EAAsBnxC,EAAwBqxC,GAEtD,CACA,OAAOF,CACX,CACA,cAAA54B,CAAexC,GACX,MAAM,KAAEwD,EAAI,aAAEg4B,EAAY,YAAE1D,EAAW,eAAE2D,EAAc,iBAAElG,EAAgB,oBAAEmG,GAAyB9lC,KAAK0U,WACnGiuB,EAAc3iC,KAAK2iC,aAAe,CAAC,EACnCoD,EAAqB3G,GAAUvpC,IACjC,IAAK0uC,GAAW1uC,EAAM+X,EAAM5N,KAAK0iC,kBAC7B,OAEJ,IAAI7tB,EAAc8tB,GAAeA,EAAY9sC,IAAU,CAAC,EACpD8pC,IACA9qB,EAAa,CAAEngB,IAAK,EAAGC,IAAK,IAOhC,MAAM41B,EAAkB2X,EAAc,IAAM,IACtC5X,EAAgB4X,EAAc,GAAK,IACnC/X,EAAU,CACZhyB,KAAM,UACNiS,SAAUw7B,EAAex7B,EAASvU,GAAQ,EAC1C00B,kBACAD,gBACAD,aAAc,IACdzB,UAAW,EACXD,UAAW,MACRkd,KACAhxB,GAKP,OAAO7U,KAAKgmC,wBAAwBnwC,EAAMs0B,KAG9C,OAAOtd,QAAQysB,IAAIyM,GAAoB94B,KAAK64B,EAChD,CACA,uBAAAE,CAAwBnwC,EAAMgf,GAC1B,MAAM2vB,EAAYxkC,KAAKyjC,mBAAmB5tC,GAE1C,OADAktB,GAAqB/iB,KAAKnB,cAAehJ,GAClC2uC,EAAU73B,MAAMorB,GAAmBliC,EAAM2uC,EAAW,EAAG3vB,EAAY7U,KAAKnB,eAAe,GAClG,CACA,aAAAukC,GACIhE,GAAUvpC,GAASmK,KAAKyjC,mBAAmB5tC,GAAMmW,OACrD,CACA,cAAAm3B,GACI/D,GAAUvpC,GAASmK,KAAKyjC,mBAAmB5tC,GAAMkX,WAAWqkB,QAChE,CACA,iBAAA8S,CAAkBruC,GACd,OAAOmK,KAAKyjC,mBAAmB5tC,GAAMkX,WAAWhS,KACpD,CAOA,kBAAA0oC,CAAmB5tC,GACf,MAAMowC,EAAU,QAAQpwC,EAAKsjB,gBACvB9K,EAAQrO,KAAKnB,cAAc6V,WAC3BwxB,EAAsB73B,EAAM43B,GAClC,OAAOC,GAEDlmC,KAAKnB,cAAcC,SAASjJ,GAAOwY,EAAMgD,QACrChD,EAAMgD,QAAQxb,QACdZ,IAAc,EAC5B,CACA,YAAAguC,CAAa1tC,GACT6pC,GAAUvpC,IACN,MAAM,KAAE+X,GAAS5N,KAAK0U,WAEtB,IAAK6vB,GAAW1uC,EAAM+X,EAAM5N,KAAK0iC,kBAC7B,OACJ,MAAM,WAAE1xB,GAAehR,KAAKnB,cACtB2lC,EAAYxkC,KAAKyjC,mBAAmB5tC,GAC1C,GAAImb,GAAcA,EAAW9C,OAAQ,CACjC,MAAM,IAAExZ,EAAG,IAAEC,GAAQqc,EAAW9C,OAAOy1B,UAAU9tC,GACjD2uC,EAAUxlC,IAAIzJ,EAAMM,GAAQjB,EAAUF,EAAKC,EAAK,IACpD,GAER,CAMA,8BAAAwxC,GACI,IAAKnmC,KAAKnB,cAAcnG,QACpB,OACJ,MAAM,KAAEkV,EAAI,gBAAE8R,GAAoB1f,KAAK0U,YACjC,WAAE1D,GAAehR,KAAKnB,cAC5B,IAAK2f,GAAYkB,KAAqB1O,IAAehR,KAAK2iC,YACtD,OAKJ3iC,KAAKojC,gBAKL,MAAMgD,EAAc,CAAE50C,EAAG,EAAGC,EAAG,GAC/B2tC,GAAUvpC,IACN,MAAM2uC,EAAYxkC,KAAKyjC,mBAAmB5tC,GAC1C,GAAI2uC,IAAkC,IAArBxkC,KAAK2iC,YAAuB,CACzC,MAAM1sB,EAASuuB,EAAUzlC,MACzBqnC,EAAYvwC,GDlT5B,SAAoBqO,EAAQgE,GACxB,IAAID,EAAS,GACb,MAAMo+B,EAAexH,GAAW36B,GAC1BoiC,EAAezH,GAAW32B,GAOhC,OANIo+B,EAAeD,EACfp+B,EAASlT,GAASmT,EAAOxT,IAAKwT,EAAOvT,IAAM0xC,EAAcniC,EAAOxP,KAE3D2xC,EAAeC,IACpBr+B,EAASlT,GAASmP,EAAOxP,IAAKwP,EAAOvP,IAAM2xC,EAAcp+B,EAAOxT,MAE7DyC,EAAM,EAAG,EAAG8Q,EACvB,CCuSoCs+B,CAAW,CAAE7xC,IAAKuhB,EAAQthB,IAAKshB,GAAUjW,KAAK2iC,YAAY9sC,GAClF,IAKJ,MAAM,kBAAE+d,GAAsB5T,KAAKnB,cAAc6V,WACjD1U,KAAKnB,cAAcnG,QAAQqY,MAAMhe,UAAY6gB,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN5C,EAAW+X,MAAQ/X,EAAW+X,KAAKyd,eACnCx1B,EAAWy1B,eACXzmC,KAAKujC,qBAKLnE,GAAUvpC,IACN,IAAK0uC,GAAW1uC,EAAM+X,EAAM,MACxB,OAIJ,MAAM42B,EAAYxkC,KAAKyjC,mBAAmB5tC,IACpC,IAAEnB,EAAG,IAAEC,GAAQqL,KAAK2iC,YAAY9sC,GACtC2uC,EAAUxlC,IAAIpK,EAAUF,EAAKC,EAAKyxC,EAAYvwC,MAEtD,CACA,YAAA6wC,GACI,IAAK1mC,KAAKnB,cAAcnG,QACpB,OACJ6pC,GAAoBvjC,IAAIgB,KAAKnB,cAAemB,MAC5C,MAIM2mC,EAAsBhI,GAJZ3+B,KAAKnB,cAAcnG,QAIkB,cAAgB0lC,IACjE,MAAM,KAAExwB,EAAI,aAAEwN,GAAe,GAASpb,KAAK0U,WAC3C9G,GAAQwN,GAAgBpb,KAAK2M,MAAMyxB,KAEjCwI,EAAyB,KAC3B,MAAM,gBAAElnB,GAAoB1f,KAAK0U,WAC7B8J,GAAYkB,IAAoBA,EAAgBhnB,UAChDsH,KAAK2iC,YAAc3iC,KAAK4kC,2BAG1B,WAAE5zB,GAAehR,KAAKnB,cACtBgoC,EAA4B71B,EAAWkB,iBAAiB,UAAW00B,GACrE51B,IAAeA,EAAW9C,SAC1B8C,EAAW+X,MAAQ/X,EAAW+X,KAAKyd,eACnCx1B,EAAWy1B,gBAEf,GAAMxpC,KAAK2pC,GAKX,MAAME,EAAqB9I,GAAY7kC,OAAQ,SAAU,IAAM6G,KAAKmmC,kCAK9DY,EAA2B/1B,EAAWkB,iBAAiB,YAAa,EAAIlX,QAAOgsC,uBAC7EhnC,KAAK89B,YAAckJ,IACnB5H,GAAUvpC,IACN,MAAMiK,EAAcE,KAAKyjC,mBAAmB5tC,GACvCiK,IAELE,KAAKxK,YAAYK,IAASmF,EAAMnF,GAAMH,UACtCoK,EAAYd,IAAIc,EAAYf,MAAQ/D,EAAMnF,GAAMH,cAEpDsK,KAAKnB,cAAcvB,SAE1B,GACD,MAAO,KACHwpC,IACAH,IACAE,IACAE,GAA4BA,IAEpC,CACA,QAAAryB,GACI,MAAMrG,EAAQrO,KAAKnB,cAAc6V,YAC3B,KAAE9G,GAAO,EAAK,kBAAEg2B,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAE3jB,GAAkB,EAAK,YAAEwiB,EAAcF,GAAc,aAAE4D,GAAe,GAAUv3B,EAC1J,MAAO,IACAA,EACHT,OACAg2B,oBACAP,kBACA3jB,kBACAwiB,cACA0D,eAER,EAEJ,SAASrB,GAAWhQ,EAAW3mB,EAAM80B,GACjC,SAAkB,IAAT90B,GAAiBA,IAAS2mB,GACT,OAArBmO,GAA6BA,IAAqBnO,EAC3D,CEvdA,MAAM0S,GAAgBl9B,GAAY,CAACq0B,EAAO6B,KAClCl2B,GACA,GAAMxM,WAAW,IAAMwM,EAAQq0B,EAAO6B,K,eCJ9C,MAAMiH,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQzxC,GAC7B,OAAIA,EAAKlB,MAAQkB,EAAKnB,IACX,EACH4yC,GAAUzxC,EAAKlB,IAAMkB,EAAKnB,KAAQ,GAC9C,CAQA,MAAM6yC,GAAsB,CACxBC,QAAS,CAACvxB,EAAQmnB,KACd,IAAKA,EAAKl1B,OACN,OAAO+N,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAIne,EAAG1D,KAAK6hB,GAIR,OAAOA,EAHPA,EAASviB,WAAWuiB,EAK5B,CAOA,MAAO,GAFGoxB,GAAgBpxB,EAAQmnB,EAAKl1B,OAAO1W,OACpC61C,GAAgBpxB,EAAQmnB,EAAKl1B,OAAOzW,QCjChDg2C,GAAmB,CACrBD,QAAS,CAACvxB,GAAUyxB,YAAWC,sBAC3B,MAAMC,EAAW3xB,EACX4xB,EAASvjC,GAAQjN,MAAM4e,GAE7B,GAAI4xB,EAAOlwC,OAAS,EAChB,OAAOiwC,EACX,MAAMziB,EAAW7gB,GAAQL,kBAAkBgS,GACrC8B,EAA8B,iBAAd8vB,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBn2C,EAAEM,MAAQ41C,EAAUl2C,EAC7Cu2C,EAASJ,EAAgBl2C,EAAEK,MAAQ41C,EAAUj2C,EACnDo2C,EAAO,EAAI9vB,IAAW+vB,EACtBD,EAAO,EAAI9vB,IAAWgwB,EAOtB,MAAMC,EAAepzC,EAAUkzC,EAAQC,EAAQ,IAO/C,MALkC,iBAAvBF,EAAO,EAAI9vB,KAClB8vB,EAAO,EAAI9vB,IAAWiwB,GAEQ,iBAAvBH,EAAO,EAAI9vB,KAClB8vB,EAAO,EAAI9vB,IAAWiwB,GACnB7iB,EAAS0iB,KCbxB,IAAII,IAAsB,EAC1B,MAAMC,WAAiC,EAAAruB,UAMnC,iBAAAsuB,GACI,MAAM,cAAEtpC,EAAa,YAAEupC,EAAW,kBAAEC,EAAiB,SAAEhxB,GAAarX,KAAKqO,OACnE,WAAE2C,GAAenS,GvItB/B,SAA2BypC,GACvB,IAAK,MAAMx0C,KAAOw0C,EACdnxB,GAAgBrjB,GAAOw0C,EAAWx0C,GAC9BE,EAAkBF,KAClBqjB,GAAgBrjB,GAAKy0C,eAAgB,EAGjD,CuIgBQC,CAAkBC,IACdz3B,IACIo3B,EAAYM,OACZN,EAAYM,MAAMpsC,IAAI0U,GACtBq3B,GAAqBA,EAAkBxK,UAAYxmB,GACnDgxB,EAAkBxK,SAAS7sB,GAE3Bi3B,IACAj3B,EAAW+X,KAAK4f,YAEpB33B,EAAWkB,iBAAiB,oBAAqB,KAC7ClS,KAAK4oC,iBAET53B,EAAW+O,WAAW,IACf/O,EAAWvG,QACdizB,eAAgB,IAAM19B,KAAK4oC,kBAGnC1B,GAAsBE,gBAAiB,CAC3C,CACA,uBAAAyB,CAAwBh1B,GACpB,MAAM,iBAAEi1B,EAAgB,cAAEjqC,EAAa,KAAE+O,EAAI,UAAE6vB,GAAcz9B,KAAKqO,OAC5D,WAAE2C,GAAenS,EACvB,OAAKmS,GASLA,EAAWysB,UAAYA,EACvBwK,IAAsB,EAClBr6B,GACAiG,EAAUi1B,mBAAqBA,QACV7zC,IAArB6zC,GACAj1B,EAAU4pB,YAAcA,EACxBzsB,EAAW+3B,aAGX/oC,KAAK4oC,eAEL/0B,EAAU4pB,YAAcA,IACpBA,EACAzsB,EAAWg4B,UAELh4B,EAAWi4B,YAMjB,GAAM1rC,WAAW,KACb,MAAM2rC,EAAQl4B,EAAWm4B,WACpBD,GAAUA,EAAME,QAAQzxC,QACzBqI,KAAK4oC,kBAKd,MArCI,IAsCf,CACA,kBAAAS,GACI,MAAM,WAAEr4B,GAAehR,KAAKqO,MAAMxP,cAC9BmS,IACAA,EAAW+X,KAAK4f,YAChBn7B,GAAUjQ,WAAW,MACZyT,EAAWs4B,kBAAoBt4B,EAAWu4B,UAC3CvpC,KAAK4oC,iBAIrB,CACA,oBAAAY,GACI,MAAM,cAAE3qC,EAAa,YAAEupC,EAAaC,kBAAmBoB,GAAoBzpC,KAAKqO,OAC1E,WAAE2C,GAAenS,EACnBmS,IACAA,EAAW04B,4BACPtB,GAAeA,EAAYM,OAC3BN,EAAYM,MAAMr2B,OAAOrB,GACzBy4B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW34B,GAEtC,CACA,YAAA43B,GACI,MAAM,aAAEA,GAAiB5oC,KAAKqO,MAC9Bu6B,GAAgBA,GACpB,CACA,MAAAtrC,GACI,OAAO,IACX,EAEJ,SAAS6jB,GAAc9S,GACnB,MAAOovB,EAAWmL,IAAgB,WAC5BR,GAAc,IAAA3tB,YAAWyH,GAAAC,GAC/B,OAAQ,KAAAN,KAAIqmB,GAA0B,IAAK75B,EAAO+5B,YAAaA,EAAaC,mBAAmB,IAAA5tB,YAAWqE,IAA2B2e,UAAWA,EAAWmL,aAAcA,GAC7K,CACA,MAAMH,GAAyB,CAC3BnjC,aAAc,IACPiiC,GACHqC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRpkC,oBAAqB+hC,GACrB9hC,qBAAsB8hC,GACtB5hC,uBAAwB4hC,GACxB7hC,wBAAyB6hC,GACzBsC,UAAWpC,I,eCpIf,SAASqC,GAAanxC,GAClB,OAAO,QAASA,IAAY,oBAAqBA,CACrD,CCRA,MAAMoxC,GAAiB,CAACjoC,EAAGC,IAAMD,EAAElJ,MAAQmJ,EAAEnJ,MCG7C,MAAMoxC,GACF,WAAArqC,GACIK,KAAKoQ,SAAW,GAChBpQ,KAAKiqC,SAAU,CACnB,CACA,GAAA3tC,CAAI2Y,GACA3L,GAActJ,KAAKoQ,SAAU6E,GAC7BjV,KAAKiqC,SAAU,CACnB,CACA,MAAA53B,CAAO4C,GACHvL,GAAW1J,KAAKoQ,SAAU6E,GAC1BjV,KAAKiqC,SAAU,CACnB,CACA,OAAAttC,CAAQX,GACJgE,KAAKiqC,SAAWjqC,KAAKoQ,SAAS6pB,KAAK8P,IACnC/pC,KAAKiqC,SAAU,EACfjqC,KAAKoQ,SAASzT,QAAQX,EAC1B,ECdJ,SAAS+1B,GAAM/1B,EAAUkuC,GACrB,MAAMv9B,EAAQxD,GAAKxL,MACbwsC,EAAe,EAAGlvC,gBACpB,MAAMi3B,EAAUj3B,EAAY0R,EACxBulB,GAAWgY,IACXrsC,GAAYssC,GACZnuC,EAASk2B,EAAUgY,KAI3B,OADA,GAAMltC,MAAMmtC,GAAc,GACnB,IAAMtsC,GAAYssC,EAC7B,CCdA,MAAMC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQzyC,OACrB2yC,GAAY72C,GAA2B,iBAAVA,EAAqBC,WAAWD,GAASA,EACtE82C,GAAQ92C,GAA2B,iBAAVA,GAAsBqE,EAAG1D,KAAKX,GAwC7D,SAAS+2C,GAAUn3C,EAAQo3C,GACvB,YAA8Bx1C,IAAvB5B,EAAOo3C,GACRp3C,EAAOo3C,GACPp3C,EAAOiS,YACjB,CAwBA,MAAMolC,GAAgCC,GAAS,EAAG,GAAKzd,IACjD0d,GAAiCD,GAAS,GAAK,IAAMvwC,IAC3D,SAASuwC,GAASj2C,EAAKC,EAAKsxB,GACxB,OAAQpC,GAEAA,EAAInvB,EACG,EACPmvB,EAAIlvB,EACG,EACJsxB,EAAOlxB,GAASL,EAAKC,EAAKkvB,GAEzC,CChFA,SAASgnB,GAAah1C,EAAMi1C,GACxBj1C,EAAKnB,IAAMo2C,EAAWp2C,IACtBmB,EAAKlB,IAAMm2C,EAAWn2C,GAC1B,CAMA,SAASo2C,GAAYh1C,EAAKi1C,GACtBH,GAAa90C,EAAIvE,EAAGw5C,EAAUx5C,GAC9Bq5C,GAAa90C,EAAItE,EAAGu5C,EAAUv5C,EAClC,CAMA,SAASw5C,GAAkBjwC,EAAOkwC,GAC9BlwC,EAAMtF,UAAYw1C,EAAYx1C,UAC9BsF,EAAMlJ,MAAQo5C,EAAYp5C,MAC1BkJ,EAAMxF,YAAc01C,EAAY11C,YAChCwF,EAAMiN,OAASijC,EAAYjjC,MAC/B,CCtBA,SAASkjC,GAAiB51C,EAAOG,EAAW5D,EAAO0D,EAAaG,GAM5D,OAJAJ,EAAQD,EADRC,GAASG,EACiB,EAAI5D,EAAO0D,QACpBP,IAAbU,IACAJ,EAAQD,EAAWC,EAAO,EAAII,EAAUH,IAErCD,CACX,CAsBA,SAAS61C,GAAqBv1C,EAAMw1C,GAAav3C,EAAKw3C,EAAUC,GAAYtjC,EAAQujC,IAlBpF,SAAyB31C,EAAMH,EAAY,EAAG5D,EAAQ,EAAGmW,EAAS,GAAKtS,EAAUm1C,EAAaj1C,EAAM21C,EAAa31C,GACzGgC,EAAQzD,KAAKsB,KACbA,EAAYhC,WAAWgC,GAEvBA,EADyBd,EAAU42C,EAAW92C,IAAK82C,EAAW72C,IAAKe,EAAY,KAChD81C,EAAW92C,KAE9C,GAAyB,iBAAdgB,EACP,OACJ,IAAIF,EAAcZ,EAAUk2C,EAAWp2C,IAAKo2C,EAAWn2C,IAAKsT,GACxDpS,IAASi1C,IACTt1C,GAAeE,GACnBG,EAAKnB,IAAMy2C,GAAiBt1C,EAAKnB,IAAKgB,EAAW5D,EAAO0D,EAAaG,GACrEE,EAAKlB,IAAMw2C,GAAiBt1C,EAAKlB,IAAKe,EAAW5D,EAAO0D,EAAaG,EACzE,CAMI81C,CAAgB51C,EAAMw1C,EAAWv3C,GAAMu3C,EAAWC,GAAWD,EAAWE,GAAYF,EAAWv5C,MAAOmW,EAAQujC,EAClH,CAIA,MAAME,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoB71C,EAAKs1C,EAAYL,EAAWa,GACrDT,GAAqBr1C,EAAIvE,EAAG65C,EAAYK,GAAOV,EAAYA,EAAUx5C,OAAIyD,EAAW42C,EAAYA,EAAUr6C,OAAIyD,GAC9Gm2C,GAAqBr1C,EAAItE,EAAG45C,EAAYM,GAAOX,EAAYA,EAAUv5C,OAAIwD,EAAW42C,EAAYA,EAAUp6C,OAAIwD,EAClH,CChDA,SAAS62C,GAAgB9wC,GACrB,OAA2B,IAApBA,EAAMtF,WAAmC,IAAhBsF,EAAMlJ,KAC1C,CACA,SAASi6C,GAAY/wC,GACjB,OAAO8wC,GAAgB9wC,EAAMxJ,IAAMs6C,GAAgB9wC,EAAMvJ,EAC7D,CACA,SAASu6C,GAAWlqC,EAAGC,GACnB,OAAOD,EAAEpN,MAAQqN,EAAErN,KAAOoN,EAAEnN,MAAQoN,EAAEpN,GAC1C,CAIA,SAASs3C,GAAkBnqC,EAAGC,GAC1B,OAAQ/Q,KAAK+P,MAAMe,EAAEpN,OAAS1D,KAAK+P,MAAMgB,EAAErN,MACvC1D,KAAK+P,MAAMe,EAAEnN,OAAS3D,KAAK+P,MAAMgB,EAAEpN,IAC3C,CACA,SAASu3C,GAAiBpqC,EAAGC,GACzB,OAAOkqC,GAAkBnqC,EAAEtQ,EAAGuQ,EAAEvQ,IAAMy6C,GAAkBnqC,EAAErQ,EAAGsQ,EAAEtQ,EACnE,CACA,SAAS06C,GAAYp2C,GACjB,OAAO8oC,GAAW9oC,EAAIvE,GAAKqtC,GAAW9oC,EAAItE,EAC9C,CACA,SAAS26C,GAAgBtqC,EAAGC,GACxB,OAAQD,EAAEpM,YAAcqM,EAAErM,WACtBoM,EAAEhQ,QAAUiQ,EAAEjQ,OACdgQ,EAAEtM,cAAgBuM,EAAEvM,WAC5B,CC1BA,MAAM62C,GACF,WAAA1sC,GACIK,KAAKopC,QAAU,EACnB,CACA,GAAA9sC,CAAI8gC,GACA9zB,GAActJ,KAAKopC,QAAShM,GAC5BA,EAAKlsB,gBACT,CACA,MAAAmB,CAAO+qB,GAKH,GAJA1zB,GAAW1J,KAAKopC,QAAShM,GACrBA,IAASp9B,KAAKssC,WACdtsC,KAAKssC,cAAWr3C,GAEhBmoC,IAASp9B,KAAKusC,KAAM,CACpB,MAAMD,EAAWtsC,KAAKopC,QAAQppC,KAAKopC,QAAQzxC,OAAS,GAChD20C,GACAtsC,KAAKgpC,QAAQsD,EAErB,CACJ,CACA,QAAArD,CAAS7L,GACL,MAAMoP,EAAcxsC,KAAKopC,QAAQqD,UAAWC,GAAWtP,IAASsP,GAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI1uC,EAAI4uC,EAAa5uC,GAAK,EAAGA,IAAK,CACnC,MAAM8uC,EAAS1sC,KAAKopC,QAAQxrC,GAC5B,IAAyB,IAArB8uC,EAAOjP,UAAqB,CAC5B6O,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAtsC,KAAKgpC,QAAQsD,IACN,EAKf,CACA,OAAAtD,CAAQ5L,EAAMuP,GACV,MAAML,EAAWtsC,KAAKusC,KACtB,GAAInP,IAASkP,IAEbtsC,KAAKssC,SAAWA,EAChBtsC,KAAKusC,KAAOnP,EACZA,EAAKwP,OACDN,GAAU,CACVA,EAAS11C,UAAY01C,EAASp7B,iBAC9BksB,EAAKlsB,iBACLksB,EAAKyP,WAAaP,EACdK,IACAvP,EAAKyP,WAAWC,iBAAkB,GAElCR,EAASS,WACT3P,EAAK2P,SAAWT,EAASS,SACzB3P,EAAK2P,SAASp8B,aACV27B,EAASU,iBAAmBV,EAAS37B,cAEzCysB,EAAKrU,MAAQqU,EAAKrU,KAAKkkB,aACvB7P,EAAK8P,eAAgB,GAEzB,MAAM,UAAEhtB,GAAckd,EAAK3yB,SACT,IAAdyV,GACAosB,EAASa,MAcjB,CACJ,CACA,qBAAAC,GACIptC,KAAKopC,QAAQzsC,QAASygC,IAClB,MAAM,QAAE3yB,EAAO,aAAE4iC,GAAiBjQ,EAClC3yB,EAAQizB,gBAAkBjzB,EAAQizB,iBAC9B2P,GACAA,EAAa5iC,QAAQizB,gBACjB2P,EAAa5iC,QAAQizB,kBAGrC,CACA,cAAAxsB,GACIlR,KAAKopC,QAAQzsC,QAASygC,IAClBA,EAAKxmC,UAAYwmC,EAAKlsB,gBAAe,IAE7C,CAKA,kBAAAo8B,GACQttC,KAAKusC,MAAQvsC,KAAKusC,KAAKQ,WACvB/sC,KAAKusC,KAAKQ,cAAW93C,EAE7B,ECvFJ,MAAMs4C,GAAU,CACZC,MAAO,EACPC,uBAAwB,EACxBC,sBAAuB,GAErBC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAI,GAAK,EACT,SAASC,GAAyB95C,EAAK+K,EAAexL,EAAQw6C,GAC1D,MAAM,aAAEl9B,GAAiB9R,EAErB8R,EAAa7c,KACbT,EAAOS,GAAO6c,EAAa7c,GAC3B+K,EAAc8U,eAAe7f,EAAK,GAC9B+5C,IACAA,EAAsB/5C,GAAO,GAGzC,CACA,SAASg6C,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAehlB,OAASglB,EACxB,OACJ,MAAM,cAAElvC,GAAkBkvC,EAAetjC,QACzC,IAAK5L,EACD,OACJ,MAAMw6B,EAAWnW,GAAqBrkB,GACtC,GAAI1F,OAAOqnB,4BAA4B6Y,EAAU,aAAc,CAC3D,MAAM,OAAEnrB,EAAM,SAAEmJ,GAAa02B,EAAetjC,QAC5CtR,OAAO80C,+BAA+B5U,EAAU,YAAa,KAASnrB,GAAUmJ,GACpF,CACA,MAAM,OAAEtH,GAAWg+B,EACfh+B,IAAWA,EAAOi+B,2BAClBF,GAAuC/9B,EAE/C,CACA,SAAS,IAAqB,qBAAEm+B,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACH,WAAA3uC,CAAYgR,EAAe,CAAC,EAAGZ,EAASo+B,OAIpCnuC,KAAKoiB,GAAK,KAIVpiB,KAAKuuC,YAAc,EACnBvuC,KAAKwuC,kBAAoB,EAOzBxuC,KAAKoQ,SAAW,IAAIvf,IAKpBmP,KAAKyK,QAAU,CAAC,EAMhBzK,KAAKyuC,iBAAkB,EACvBzuC,KAAKwjC,oBAAqB,EAO1BxjC,KAAKktC,eAAgB,EAKrBltC,KAAK0uC,mBAAoB,EAKzB1uC,KAAK2uC,yBAA0B,EAK/B3uC,KAAK6S,kBAAmB,EAIxB7S,KAAK4uC,uBAAwB,EAC7B5uC,KAAK6uC,uBAAwB,EAK7B7uC,KAAKitC,YAAa,EAIlBjtC,KAAK8uC,OAAQ,EAKb9uC,KAAK+uC,YAAa,EAIlB/uC,KAAKgvC,sBAAuB,EAO5BhvC,KAAKguC,2BAA4B,EASjChuC,KAAK0nC,UAAY,CAAEl2C,EAAG,EAAGC,EAAG,GAI5BuO,KAAKivC,cAAgB,IAAItwC,IACzBqB,KAAKkvC,iBAAkB,EAEvBlvC,KAAKmvC,iBAAkB,EACvBnvC,KAAKovC,eAAiB,IAAMpvC,KAAK5C,SACjC4C,KAAKqvC,2BAA4B,EACjCrvC,KAAKsvC,kBAAoB,KACjBtvC,KAAKitC,aACLjtC,KAAKitC,YAAa,EAClBjtC,KAAKuvC,sBAQbvvC,KAAKwvC,iBAAmB,KACpBxvC,KAAKqvC,2BAA4B,EAK7B70C,GAAY/G,QACZ85C,GAAQC,MACJD,GAAQE,uBACJF,GAAQG,sBACJ,GAEhB1tC,KAAKwtC,MAAM7wC,QAAQ8yC,IACnBzvC,KAAKwtC,MAAM7wC,QAAQ+yC,IACnB1vC,KAAKwtC,MAAM7wC,QAAQgzC,IACnB3vC,KAAKwtC,MAAM7wC,QAAQizC,IACfp1C,GAAYC,sBACZD,GAAYC,qBAAqB8yC,KAMzCvtC,KAAK6vC,yBAA2B,EAChC7vC,KAAK8vC,cAAe,EACpB9vC,KAAK+vC,WAAY,EACjB/vC,KAAKgwC,kBAAoB,EAKzBhwC,KAAKiwC,YAAc,IAAItxC,IACvBqB,KAAK2Q,aAAeA,EACpB3Q,KAAK+oB,KAAOhZ,EAASA,EAAOgZ,MAAQhZ,EAAS/P,KAC7CA,KAAKkwC,KAAOngC,EAAS,IAAIA,EAAOmgC,KAAMngC,GAAU,GAChD/P,KAAK+P,OAASA,EACd/P,KAAKpH,MAAQmX,EAASA,EAAOnX,MAAQ,EAAI,EACzC,IAAK,IAAIgF,EAAI,EAAGA,EAAIoC,KAAKkwC,KAAKv4C,OAAQiG,IAClCoC,KAAKkwC,KAAKtyC,GAAGoxC,sBAAuB,EAEpChvC,KAAK+oB,OAAS/oB,OACdA,KAAKwtC,MAAQ,IAAIxD,GACzB,CACA,gBAAA93B,CAAiBtf,EAAMmX,GAInB,OAHK/J,KAAKivC,cAAct1C,IAAI/G,IACxBoN,KAAKivC,cAAcjwC,IAAIpM,EAAM,IAAIiX,IAE9B7J,KAAKivC,cAAclwC,IAAInM,GAAM0J,IAAIyN,EAC5C,CACA,eAAAomC,CAAgBv9C,KAAS8iB,GACrB,MAAM06B,EAAsBpwC,KAAKivC,cAAclwC,IAAInM,GACnDw9C,GAAuBA,EAAoBpmC,UAAU0L,EACzD,CACA,YAAA26B,CAAaz9C,GACT,OAAOoN,KAAKivC,cAAct1C,IAAI/G,EAClC,CAIA,KAAA8e,CAAM9a,GACF,GAAIoJ,KAAKpJ,SACL,OCpOhB,IAAyB+B,EDqObqH,KAAK8uC,MAAQhF,GAAalzC,MCpO3BkzC,GADcnxC,EDqO2C/B,ICpOZ,QAApB+B,EAAQ+gB,SDqOhC1Z,KAAKpJ,SAAWA,EAChB,MAAM,SAAEygB,EAAQ,OAAEnJ,EAAM,cAAErP,GAAkBmB,KAAKyK,QASjD,GARI5L,IAAkBA,EAAcnG,SAChCmG,EAAc6S,MAAM9a,GAExBoJ,KAAK+oB,KAAKykB,MAAMlxC,IAAI0D,MACpBA,KAAK+P,QAAU/P,KAAK+P,OAAOK,SAAS9T,IAAI0D,MACpCA,KAAK+oB,KAAKmmB,kBAAoBhhC,GAAUmJ,KACxCrX,KAAKktC,eAAgB,GAErBgB,EAAsB,CACtB,IAAIoC,EACAC,EAAa,EACjB,MAAMC,EAAsB,IAAOxwC,KAAK+oB,KAAK8lB,uBAAwB,EAErE,GAAM5xC,KAAK,KACPszC,EAAap3C,OAAOo3C,aAExBrC,EAAqBt3C,EAAU,KAC3B,MAAM65C,EAAgBt3C,OAAOo3C,WACzBE,IAAkBF,IAEtBA,EAAaE,EACbzwC,KAAK+oB,KAAK8lB,uBAAwB,EAClCyB,GAAeA,IACfA,EAAcve,GAAMye,EAAqB,KACrCtJ,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/CnnC,KAAKwtC,MAAM7wC,QAAQ+zC,OAG/B,CACIr5B,GACArX,KAAK+oB,KAAK4nB,mBAAmBt5B,EAAUrX,OAGd,IAAzBA,KAAKyK,QAAQyE,SACbrQ,IACCwY,GAAYnJ,IACblO,KAAKkS,iBAAiB,YAAa,EAAGlX,QAAOgsC,mBAAkB4J,2BAA0B1iC,OAAQ2iC,MAC7F,GAAI7wC,KAAK8wC,yBAGL,OAFA9wC,KAAKkI,YAASjT,OACd+K,KAAK+wC,oBAAiB97C,GAI1B,MAAM+7C,EAAmBhxC,KAAKyK,QAAQoK,YAClChW,EAAc+V,wBACdq8B,IACE,uBAAEC,EAAsB,0BAAEC,GAA+BtyC,EAAc6V,WAKvE08B,GAAoBpxC,KAAKqxC,eAC1BnF,GAAiBlsC,KAAKqxC,aAAcR,GAYnCS,GAAgCtK,GAAoB4J,EAC1D,GAAI5wC,KAAKyK,QAAQmV,YACb5f,KAAK6sC,YACLyE,GACCtK,IACIoK,IAAqBpxC,KAAKspC,kBAAoB,CAC/CtpC,KAAK6sC,aACL7sC,KAAKqtC,aAAertC,KAAK6sC,WACzB7sC,KAAKqtC,aAAaA,kBAAep4C,GAErC,MAAMs8C,EAAmB,IAClB5uB,GAAmBquB,EAAkB,UACxCne,OAAQqe,EACRrxC,WAAYsxC,IAEZtyC,EAAcwR,oBACdrQ,KAAKyK,QAAQmV,cACb2xB,EAAiBxf,MAAQ,EACzBwf,EAAiBp5C,MAAO,GAE5B6H,KAAK4M,eAAe2kC,GAKpBvxC,KAAKwxC,mBAAmBx2C,EAAOs2C,EACnC,MAOStK,GACD0J,GAAgB1wC,MAEhBA,KAAKupC,UAAYvpC,KAAKyK,QAAQizB,gBAC9B19B,KAAKyK,QAAQizB,iBAGrB19B,KAAKqxC,aAAeR,GAGhC,CACA,OAAAz+B,GACIpS,KAAKyK,QAAQ4M,UAAYrX,KAAK+oC,aAC9B/oC,KAAK+oB,KAAKykB,MAAMn7B,OAAOrS,MACvB,MAAMkpC,EAAQlpC,KAAKmpC,WACnBD,GAASA,EAAM72B,OAAOrS,MACtBA,KAAK+P,QAAU/P,KAAK+P,OAAOK,SAAS5T,OAAOwD,MAC3CA,KAAKpJ,cAAW3B,EAChB+K,KAAKivC,cAAcnyC,QACnBe,GAAYmC,KAAKwvC,iBACrB,CAEA,WAAAiC,GACIzxC,KAAK4uC,uBAAwB,CACjC,CACA,aAAA8C,GACI1xC,KAAK4uC,uBAAwB,CACjC,CACA,eAAA+C,GACI,OAAO3xC,KAAK4uC,uBAAyB5uC,KAAK6uC,qBAC9C,CACA,sBAAAiC,GACI,OAAQ9wC,KAAKwjC,oBACRxjC,KAAK+P,QAAU/P,KAAK+P,OAAO+gC,2BAC5B,CACR,CAEA,WAAAc,GACQ5xC,KAAK2xC,oBAET3xC,KAAKitC,YAAa,EAClBjtC,KAAKwtC,OAASxtC,KAAKwtC,MAAM7wC,QAAQk1C,IACjC7xC,KAAKuuC,cACT,CACA,oBAAAuD,GACI,MAAM,cAAEjzC,GAAkBmB,KAAKyK,QAC/B,OAAO5L,GAAiBA,EAAc6V,WAAWd,iBACrD,CACA,UAAAm1B,CAAWgJ,GAAwB,GAE/B,GADA/xC,KAAK+oB,KAAKmmB,iBAAkB,EACxBlvC,KAAK+oB,KAAK4oB,kBAEV,YADA3xC,KAAKyK,QAAQizB,gBAAkB19B,KAAKyK,QAAQizB,kBAoBhD,GALIvkC,OAAO80C,iCACNjuC,KAAKguC,2BACNF,GAAuC9tC,OAE1CA,KAAK+oB,KAAKkkB,YAAcjtC,KAAK+oB,KAAK6oB,cAC/B5xC,KAAKktC,cACL,OACJltC,KAAKktC,eAAgB,EACrB,IAAK,IAAItvC,EAAI,EAAGA,EAAIoC,KAAKkwC,KAAKv4C,OAAQiG,IAAK,CACvC,MAAMw/B,EAAOp9B,KAAKkwC,KAAKtyC,GACvBw/B,EAAK4R,sBAAuB,EAC5B5R,EAAKoJ,aAAa,YACdpJ,EAAK3yB,QAAQmV,YACbwd,EAAK2L,YAAW,EAExB,CACA,MAAM,SAAE1xB,EAAQ,OAAEnJ,GAAWlO,KAAKyK,QAClC,QAAiBxV,IAAboiB,IAA2BnJ,EAC3B,OACJ,MAAM0F,EAAoB5T,KAAK8xC,uBAC/B9xC,KAAKgyC,2BAA6Bp+B,EAC5BA,EAAkB5T,KAAK2Q,aAAc,SACrC1b,EACN+K,KAAKiyC,iBACLF,GAAyB/xC,KAAKmwC,gBAAgB,aAClD,CACA,MAAA/yC,GACI4C,KAAKmvC,iBAAkB,EAKvB,GAJyBnvC,KAAK2xC,kBAQ1B,OAHA3xC,KAAK0xC,gBACL1xC,KAAKuvC,yBACLvvC,KAAKwtC,MAAM7wC,QAAQu1C,IAMvB,GAAIlyC,KAAKuuC,aAAevuC,KAAKwuC,kBAEzB,YADAxuC,KAAKwtC,MAAM7wC,QAAQw1C,IAGvBnyC,KAAKwuC,kBAAoBxuC,KAAKuuC,YACzBvuC,KAAKitC,YAINjtC,KAAKitC,YAAa,EAIlBjtC,KAAKwtC,MAAM7wC,QAAQy1C,IAKnBpyC,KAAKwtC,MAAM7wC,QAAQ8pC,IAKnBzmC,KAAKwtC,MAAM7wC,QAAQ01C,KAjBnBryC,KAAKwtC,MAAM7wC,QAAQw1C,IAmBvBnyC,KAAKuvC,oBAML,MAAM5xC,EAAMwL,GAAKxL,MACjBjB,GAAU1B,MAAQ7D,EAAM,EAAG,IAAO,GAAIwG,EAAMjB,GAAUzB,WACtDyB,GAAUzB,UAAY0C,EACtBjB,GAAUxB,cAAe,EACzB4C,GAAWV,OAAOX,QAAQC,IAC1BoB,GAAWT,UAAUZ,QAAQC,IAC7BoB,GAAWR,OAAOb,QAAQC,IAC1BA,GAAUxB,cAAe,CAC7B,CACA,SAAAytC,GACS3oC,KAAKmvC,kBACNnvC,KAAKmvC,iBAAkB,EACvB3hC,GAAUvQ,KAAK+C,KAAKovC,gBAE5B,CACA,iBAAAG,GACIvvC,KAAKwtC,MAAM7wC,QAAQ21C,IACnBtyC,KAAKiwC,YAAYtzC,QAAQ41C,GAC7B,CACA,wBAAAC,GACSxyC,KAAKqvC,4BACNrvC,KAAKqvC,2BAA4B,EACjC,GAAMhyC,UAAU2C,KAAKwvC,kBAAkB,GAAO,GAEtD,CACA,yBAAA9F,GAMI,GAAMnsC,WAAW,KACTyC,KAAKktC,cACLltC,KAAK+oB,KAAK4f,YAGV3oC,KAAK+oB,KAAKumB,qBAGtB,CAIA,cAAA2C,IACQjyC,KAAK+sC,UAAa/sC,KAAKpJ,WAE3BoJ,KAAK+sC,SAAW/sC,KAAK0kC,WACjB1kC,KAAK+sC,UACJlO,GAAW7+B,KAAK+sC,SAAS0F,YAAYjhD,IACrCqtC,GAAW7+B,KAAK+sC,SAAS0F,YAAYhhD,KACtCuO,KAAK+sC,cAAW93C,GAExB,CACA,YAAAwxC,GACI,IAAKzmC,KAAKpJ,SACN,OAEJ,GADAoJ,KAAKwmC,iBACCxmC,KAAKyK,QAAQuV,qBAAuBhgB,KAAKupC,UAC1CvpC,KAAKktC,eACN,OASJ,GAAIltC,KAAK6sC,aAAe7sC,KAAK6sC,WAAWj2C,SACpC,IAAK,IAAIgH,EAAI,EAAGA,EAAIoC,KAAKkwC,KAAKv4C,OAAQiG,IAAK,CAC1BoC,KAAKkwC,KAAKtyC,GAClB4oC,cACT,CAEJ,MAAMkM,EAAa1yC,KAAKkO,OACxBlO,KAAKkO,OAASlO,KAAK0kC,SAAQ,GAC3B1kC,KAAK2yC,gBjK3hBO,CACpBnhD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiK6hB7BqL,KAAKktC,eAAgB,EACrBltC,KAAK2nC,qBAAkB1yC,EACvB+K,KAAKmwC,gBAAgB,UAAWnwC,KAAKkO,OAAOy1B,WAC5C,MAAM,cAAE9kC,GAAkBmB,KAAKyK,QAC/B5L,GACIA,EAAcmL,OAAO,gBAAiBhK,KAAKkO,OAAOy1B,UAAW+O,EAAaA,EAAW/O,eAAY1uC,EACzG,CACA,YAAAuxC,CAAaoM,EAAQ,WACjB,IAAIp0C,EAAmB4C,QAAQpB,KAAKyK,QAAQkV,cAAgB3f,KAAKpJ,UAMjE,GALIoJ,KAAKslC,QACLtlC,KAAKslC,OAAOiJ,cAAgBvuC,KAAK+oB,KAAKwlB,aACtCvuC,KAAKslC,OAAOsN,QAAUA,IACtBp0C,GAAmB,GAEnBA,GAAoBwB,KAAKpJ,SAAU,CACnC,MAAMi8C,EAASxE,EAAkBruC,KAAKpJ,UACtCoJ,KAAKslC,OAAS,CACViJ,YAAavuC,KAAK+oB,KAAKwlB,YACvBqE,QACAC,SACA96B,OAAQq2B,EAAcpuC,KAAKpJ,UAC3Bk8C,QAAS9yC,KAAKslC,OAAStlC,KAAKslC,OAAOuN,OAASA,EAEpD,CACJ,CACA,cAAAvE,GACI,IAAKA,EACD,OACJ,MAAMyE,EAAmB/yC,KAAKktC,eAC1BltC,KAAKgvC,sBACLhvC,KAAKyK,QAAQuV,oBACXgzB,EAAgBhzC,KAAK2nC,kBAAoBoE,GAAY/rC,KAAK2nC,iBAC1D/zB,EAAoB5T,KAAK8xC,uBACzBmB,EAAyBr/B,EACzBA,EAAkB5T,KAAK2Q,aAAc,SACrC1b,EACAi+C,EAA8BD,IAA2BjzC,KAAKgyC,2BAChEe,GACA/yC,KAAKpJ,WACJo8C,GACG79C,EAAa6K,KAAK2Q,eAClBuiC,KACJ5E,EAAetuC,KAAKpJ,SAAUq8C,GAC9BjzC,KAAKgvC,sBAAuB,EAC5BhvC,KAAKkR,iBAEb,CACA,OAAAwzB,CAAQyO,GAAkB,GACtB,MAAMC,EAAUpzC,KAAKulC,iBACrB,IAAI5B,EAAY3jC,KAAKqzC,oBAAoBD,GAs+BrD,IAAkBr9C,EA59BN,OAJIo9C,IACAxP,EAAY3jC,KAAKmzC,gBAAgBxP,IAg+B7C2P,IADcv9C,EA79BG4tC,GA89BHnyC,GACd8hD,GAAUv9C,EAAItE,GA99BC,CACH88C,YAAavuC,KAAK+oB,KAAKwlB,YACvBkE,YAAaW,EACbzP,YACAhzB,aAAc,CAAC,EACfzM,OAAQlE,KAAKoiB,GAErB,CACA,cAAAmjB,GACI,MAAM,cAAE1mC,GAAkBmB,KAAKyK,QAC/B,IAAK5L,EACD,MjKlmBQ,CACpBrN,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKomB7B,MAAMoB,EAAM8I,EAAclI,qBAE1B,KADwBqJ,KAAKslC,QAAQwN,SAAW9yC,KAAKkwC,KAAK5hC,KAAKilC,KACzC,CAElB,MAAM,OAAEjO,GAAWtlC,KAAK+oB,KACpBuc,IACApvC,EAAcH,EAAIvE,EAAG8zC,EAAOvtB,OAAOvmB,GACnC0E,EAAcH,EAAItE,EAAG6zC,EAAOvtB,OAAOtmB,GAE3C,CACA,OAAOsE,CACX,CACA,mBAAAs9C,CAAoBt9C,GAChB,MAAMy9C,EjKhnBM,CACpBhiD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKmnB7B,GADAo2C,GAAYyI,EAAkBz9C,GAC1BiK,KAAKslC,QAAQwN,QACb,OAAOU,EAMX,IAAK,IAAI51C,EAAI,EAAGA,EAAIoC,KAAKkwC,KAAKv4C,OAAQiG,IAAK,CACvC,MAAMw/B,EAAOp9B,KAAKkwC,KAAKtyC,IACjB,OAAE0nC,EAAM,QAAE76B,GAAY2yB,EACxBA,IAASp9B,KAAK+oB,MAAQuc,GAAU76B,EAAQkV,eAKpC2lB,EAAOwN,SACP/H,GAAYyI,EAAkBz9C,GAElCG,EAAcs9C,EAAiBhiD,EAAG8zC,EAAOvtB,OAAOvmB,GAChD0E,EAAcs9C,EAAiB/hD,EAAG6zC,EAAOvtB,OAAOtmB,GAExD,CACA,OAAO+hD,CACX,CACA,cAAAC,CAAe19C,EAAK29C,GAAgB,GAChC,MAAMC,EjK3oBM,CACpBniD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiK6oB7Bo2C,GAAY4I,EAAgB59C,GAC5B,IAAK,IAAI6H,EAAI,EAAGA,EAAIoC,KAAKkwC,KAAKv4C,OAAQiG,IAAK,CACvC,MAAMw/B,EAAOp9B,KAAKkwC,KAAKtyC,IAClB81C,GACDtW,EAAK3yB,QAAQkV,cACbyd,EAAKkI,QACLlI,IAASA,EAAKrU,MACdvyB,EAAam9C,EAAgB,CACzBniD,GAAI4rC,EAAKkI,OAAOvtB,OAAOvmB,EACvBC,GAAI2rC,EAAKkI,OAAOvtB,OAAOtmB,IAG1B0D,EAAaioC,EAAKzsB,eAEvBna,EAAam9C,EAAgBvW,EAAKzsB,aACtC,CAIA,OAHIxb,EAAa6K,KAAK2Q,eAClBna,EAAam9C,EAAgB3zC,KAAK2Q,cAE/BgjC,CACX,CACA,eAAAR,CAAgBp9C,GACZ,MAAM69C,EjKlqBM,CACpBpiD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKoqB7Bo2C,GAAY6I,EAAqB79C,GACjC,IAAK,IAAI6H,EAAI,EAAGA,EAAIoC,KAAKkwC,KAAKv4C,OAAQiG,IAAK,CACvC,MAAMw/B,EAAOp9B,KAAKkwC,KAAKtyC,GACvB,IAAKw/B,EAAKxmC,SACN,SACJ,IAAKzB,EAAaioC,EAAKzsB,cACnB,SACJzb,EAASkoC,EAAKzsB,eAAiBysB,EAAK6U,iBACpC,MAAMpG,EAAYt9B,KAElBw8B,GAAYc,EADIzO,EAAKmI,kBAErBqG,GAAoBgI,EAAqBxW,EAAKzsB,aAAcysB,EAAK2P,SAAW3P,EAAK2P,SAASpJ,eAAY1uC,EAAW42C,EACrH,CAIA,OAHI12C,EAAa6K,KAAK2Q,eAClBi7B,GAAoBgI,EAAqB5zC,KAAK2Q,cAE3CijC,CACX,CACA,cAAAC,CAAe74C,GACXgF,KAAK8zC,YAAc94C,EACnBgF,KAAK+oB,KAAKypB,2BACVxyC,KAAK0uC,mBAAoB,CAC7B,CACA,UAAA3uB,CAAWtV,GACPzK,KAAKyK,QAAU,IACRzK,KAAKyK,WACLA,EACHyV,eAAiCjrB,IAAtBwV,EAAQyV,WAA0BzV,EAAQyV,UAE7D,CACA,iBAAAgyB,GACIlyC,KAAKslC,YAASrwC,EACd+K,KAAKkO,YAASjZ,EACd+K,KAAK+sC,cAAW93C,EAChB+K,KAAKgyC,gCAA6B/8C,EAClC+K,KAAK8zC,iBAAc7+C,EACnB+K,KAAKkI,YAASjT,EACd+K,KAAKktC,eAAgB,CACzB,CACA,kCAAA6G,GACS/zC,KAAKg0C,gBAQNh0C,KAAKg0C,eAAenE,2BACpBnzC,GAAUzB,WACV+E,KAAKg0C,eAAetE,oBAAmB,EAE/C,CACA,kBAAAA,CAAmBuE,GAAqB,GAMpC,MAAM1H,EAAOvsC,KAAKk0C,UAClBl0C,KAAK0uC,oBAAsB1uC,KAAK0uC,kBAAoBnC,EAAKmC,mBACzD1uC,KAAK6S,mBAAqB7S,KAAK6S,iBAAmB05B,EAAK15B,kBACvD7S,KAAK2uC,0BAA4B3uC,KAAK2uC,wBAA0BpC,EAAKoC,yBACrE,MAAMwF,EAAW/yC,QAAQpB,KAAKqtC,eAAiBrtC,OAASusC,EAWxD,KANkB0H,GACbE,GAAYn0C,KAAK2uC,yBAClB3uC,KAAK0uC,mBACL1uC,KAAK+P,QAAQ2+B,mBACb1uC,KAAKo0C,gCACLp0C,KAAK+oB,KAAK8lB,uBAEV,OACJ,MAAM,OAAE3gC,EAAM,SAAEmJ,GAAarX,KAAKyK,QAIlC,GAAKzK,KAAKkO,SAAYA,GAAUmJ,GAAhC,CAQA,GANArX,KAAK6vC,yBAA2BnzC,GAAUzB,WAMrC+E,KAAK8zC,cAAgB9zC,KAAK+wC,eAAgB,CAC3C,MAAMiD,EAAiBh0C,KAAKq0C,6BACxBL,GACAA,EAAe9lC,QACY,IAA3BlO,KAAKgwC,mBACLhwC,KAAKg0C,eAAiBA,EACtBh0C,KAAK+zC,qCACL/zC,KAAK+wC,ejKlwBD,CACpBv/C,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKowBrBqL,KAAKs0C,qBjKnwBD,CACpB9iD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKqwBrBwqC,GAAqBn/B,KAAKs0C,qBAAsBt0C,KAAKkO,OAAOy1B,UAAWqQ,EAAe9lC,OAAOy1B,WAC7FoH,GAAY/qC,KAAK+wC,eAAgB/wC,KAAKs0C,uBAGtCt0C,KAAKg0C,eAAiBh0C,KAAK+wC,oBAAiB97C,CAEpD,CAKA,GAAK+K,KAAK+wC,gBAAmB/wC,KAAK8zC,YAAlC,CtBpvBZ,IAAyB5rC,EAAQ+2B,EAAUlvB,EsB6xB/B,GApCK/P,KAAKkI,SACNlI,KAAKkI,OjKrxBG,CACpB1W,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKuxBzBqL,KAAKu0C,qBjKtxBG,CACpB/iD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,KiK4xBzBqL,KAAK+wC,gBACL/wC,KAAKs0C,sBACLt0C,KAAKg0C,gBACLh0C,KAAKg0C,eAAe9rC,QACpBlI,KAAK+zC,qCtBpwBI7rC,EsBqwBOlI,KAAKkI,OtBrwBJ+2B,EsBqwBYj/B,KAAK+wC,etBrwBPhhC,EsBqwBuB/P,KAAKg0C,eAAe9rC,OtBpwBlF82B,GAAiB92B,EAAO1W,EAAGytC,EAASztC,EAAGue,EAAOve,GAC9CwtC,GAAiB92B,EAAOzW,EAAGwtC,EAASxtC,EAAGse,EAAOte,IsBwwB7BuO,KAAK8zC,aACN1yC,QAAQpB,KAAKqtC,cAEbrtC,KAAKkI,OAASlI,KAAKyzC,eAAezzC,KAAKkO,OAAOy1B,WAG9CoH,GAAY/qC,KAAKkI,OAAQlI,KAAKkO,OAAOy1B,WAEzC7tC,EAAckK,KAAKkI,OAAQlI,KAAK8zC,cAMhC/I,GAAY/qC,KAAKkI,OAAQlI,KAAKkO,OAAOy1B,WAKrC3jC,KAAKo0C,+BAAgC,CACrCp0C,KAAKo0C,gCAAiC,EACtC,MAAMJ,EAAiBh0C,KAAKq0C,6BACxBL,GACA5yC,QAAQ4yC,EAAe3G,gBACnBjsC,QAAQpB,KAAKqtC,gBAChB2G,EAAevpC,QAAQkV,cACxBq0B,EAAe9rC,QACY,IAA3BlI,KAAKgwC,mBACLhwC,KAAKg0C,eAAiBA,EACtBh0C,KAAK+zC,qCACL/zC,KAAK+wC,ejKn0BD,CACpBv/C,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKq0BrBqL,KAAKs0C,qBjKp0BD,CACpB9iD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKs0BrBwqC,GAAqBn/B,KAAKs0C,qBAAsBt0C,KAAKkI,OAAQ8rC,EAAe9rC,QAC5E6iC,GAAY/qC,KAAK+wC,eAAgB/wC,KAAKs0C,uBAGtCt0C,KAAKg0C,eAAiBh0C,KAAK+wC,oBAAiB97C,CAEpD,CAIIuF,GAAY/G,OACZ85C,GAAQE,wBAhEF,CA5BA,CA8Fd,CACA,0BAAA4G,GACI,GAAKr0C,KAAK+P,SACN7a,EAAS8K,KAAK+P,OAAOY,gBACrBvb,EAAe4K,KAAK+P,OAAOY,cAG/B,OAAI3Q,KAAK+P,OAAOyH,eACLxX,KAAK+P,OAGL/P,KAAK+P,OAAOskC,4BAE3B,CACA,YAAA78B,GACI,OAAOpW,SAASpB,KAAK+wC,gBACjB/wC,KAAK8zC,aACL9zC,KAAKyK,QAAQmV,aACb5f,KAAKkO,OACb,CACA,cAAAyhC,GACI,MAAMpD,EAAOvsC,KAAKk0C,UACZC,EAAW/yC,QAAQpB,KAAKqtC,eAAiBrtC,OAASusC,EACxD,IAAIiI,GAAU,EAuBd,IAlBIx0C,KAAK0uC,mBAAqB1uC,KAAK+P,QAAQ2+B,qBACvC8F,GAAU,GAMVL,IACCn0C,KAAK2uC,yBAA2B3uC,KAAK6S,oBACtC2hC,GAAU,GAMVx0C,KAAK6vC,2BAA6BnzC,GAAUzB,YAC5Cu5C,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEtmC,EAAM,SAAEmJ,GAAarX,KAAKyK,QAWlC,GANAzK,KAAKyuC,gBAAkBrtC,QAASpB,KAAK+P,QAAU/P,KAAK+P,OAAO0+B,iBACvDzuC,KAAKspC,kBACLtpC,KAAKy0C,kBACJz0C,KAAKyuC,kBACNzuC,KAAK8zC,YAAc9zC,KAAK+wC,oBAAiB97C,IAExC+K,KAAKkO,SAAYA,IAAUmJ,EAC5B,OAKJ0zB,GAAY/qC,KAAK2yC,gBAAiB3yC,KAAKkO,OAAOy1B,WAI9C,MAAM+Q,EAAiB10C,KAAK0nC,UAAUl2C,EAChCmjD,EAAiB30C,KAAK0nC,UAAUj2C,GpNz3BlD,SAAyBsE,EAAK2xC,EAAWkN,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASj9C,OAC5B,IAAKm9C,EACD,OAGJ,IAAI1X,EACApiC,EAFJ0sC,EAAUl2C,EAAIk2C,EAAUj2C,EAAI,EAG5B,IAAK,IAAImM,EAAI,EAAGA,EAAIk3C,EAAYl3C,IAAK,CACjCw/B,EAAOwX,EAASh3C,GAChB5C,EAAQoiC,EAAKuK,gBAKb,MAAM,cAAE9oC,GAAkBu+B,EAAK3yB,QAC3B5L,GACAA,EAAcwP,MAAM0C,OACkB,aAAtClS,EAAcwP,MAAM0C,MAAMgkC,UAG1BF,GACAzX,EAAK3yB,QAAQkV,cACbyd,EAAKkI,QACLlI,IAASA,EAAKrU,MACdvyB,EAAaT,EAAK,CACdvE,GAAI4rC,EAAKkI,OAAOvtB,OAAOvmB,EACvBC,GAAI2rC,EAAKkI,OAAOvtB,OAAOtmB,IAG3BuJ,IAEA0sC,EAAUl2C,GAAKwJ,EAAMxJ,EAAEM,MACvB41C,EAAUj2C,GAAKuJ,EAAMvJ,EAAEK,MAEvBgE,EAAcC,EAAKiF,IAEnB65C,GAAsB1/C,EAAaioC,EAAKzsB,eACxCna,EAAaT,EAAKqnC,EAAKzsB,cAE/B,CAKI+2B,EAAUl2C,EAAIyE,GACdyxC,EAAUl2C,EAAIwE,IACd0xC,EAAUl2C,EAAI,GAEdk2C,EAAUj2C,EAAIwE,GACdyxC,EAAUj2C,EAAIuE,IACd0xC,EAAUj2C,EAAI,EAEtB,CoNy0BYujD,CAAgBh1C,KAAK2yC,gBAAiB3yC,KAAK0nC,UAAW1nC,KAAKkwC,KAAMiE,IAK7D5H,EAAKr+B,QACJq+B,EAAKrkC,QACgB,IAArBlI,KAAK0nC,UAAUl2C,GAAgC,IAArBwO,KAAK0nC,UAAUj2C,IAC1C86C,EAAKrkC,OAASqkC,EAAKr+B,OAAOy1B,UAC1B4I,EAAKgI,qBjKt6BG,CACpB/iD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,KiKy6B7B,MAAM,OAAEuT,GAAWqkC,EACdrkC,GAYAlI,KAAK2nC,iBAAoB3nC,KAAKi1C,qBAI/BhK,GAAkBjrC,KAAKi1C,oBAAoBzjD,EAAGwO,KAAK2nC,gBAAgBn2C,GACnEy5C,GAAkBjrC,KAAKi1C,oBAAoBxjD,EAAGuO,KAAK2nC,gBAAgBl2C,IAJnEuO,KAAKk1C,yBAeTnW,GAAa/+B,KAAK2nC,gBAAiB3nC,KAAK2yC,gBAAiBzqC,EAAQlI,KAAK2Q,cAClE3Q,KAAK0nC,UAAUl2C,IAAMkjD,GACrB10C,KAAK0nC,UAAUj2C,IAAMkjD,GACpBvI,GAAgBpsC,KAAK2nC,gBAAgBn2C,EAAGwO,KAAKi1C,oBAAoBzjD,IACjE46C,GAAgBpsC,KAAK2nC,gBAAgBl2C,EAAGuO,KAAKi1C,oBAAoBxjD,KAClEuO,KAAK8vC,cAAe,EACpB9vC,KAAKkR,iBACLlR,KAAKmwC,gBAAgB,mBAAoBjoC,IAKzC1N,GAAY/G,OACZ85C,GAAQG,yBAnCJ1tC,KAAKi1C,sBACLj1C,KAAKk1C,yBACLl1C,KAAKkR,iBAmCjB,CACA,IAAAi8B,GACIntC,KAAK+vC,WAAY,CAErB,CACA,IAAAnD,GACI5sC,KAAK+vC,WAAY,CAErB,CACA,cAAA7+B,CAAeikC,GAAY,GAEvB,GADAn1C,KAAKyK,QAAQ5L,eAAeqS,iBACxBikC,EAAW,CACX,MAAMjM,EAAQlpC,KAAKmpC,WACnBD,GAASA,EAAMh4B,gBACnB,CACIlR,KAAKqtC,eAAiBrtC,KAAKqtC,aAAaz2C,WACxCoJ,KAAKqtC,kBAAep4C,EAE5B,CACA,sBAAAigD,GACIl1C,KAAKi1C,oBjK7+BS,CACtBzjD,EAP0B,CAC1BkE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,GAIb/D,EAR0B,CAC1BiE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,IiKg/BLwK,KAAK2nC,gBjK9+BS,CACtBn2C,EAP0B,CAC1BkE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,GAIb/D,EAR0B,CAC1BiE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,IiKi/BLwK,KAAKo1C,6BjK/+BS,CACtB5jD,EAP0B,CAC1BkE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,GAIb/D,EAR0B,CAC1BiE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,GiKk/BT,CACA,kBAAAg8C,CAAmBx2C,EAAOs2C,GAA+B,GACrD,MAAMvE,EAAW/sC,KAAK+sC,SAChBsI,EAAuBtI,EAAWA,EAASp8B,aAAe,CAAC,EAC3D2kC,EAAc,IAAKt1C,KAAK2Q,cACxBmjC,EjKr/BQ,CACtBtiD,EAP0B,CAC1BkE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,GAIb/D,EAR0B,CAC1BiE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,IiKw/BAwK,KAAKg0C,gBACLh0C,KAAKg0C,eAAevpC,QAAQmV,aAC7B5f,KAAK+wC,eAAiB/wC,KAAKs0C,0BAAuBr/C,GAEtD+K,KAAKo0C,gCAAkC9C,EACvC,MAAMiE,EjKt/BM,CACpB/jD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiK0/BvB6gD,GAFiBzI,EAAWA,EAAS7oC,YAASjP,MAC/B+K,KAAKkO,OAASlO,KAAKkO,OAAOhK,YAASjP,GAElDi0C,EAAQlpC,KAAKmpC,WACbsM,GAAgBvM,GAASA,EAAME,QAAQzxC,QAAU,EACjD+9C,EAAyBt0C,QAAQo0C,IAClCC,IAC0B,IAA3Bz1C,KAAKyK,QAAQyV,YACZlgB,KAAKkwC,KAAK5hC,KAAKqnC,KAEpB,IAAIC,EADJ51C,KAAKgwC,kBAAoB,EAEzBhwC,KAAK61C,eAAkB5/B,IACnB,MAAMlhB,EAAWkhB,EAAS,IFngC1C,IAAmBnU,EAAGC,EEwhDNqC,EAAQvP,EAAMC,EAAI+uB,EAphBlBiyB,GAAahC,EAAYtiD,EAAGwJ,EAAMxJ,EAAGuD,GACrC+gD,GAAahC,EAAYriD,EAAGuJ,EAAMvJ,EAAGsD,GACrCiL,KAAK6zC,eAAeC,GAChB9zC,KAAK+wC,gBACL/wC,KAAKs0C,sBACLt0C,KAAKkO,QACLlO,KAAKg0C,gBACLh0C,KAAKg0C,eAAe9lC,SACpBixB,GAAqBoW,EAAgBv1C,KAAKkO,OAAOy1B,UAAW3jC,KAAKg0C,eAAe9lC,OAAOy1B,WA4gB3Fv/B,EA3gBWpE,KAAK+wC,eA2gBRl8C,EA3gBwBmL,KAAKs0C,qBA2gBvBx/C,EA3gB6CygD,EA2gBzC1xB,EA3gByD9uB,EA4gBvFghD,GAAQ3xC,EAAO5S,EAAGqD,EAAKrD,EAAGsD,EAAGtD,EAAGqyB,GAChCkyB,GAAQ3xC,EAAO3S,EAAGoD,EAAKpD,EAAGqD,EAAGrD,EAAGoyB,GAxgBZ+xB,IFlhCL9zC,EEmhCe9B,KAAK+wC,eFnhCjBhvC,EEmhCiC6zC,EFlhC5C5J,GAAWlqC,EAAEtQ,EAAGuQ,EAAEvQ,IAAMw6C,GAAWlqC,EAAErQ,EAAGsQ,EAAEtQ,MEmhC7BuO,KAAK0uC,mBAAoB,GAExBkH,IACDA,EjKvhCA,CACpBpkD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,KiKyhCrBo2C,GAAY6K,EAAoB51C,KAAK+wC,iBAErCyE,IACAx1C,KAAKgtC,gBAAkBsI,EL/hC3C,SAAmBptC,EAAQ8tC,EAAQzJ,EAAMx3C,EAAU2gD,EAAwBD,GACnEC,GACAxtC,EAAOzB,QAAU7R,EAAU,EAAG23C,EAAK9lC,SAAW,EAAGikC,GAAgB31C,IACjEmT,EAAO+tC,YAAcrhD,EAAUohD,EAAOvvC,SAAW,EAAG,EAAGmkC,GAAiB71C,KAEnE0gD,IACLvtC,EAAOzB,QAAU7R,EAAUohD,EAAOvvC,SAAW,EAAG8lC,EAAK9lC,SAAW,EAAG1R,IAKvE,IAAK,IAAI6I,EAAI,EAAGA,EAAIysC,GAAYzsC,IAAK,CACjC,MAAMs4C,EAAc,SAAS9L,GAAQxsC,WACrC,IAAIu4C,EAAe3L,GAAUwL,EAAQE,GACjCE,EAAa5L,GAAU+B,EAAM2J,QACZjhD,IAAjBkhD,QAA6ClhD,IAAfmhD,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA7L,GAAK4L,KAAkB5L,GAAK6L,IAE5BluC,EAAOguC,GAAellD,KAAK2D,IAAIC,EAAU01C,GAAS6L,GAAe7L,GAAS8L,GAAarhD,GAAW,IAC9F8C,EAAQzD,KAAKgiD,IAAev+C,EAAQzD,KAAK+hD,MACzCjuC,EAAOguC,IAAgB,MAI3BhuC,EAAOguC,GAAeE,EAE9B,EAIIJ,EAAO9kD,QAAUq7C,EAAKr7C,UACtBgX,EAAOhX,OAAS0D,EAAUohD,EAAO9kD,QAAU,EAAGq7C,EAAKr7C,QAAU,EAAG6D,GAExE,CK0/BoBshD,CAAUf,EAAaD,EAAsBr1C,KAAK2Q,aAAc5b,EAAU2gD,EAAwBD,IAEtGz1C,KAAK+oB,KAAKypB,2BACVxyC,KAAKkR,iBACLlR,KAAKgwC,kBAAoBj7C,GAE7BiL,KAAK61C,eAAe71C,KAAKyK,QAAQmV,WAAa,IAAO,EACzD,CACA,cAAAhT,CAAenC,GACXzK,KAAKmwC,gBAAgB,kBACrBnwC,KAAKspC,kBAAkBt9B,OACvBhM,KAAKqtC,cAAc/D,kBAAkBt9B,OACjChM,KAAKy0C,mBACL52C,GAAYmC,KAAKy0C,kBACjBz0C,KAAKy0C,sBAAmBx/C,GAO5B+K,KAAKy0C,iBAAmB,GAAMr3C,OAAO,KACjC8pC,GAAsBC,wBAAyB,EAC/C1jB,GAAiBvV,SACjBlO,KAAKF,cAAgBE,KAAKF,YAAcA,GAAY,IACpDE,KAAKspC,iBE7jCrB,SAA4B71C,EAAO6M,EAAWmK,GAC1C,MAAM6rC,EAAgBttC,GAAcvV,GAASA,EAAQqM,GAAYrM,GAEjE,OADA6iD,EAAc3pC,MAAMorB,GAAmB,GAAIue,EAAeh2C,EAAWmK,IAC9D6rC,EAAcvpC,SACzB,CFyjCwCwpC,CAAmBv2C,KAAKF,YAAa,CAAC,EAAG,KAAO,IACjE2K,EACHL,SAAU,EACVquB,QAAQ,EACR7lB,SAAWqD,IACPjW,KAAK61C,eAAe5/B,GACpBxL,EAAQmI,UAAYnI,EAAQmI,SAASqD,IAEzC+a,OAAQ,KACJvN,GAAiBvV,UAErBrO,WAAY,KACR4jB,GAAiBvV,SACjBzD,EAAQ5K,YAAc4K,EAAQ5K,aAC9BG,KAAKw2C,uBAGTx2C,KAAKqtC,eACLrtC,KAAKqtC,aAAa/D,iBAAmBtpC,KAAKspC,kBAE9CtpC,KAAKy0C,sBAAmBx/C,GAEhC,CACA,iBAAAuhD,GACQx2C,KAAKqtC,eACLrtC,KAAKqtC,aAAa/D,sBAAmBr0C,EACrC+K,KAAKqtC,aAAaP,qBAAkB73C,GAExC,MAAMi0C,EAAQlpC,KAAKmpC,WACnBD,GAASA,EAAMkE,wBACfptC,KAAKqtC,aACDrtC,KAAKspC,iBACDtpC,KAAKgtC,qBACD/3C,EACZ+K,KAAKmwC,gBAAgB,oBACzB,CACA,eAAAO,GACQ1wC,KAAKspC,mBACLtpC,KAAK61C,gBAAkB71C,KAAK61C,eAvkCpB,KAwkCR71C,KAAKspC,iBAAiBt9B,QAE1BhM,KAAKw2C,mBACT,CACA,uBAAAC,GACI,MAAMlK,EAAOvsC,KAAKk0C,UAClB,IAAI,qBAAEK,EAAoB,OAAErsC,EAAM,OAAEgG,EAAM,aAAEyC,GAAiB47B,EAC7D,GAAKgI,GAAyBrsC,GAAWgG,EAAzC,CAOA,GAAIlO,OAASusC,GACTvsC,KAAKkO,QACLA,GACAwoC,GAA0B12C,KAAKyK,QAAQwV,cAAejgB,KAAKkO,OAAOy1B,UAAWz1B,EAAOy1B,WAAY,CAChGz7B,EAASlI,KAAKkI,QjK9mCN,CACpB1W,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiKgnCzB,MAAMgiD,EAAU9X,GAAW7+B,KAAKkO,OAAOy1B,UAAUnyC,GACjD0W,EAAO1W,EAAEkD,IAAM63C,EAAKrkC,OAAO1W,EAAEkD,IAC7BwT,EAAO1W,EAAEmD,IAAMuT,EAAO1W,EAAEkD,IAAMiiD,EAC9B,MAAMC,EAAU/X,GAAW7+B,KAAKkO,OAAOy1B,UAAUlyC,GACjDyW,EAAOzW,EAAEiD,IAAM63C,EAAKrkC,OAAOzW,EAAEiD,IAC7BwT,EAAOzW,EAAEkD,IAAMuT,EAAOzW,EAAEiD,IAAMkiD,CAClC,CACA7L,GAAYwJ,EAAsBrsC,GAMlC1R,EAAa+9C,EAAsB5jC,GAOnCouB,GAAa/+B,KAAKo1C,6BAA8Bp1C,KAAK2yC,gBAAiB4B,EAAsB5jC,EA/BlF,CAgCd,CACA,kBAAAggC,CAAmBt5B,EAAU+lB,GACpBp9B,KAAKiwC,YAAYt2C,IAAI0d,IACtBrX,KAAKiwC,YAAYjxC,IAAIqY,EAAU,IAAIg1B,IAEzBrsC,KAAKiwC,YAAYlxC,IAAIsY,GAC7B/a,IAAI8gC,GACV,MAAMtf,EAASsf,EAAK3yB,QAAQgV,uBAC5B2d,EAAK4L,QAAQ,CACTn0B,WAAYiJ,EAASA,EAAOjJ,gBAAa5f,EACzC03C,sBAAuB7uB,GAAUA,EAAO+4B,4BAClC/4B,EAAO+4B,4BAA4BzZ,QACnCnoC,GAEd,CACA,MAAAs0C,GACI,MAAML,EAAQlpC,KAAKmpC,WACnB,OAAOD,GAAQA,EAAMqD,OAASvsC,IAClC,CACA,OAAAk0C,GACI,MAAM,SAAE78B,GAAarX,KAAKyK,QAC1B,OAAO4M,GAAWrX,KAAKmpC,YAAYoD,MAAevsC,IACtD,CACA,WAAA82C,GACI,MAAM,SAAEz/B,GAAarX,KAAKyK,QAC1B,OAAO4M,EAAWrX,KAAKmpC,YAAYmD,cAAWr3C,CAClD,CACA,QAAAk0C,GACI,MAAM,SAAE9xB,GAAarX,KAAKyK,QAC1B,GAAI4M,EACA,OAAOrX,KAAK+oB,KAAKknB,YAAYlxC,IAAIsY,EACzC,CACA,OAAA2xB,EAAQ,WAAE+F,EAAU,WAAEl6B,EAAU,sBAAE83B,GAA2B,CAAC,GAC1D,MAAMzD,EAAQlpC,KAAKmpC,WACfD,GACAA,EAAMF,QAAQhpC,KAAM2sC,GACpBoC,IACA/uC,KAAK2nC,qBAAkB1yC,EACvB+K,KAAK+uC,YAAa,GAElBl6B,GACA7U,KAAK+f,WAAW,CAAElL,cAC1B,CACA,QAAAo0B,GACI,MAAMC,EAAQlpC,KAAKmpC,WACnB,QAAID,GACOA,EAAMD,SAASjpC,KAK9B,CACA,oBAAA6xC,GACI,MAAM,cAAEhzC,GAAkBmB,KAAKyK,QAC/B,IAAK5L,EACD,OAEJ,IAAIk4C,GAAyB,EAK7B,MAAM,aAAEpmC,GAAiB9R,EAWzB,IAVI8R,EAAape,GACboe,EAAazf,QACbyf,EAAale,SACbke,EAAaje,SACbie,EAAa3e,SACb2e,EAAa1e,OACb0e,EAAaxe,SACb4kD,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAC,EACjBrmC,EAAape,GACbq7C,GAAyB,IAAK/uC,EAAem4C,EAAah3C,KAAKgtC,iBAGnE,IAAK,IAAIpvC,EAAI,EAAGA,EAAI+vC,GAAch2C,OAAQiG,IACtCgwC,GAAyB,SAASD,GAAc/vC,KAAMiB,EAAem4C,EAAah3C,KAAKgtC,iBACvFY,GAAyB,OAAOD,GAAc/vC,KAAMiB,EAAem4C,EAAah3C,KAAKgtC,iBAIzFnuC,EAAcvB,SAEd,IAAK,MAAMxJ,KAAOkjD,EACdn4C,EAAc8U,eAAe7f,EAAKkjD,EAAYljD,IAC1CkM,KAAKgtC,kBACLhtC,KAAKgtC,gBAAgBl5C,GAAOkjD,EAAYljD,IAKhD+K,EAAcqS,gBAClB,CACA,qBAAA+F,CAAsBggC,EACtBlgC,GACI,IAAK/W,KAAKpJ,UAAYoJ,KAAK8uC,MACvB,OACJ,IAAK9uC,KAAK+vC,UAEN,YADAkH,EAAYC,WAAa,UAG7B,MAAMtjC,EAAoB5T,KAAK8xC,uBAC/B,GAAI9xC,KAAK+uC,WASL,OARA/uC,KAAK+uC,YAAa,EAClBkI,EAAYC,WAAa,GACzBD,EAAYxwC,QAAU,GACtBwwC,EAAYE,cACRj6B,GAAmBnG,GAAWogC,gBAAkB,QACpDF,EAAYlkD,UAAY6gB,EAClBA,EAAkB5T,KAAK2Q,aAAc,IACrC,QAGV,MAAM47B,EAAOvsC,KAAKk0C,UAClB,IAAKl0C,KAAK2nC,kBAAoB3nC,KAAKkO,SAAWq+B,EAAKrkC,OAe/C,OAdIlI,KAAKyK,QAAQ4M,WACb4/B,EAAYxwC,aACsBxR,IAA9B+K,KAAK2Q,aAAalK,QACZzG,KAAK2Q,aAAalK,QAClB,EACVwwC,EAAYE,cACRj6B,GAAmBnG,GAAWogC,gBAAkB,SAEpDn3C,KAAK8vC,eAAiB36C,EAAa6K,KAAK2Q,gBACxCsmC,EAAYlkD,UAAY6gB,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN5T,KAAK8vC,cAAe,IAI5BmH,EAAYC,WAAa,GACzB,MAAME,EAAiB7K,EAAKS,iBAAmBT,EAAK57B,aACpD3Q,KAAKy2C,0BACL,IAAI1jD,EG1xChB,SAAkCiI,EAAO0sC,EAAW2P,GAChD,IAAItkD,EAAY,GAOhB,MAAMukD,EAAat8C,EAAMxJ,EAAEkE,UAAYgyC,EAAUl2C,EAC3C+lD,EAAav8C,EAAMvJ,EAAEiE,UAAYgyC,EAAUj2C,EAC3C+lD,EAAaH,GAAiB9kD,GAAK,EAWzC,IAVI+kD,GAAcC,GAAcC,KAC5BzkD,EAAY,eAAeukD,QAAiBC,QAAiBC,SAM7C,IAAhB9P,EAAUl2C,GAA2B,IAAhBk2C,EAAUj2C,IAC/BsB,GAAa,SAAS,EAAI20C,EAAUl2C,MAAM,EAAIk2C,EAAUj2C,OAExD4lD,EAAiB,CACjB,MAAM,qBAAE7wC,EAAoB,OAAEtV,EAAM,QAAEuB,EAAO,QAAEC,EAAO,MAAET,EAAK,MAAEE,GAAUklD,EACrE7wC,IACAzT,EAAY,eAAeyT,QAA2BzT,KACtD7B,IACA6B,GAAa,UAAU7B,UACvBuB,IACAM,GAAa,WAAWN,UACxBC,IACAK,GAAa,WAAWL,UACxBT,IACAc,GAAa,SAASd,UACtBE,IACAY,GAAa,SAASZ,SAC9B,CAKA,MAAMslD,EAAgBz8C,EAAMxJ,EAAEM,MAAQ41C,EAAUl2C,EAC1CkmD,EAAgB18C,EAAMvJ,EAAEK,MAAQ41C,EAAUj2C,EAIhD,OAHsB,IAAlBgmD,GAAyC,IAAlBC,IACvB3kD,GAAa,SAAS0kD,MAAkBC,MAErC3kD,GAAa,MACxB,CH4uC4B4kD,CAAyB33C,KAAKo1C,6BAA8Bp1C,KAAK0nC,UAAW0P,GACxFxjC,IACA7gB,EAAY6gB,EAAkBwjC,EAAgBrkD,IAElDkkD,EAAYlkD,UAAYA,EACxB,MAAM,EAAEvB,EAAC,EAAEC,GAAMuO,KAAK2nC,gBACtBsP,EAAY1gC,gBAAkB,GAAc,IAAX/kB,EAAEyW,WAA4B,IAAXxW,EAAEwW,YAClDskC,EAAKS,gBAKLiK,EAAYxwC,QACR8lC,IAASvsC,KACHo3C,EAAe3wC,SACbzG,KAAK2Q,aAAalK,SAClB,EACFzG,KAAK8sC,gBACD9sC,KAAK2Q,aAAalK,QAClB2wC,EAAenB,YAO7BgB,EAAYxwC,QACR8lC,IAASvsC,UACwB/K,IAA3BmiD,EAAe3wC,QACX2wC,EAAe3wC,QACf,QAC2BxR,IAA/BmiD,EAAenB,YACXmB,EAAenB,YACf,EAKlB,IAAK,MAAMniD,KAAOqjB,GAAiB,CAC/B,QAA4BliB,IAAxBmiD,EAAetjD,GACf,SACJ,MAAM,QAAE0zC,EAAO,QAAEoC,EAAO,cAAErB,GAAkBpxB,GAAgBrjB,GAOtD8jD,EAA0B,SAAd7kD,EACZqkD,EAAetjD,GACf0zC,EAAQ4P,EAAetjD,GAAMy4C,GACnC,GAAI3C,EAAS,CACT,MAAMiO,EAAMjO,EAAQjyC,OACpB,IAAK,IAAIiG,EAAI,EAAGA,EAAIi6C,EAAKj6C,IACrBq5C,EAAYrN,EAAQhsC,IAAMg6C,CAElC,MAKQrP,EACAvoC,KAAKyK,QAAQ5L,cAAciS,YAAYiF,KAAKjiB,GAAO8jD,EAGnDX,EAAYnjD,GAAO8jD,CAG/B,CAMI53C,KAAKyK,QAAQ4M,WACb4/B,EAAYE,cACR5K,IAASvsC,KACHkd,GAAmBnG,GAAWogC,gBAAkB,GAChD,OAElB,CACA,aAAA7E,GACItyC,KAAK6sC,WAAa7sC,KAAK+sC,cAAW93C,CACtC,CAEA,SAAA6iD,GACI93C,KAAK+oB,KAAKykB,MAAM7wC,QAASygC,GAASA,EAAKkM,kBAAkBt9B,QACzDhM,KAAK+oB,KAAKykB,MAAM7wC,QAAQu1C,IACxBlyC,KAAK+oB,KAAKknB,YAAYnzC,OAC1B,EAER,CACA,SAAS2pC,GAAarJ,GAClBA,EAAKqJ,cACT,CACA,SAAS4L,GAAmBjV,GACxB,MAAM2P,EAAW3P,EAAKyP,YAAYE,UAAY3P,EAAK2P,SACnD,GAAI3P,EAAKmM,UACLnM,EAAKlvB,QACL6+B,GACA3P,EAAKiT,aAAa,aAAc,CAChC,MAAQ1M,UAAWz1B,EAAQukC,YAAasF,GAAmB3a,EAAKlvB,QAC1D,cAAE+R,GAAkBmd,EAAK3yB,QACzB0pC,EAAWpH,EAAS7oC,SAAWk5B,EAAKlvB,OAAOhK,OAG3B,SAAlB+b,EACAmf,GAAUvpC,IACN,MAAMmiD,EAAe7D,EACfpH,EAAS0F,YAAY58C,GACrBk3C,EAASpJ,UAAU9tC,GACnB8B,EAASknC,GAAWmZ,GAC1BA,EAAatjD,IAAMwZ,EAAOrY,GAAMnB,IAChCsjD,EAAarjD,IAAMqjD,EAAatjD,IAAMiD,IAGrC++C,GAA0Bz2B,EAAe8sB,EAASpJ,UAAWz1B,IAClEkxB,GAAUvpC,IACN,MAAMmiD,EAAe7D,EACfpH,EAAS0F,YAAY58C,GACrBk3C,EAASpJ,UAAU9tC,GACnB8B,EAASknC,GAAW3wB,EAAOrY,IACjCmiD,EAAarjD,IAAMqjD,EAAatjD,IAAMiD,EAIlCylC,EAAK2T,iBAAmB3T,EAAKkM,mBAC7BlM,EAAKsR,mBAAoB,EACzBtR,EAAK2T,eAAel7C,GAAMlB,IACtByoC,EAAK2T,eAAel7C,GAAMnB,IAAMiD,KAIhD,MAAMsgD,EjKz5CY,CACtBzmD,EAP0B,CAC1BkE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,GAIb/D,EAR0B,CAC1BiE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,IiK45CTupC,GAAakZ,EAAa/pC,EAAQ6+B,EAASpJ,WAC3C,MAAMuU,EjK35CY,CACtB1mD,EAP0B,CAC1BkE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,GAIb/D,EAR0B,CAC1BiE,UAAW,EACX5D,MAAO,EACPmW,OAAQ,EACRzS,YAAa,IiK85CL2+C,EACApV,GAAamZ,EAAa9a,EAAKqW,eAAesE,GAAgB,GAAOhL,EAAS0F,aAG9E1T,GAAamZ,EAAahqC,EAAQ6+B,EAASpJ,WAE/C,MAAMqD,GAAoB+E,GAAYkM,GACtC,IAAIrH,GAA2B,EAC/B,IAAKxT,EAAKyP,WAAY,CAClB,MAAMmH,EAAiB5W,EAAKiX,6BAK5B,GAAIL,IAAmBA,EAAenH,WAAY,CAC9C,MAAQE,SAAUoL,EAAgBjqC,OAAQkqC,GAAiBpE,EAC3D,GAAImE,GAAkBC,EAAc,CAChC,MAAMC,EjKx6CF,CACpB7mD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiK06CrBwqC,GAAqBkZ,EAAkBtL,EAASpJ,UAAWwU,EAAexU,WAC1E,MAAM4R,EjK16CF,CACpB/jD,EAFqB,CAAGkD,IAAK,EAAGC,IAAK,GAGrClD,EAHqB,CAAGiD,IAAK,EAAGC,IAAK,IiK46CrBwqC,GAAqBoW,EAAgBrnC,EAAQkqC,EAAazU,WACrDuI,GAAiBmM,EAAkB9C,KACpC3E,GAA2B,GAE3BoD,EAAevpC,QAAQmV,aACvBwd,EAAK2T,eAAiBwE,EACtBnY,EAAKkX,qBAAuB+D,EAC5Bjb,EAAK4W,eAAiBA,EAE9B,CACJ,CACJ,CACA5W,EAAK+S,gBAAgB,YAAa,CAC9BjiC,SACA6+B,WACA/xC,MAAOk9C,EACPD,cACAjR,mBACA4J,4BAER,MACK,GAAIxT,EAAKmM,SAAU,CACpB,MAAM,eAAE7L,GAAmBN,EAAK3yB,QAChCizB,GAAkBA,GACtB,CAMAN,EAAK3yB,QAAQoK,gBAAa5f,CAC9B,CACA,SAASw6C,GAAoBrS,GAIrB5iC,GAAY/G,OACZ85C,GAAQC,QAEPpQ,EAAKrtB,SAQLqtB,EAAK5lB,iBACN4lB,EAAKsR,kBAAoBtR,EAAKrtB,OAAO2+B,mBAOzCtR,EAAKuR,0BAA4BvR,EAAKuR,wBAA0BvtC,QAAQg8B,EAAKsR,mBACzEtR,EAAKrtB,OAAO2+B,mBACZtR,EAAKrtB,OAAO4+B,0BAChBvR,EAAKvqB,mBAAqBuqB,EAAKvqB,iBAAmBuqB,EAAKrtB,OAAO8C,kBAClE,CACA,SAAS+8B,GAAgBxS,GACrBA,EAAKsR,kBACDtR,EAAKuR,wBACDvR,EAAKvqB,kBACD,CAChB,CACA,SAASy/B,GAAclV,GACnBA,EAAKkV,eACT,CACA,SAASJ,GAAkB9U,GACvBA,EAAK8U,mBACT,CACA,SAASC,GAAmB/U,GACxBA,EAAK8P,eAAgB,CACzB,CACA,SAASkF,GAAoBhV,GACzB,MAAM,cAAEv+B,GAAkBu+B,EAAK3yB,QAC3B5L,GAAiBA,EAAc6V,WAAW4jC,uBAC1Cz5C,EAAcmL,OAAO,uBAEzBozB,EAAKkR,gBACT,CACA,SAASoC,GAAgBtT,GACrBA,EAAKsT,kBACLtT,EAAK0W,YAAc1W,EAAK2T,eAAiB3T,EAAKl1B,YAASjT,EACvDmoC,EAAKsR,mBAAoB,CAC7B,CACA,SAASgB,GAAmBtS,GACxBA,EAAKsS,oBACT,CACA,SAASC,GAAevS,GACpBA,EAAKuS,gBACT,CACA,SAASkC,GAAqBzU,GAC1BA,EAAKyU,sBACT,CACA,SAASU,GAAoBrJ,GACzBA,EAAMoE,oBACV,CACA,SAASwI,GAAa1xC,EAAQpJ,EAAO6oB,GACjCzf,EAAO1O,UAAYd,EAAUoG,EAAMtF,UAAW,EAAGmuB,GACjDzf,EAAOtS,MAAQ8C,EAAUoG,EAAMlJ,MAAO,EAAG+xB,GACzCzf,EAAO6D,OAASjN,EAAMiN,OACtB7D,EAAO5O,YAAcwF,EAAMxF,WAC/B,CACA,SAASugD,GAAQ3xC,EAAQvP,EAAMC,EAAI+uB,GAC/Bzf,EAAO1P,IAAME,EAAUC,EAAKH,IAAKI,EAAGJ,IAAKmvB,GACzCzf,EAAOzP,IAAMC,EAAUC,EAAKF,IAAKG,EAAGH,IAAKkvB,EAC7C,CAKA,SAAS8xB,GAAoBvY,GACzB,OAAQA,EAAK4P,sBAAwD/3C,IAArCmoC,EAAK4P,gBAAgBiJ,WACzD,CACA,MAAMhF,GAA0B,CAC5B/qB,SAAU,IACVoF,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBitB,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAU7gC,cAAchlB,SAAS2lD,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEvnD,KAAK+P,MACL3G,GACN,SAASk5C,GAAUz9C,GAEfA,EAAKnB,IAAMikD,GAAW9iD,EAAKnB,KAC3BmB,EAAKlB,IAAMgkD,GAAW9iD,EAAKlB,IAC/B,CAKA,SAAS+hD,GAA0Bz2B,EAAe8sB,EAAU7+B,GACxD,MAA0B,aAAlB+R,GACe,oBAAlBA,ItBzjDOxsB,EsB0jDI04C,GAAYY,GtB1jDT7kC,EsB0jDoBikC,GAAYj+B,GtB1jDxB0qC,EsB0jDiC,KtBzjDrD5nD,KAAKe,IAAI0B,EAAQyU,IAAW0wC,IADvC,IAAgBnlD,EAAOyU,EAAQ0wC,CsB2jD/B,CACA,SAASrF,GAAuBnW,GAC5B,OAAOA,IAASA,EAAKrU,MAAQqU,EAAKkI,QAAQwN,OAC9C,CItkDA,MAAM+F,GAAyB,GAAqB,CAChD3K,qBAAsB,CAACzxB,EAAKzS,IAAWg0B,GAAYvhB,EAAK,SAAUzS,GAClEokC,cAAe,KAAM,CACjB58C,EAAGqiC,SAASilB,gBAAgBC,YAAcllB,SAASmlB,KAAKD,WACxDtnD,EAAGoiC,SAASilB,gBAAgBG,WAAaplB,SAASmlB,KAAKC,YAE3D5K,kBAAmB,KAAM,ICNvBjJ,GAAqB,CACvB1sC,aAASzD,GAEPikD,GAAqB,GAAqB,CAC5C9K,cAAgBx3C,IAAa,CACzBpF,EAAGoF,EAASmiD,WACZtnD,EAAGmF,EAASqiD,YAEhB9K,cAAe,KACX,IAAK/I,GAAmB1sC,QAAS,CAC7B,MAAMygD,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAaznC,MAAMvY,QACnBggD,EAAap5B,WAAW,CAAEJ,cAAc,IACxCylB,GAAmB1sC,QAAUygD,CACjC,CACA,OAAO/T,GAAmB1sC,SAE9B41C,eAAgB,CAAC13C,EAAUnD,KACvBmD,EAASma,MAAMhe,eAAsBkC,IAAVxB,EAAsBA,EAAQ,QAE7D46C,kBAAoBz3C,GAAawK,QAAuD,UAA/CjI,OAAOC,iBAAiBxC,GAAUwiD,YClBzExrC,GAAO,CACTI,IAAK,CACDsF,QpBKR,cAAyBA,GACrB,WAAA3T,GACImI,SAAS+N,WACT7V,KAAKq5C,0BAA4Bj/C,EACrC,CACA,aAAAk/C,CAAcC,GACVv5C,KAAKw5C,QAAU,IAAIha,GAAW+Z,EAAkBv5C,KAAKy5C,oBAAqB,CACtE1kC,mBAAoB/U,KAAKo9B,KAAKtoB,wBAC9B4qB,cAAeL,GAAiBr/B,KAAKo9B,OAE7C,CACA,iBAAAqc,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAa75C,KAAKo9B,KAAK1oB,WACrE,MAAO,CACHysB,eAAgB8F,GAAayS,GAC7BjZ,QAASwG,GAAa0S,GACtBjZ,OAAQkZ,EACR9Y,MAAO,CAAC1C,EAAO6B,YACJjgC,KAAKw5C,QACRK,GACA,GAAMt8C,WAAW,IAAMs8C,EAASzb,EAAO6B,KAIvD,CACA,KAAAvuB,GACI1R,KAAKq5C,0BAA4B1a,GAAgB3+B,KAAKo9B,KAAK1kC,QAAS,cAAgB0lC,GAAUp+B,KAAKs5C,cAAclb,GACrH,CACA,MAAAhhC,GACI4C,KAAKw5C,SAAWx5C,KAAKw5C,QAAQnY,eAAerhC,KAAKy5C,oBACrD,CACA,OAAArnC,GACIpS,KAAKq5C,4BACLr5C,KAAKw5C,SAAWx5C,KAAKw5C,QAAQ3Y,KACjC,IoBrCAjzB,KAAM,CACF0F,QCNR,cAA0BA,GACtB,WAAA3T,CAAYy9B,GACRt1B,MAAMs1B,GACNp9B,KAAK85C,oBAAsB1/C,GAC3B4F,KAAKohC,gBAAkBhnC,GACvB4F,KAAK+5C,SAAW,IAAIvX,GAA0BpF,EAClD,CACA,KAAA1rB,GAGI,MAAM,aAAEsoC,GAAiBh6C,KAAKo9B,KAAK1oB,WAC/BslC,IACAh6C,KAAK85C,oBAAsBE,EAAazc,UAAUv9B,KAAK+5C,WAE3D/5C,KAAKohC,gBAAkBphC,KAAK+5C,SAASrT,gBAAkBtsC,EAC3D,CACA,OAAAgY,GACIpS,KAAK85C,sBACL95C,KAAKohC,iBACT,GDZI3f,eAAgBy3B,GAChB/3B,cAAa,KEVrB,SAAS84B,GAAaC,EAAmBzvC,GACrC,MAAM0vC,ECHV,SAAyBD,EAAmBE,EAAOC,GAC/C,GAAIH,aAA6BI,YAC7B,MAAO,CAACJ,GAEP,GAAiC,iBAAtBA,EAAgC,CAC5C,IAAInxB,EAAO8K,SACPumB,IACArxB,EAAOqxB,EAAM1hD,SAEjB,MAAMyhD,EAAWE,IAAgBH,IAC7BnxB,EAAKwxB,iBAAiBL,GAC1B,OAAOC,EAAW77C,MAAMzJ,KAAKslD,GAAY,EAC7C,CACA,OAAO77C,MAAMzJ,KAAKqlD,EACtB,CDXqBM,CAAgBN,GAC3BO,EAAyB,IAAIC,gBAOnC,MAAO,CAACP,EANa,CACjBlc,SAAS,KACNxzB,EACHkwC,OAAQF,EAAuBE,QAEpB,IAAMF,EAAuBG,QAEhD,CETA,SAASC,GAAazc,GAClB,QAA+B,UAAtBA,EAAMC,aAA2BN,KAC9C,CCDA,SAAS+c,GAAiB1d,EAAMgB,EAAO2c,GACnC,MAAM,MAAE1sC,GAAU+uB,EACdA,EAAK1c,gBAAkBrS,EAAM4uB,YAC7BG,EAAK1c,eAAeic,UAAU,aAA4B,UAAdoe,GAEhD,MACM/+C,EAAWqS,EADE,UAAY0sC,GAE3B/+C,GACA,GAAMuB,WAAW,IAAMvB,EAASoiC,EAAOI,GAAiBJ,IAEhE,C,eCPA,MAAM4c,GAAgB,CAACjrC,EAAQkF,MACtBA,IAGIlF,IAAWkF,GAIT+lC,GAAcjrC,EAAQkF,EAAMgmC,gBCfrCC,GAAoB,IAAIrqD,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAMsqD,GAAa,IAAIv/C,QCKvB,SAASw/C,GAAap/C,GAClB,OAAQoiC,IACc,UAAdA,EAAMtqC,KAEVkI,EAASoiC,GAEjB,CACA,SAASid,GAAiBnzC,EAAQ/P,GAC9B+P,EAAOozC,cAAc,IAAIC,aAAa,UAAYpjD,EAAM,CAAEomC,WAAW,EAAMid,SAAS,IACxF,CCDA,SAASC,GAAkBrd,GACvB,OAAOD,GAAiBC,KAAWL,IACvC,CAoBA,SAAS2d,GAAMC,EAAkBC,EAAcnxC,EAAU,CAAC,GACtD,MAAOoxC,EAASC,EAAcC,GAAgB9B,GAAa0B,EAAkBlxC,GACvEuxC,EAAcnc,IAChB,MAAM33B,EAAS23B,EAAWoc,cAC1B,IAAKR,GAAkB5b,GACnB,OACJsb,GAAW7+C,IAAI4L,GACf,MAAMg0C,EAAaN,EAAa1zC,EAAQ23B,GAClCsc,EAAe,CAACC,EAAUC,KAC5BljD,OAAO+kC,oBAAoB,YAAaoe,GACxCnjD,OAAO+kC,oBAAoB,gBAAiBqe,GACxCpB,GAAWxhD,IAAIuO,IACfizC,GAAW3+C,OAAO0L,GAEjBuzC,GAAkBW,IAGG,mBAAfF,GACPA,EAAWE,EAAU,CAAEC,aAGzBC,EAAeE,IACjBL,EAAaK,EAASt0C,IAAW/O,QAC7B+O,IAAW2rB,UACXppB,EAAQgyC,iBACRzB,GAAc9yC,EAAQs0C,EAAQt0C,UAEhCq0C,EAAmBG,IACrBP,EAAaO,GAAa,IAE9BvjD,OAAO+Y,iBAAiB,YAAaoqC,EAAaR,GAClD3iD,OAAO+Y,iBAAiB,gBAAiBqqC,EAAiBT,IAa9D,OAXAD,EAAQl/C,QAASuL,IH7DrB,IAAqCvP,GG8DH8R,EAAQgyC,gBAAkBtjD,OAAS+O,GAC3CgK,iBAAiB,cAAe8pC,EAAYF,IAC1D,QAAc5zC,KACdA,EAAOgK,iBAAiB,QAAUksB,GDzDlB,EAACue,EAAYb,KACrC,MAAMnjD,EAAUgkD,EAAWV,cAC3B,IAAKtjD,EACD,OACJ,MAAMikD,EAAgBxB,GAAa,KAC/B,GAAID,GAAWxhD,IAAIhB,GACf,OACJ0iD,GAAiB1iD,EAAS,QAC1B,MAAMkkD,EAAczB,GAAa,KAC7BC,GAAiB1iD,EAAS,QAG9BA,EAAQuZ,iBAAiB,QAAS2qC,EAAaf,GAC/CnjD,EAAQuZ,iBAAiB,OAFN,IAAMmpC,GAAiB1iD,EAAS,UAENmjD,KAEjDnjD,EAAQuZ,iBAAiB,UAAW0qC,EAAed,GAInDnjD,EAAQuZ,iBAAiB,OAAQ,IAAMvZ,EAAQulC,oBAAoB,UAAW0e,GAAgBd,ICsC1CgB,CAAoB1e,EAAO0d,IHjE9CnjD,EGkEQuP,EHjEjCgzC,GAAkBvhD,IAAIhB,EAAQ+gB,WACZ,IAAtB/gB,EAAQ+iB,UGiECxT,EAAO60C,aAAa,cACrB70C,EAAOwT,SAAW,MAIvBqgC,CACX,CC5EA,SAASiB,GAAiB5f,EAAMgB,EAAO2c,GACnC,MAAM,MAAE1sC,GAAU+uB,EAClB,GAAIA,EAAK1kC,mBAAmBukD,mBAAqB7f,EAAK1kC,QAAQwkD,SAC1D,OAEA9f,EAAK1c,gBAAkBrS,EAAMwN,UAC7BuhB,EAAK1c,eAAeic,UAAU,WAA0B,UAAdoe,GAE9C,MACM/+C,EAAWqS,EADE,SAAyB,QAAd0sC,EAAsB,GAAKA,IAErD/+C,GACA,GAAMuB,WAAW,IAAMvB,EAASoiC,EAAOI,GAAiBJ,IAEhE,CCZA,MAAM+e,GAAoB,IAAIxuC,QAMxByuC,GAAY,IAAIzuC,QAChB0uC,GAAwBC,IAC1B,MAAMthD,EAAWmhD,GAAkBp+C,IAAIu+C,EAAMp1C,QAC7ClM,GAAYA,EAASshD,IAEnBC,GAA4BC,IAC9BA,EAAQ7gD,QAAQ0gD,KAqBpB,SAASI,GAAoB9kD,EAAS8R,EAASzO,GAC3C,MAAM0hD,EApBV,UAAkC,KAAE30B,KAASte,IACzC,MAAMkzC,EAAa50B,GAAQ8K,SAItBupB,GAAUzjD,IAAIgkD,IACfP,GAAUp+C,IAAI2+C,EAAY,CAAC,GAE/B,MAAMC,EAAgBR,GAAUr+C,IAAI4+C,GAC9B7pD,EAAM+pD,KAAKC,UAAUrzC,GAQ3B,OAHKmzC,EAAc9pD,KACf8pD,EAAc9pD,GAAO,IAAIiqD,qBAAqBR,GAA0B,CAAEx0B,UAASte,KAEhFmzC,EAAc9pD,EACzB,CAEsCkqD,CAAyBvzC,GAG3D,OAFA0yC,GAAkBn+C,IAAIrG,EAASqD,GAC/B0hD,EAA0BtqB,QAAQz6B,GAC3B,KACHwkD,GAAkB3gD,OAAO7D,GACzB+kD,EAA0BO,UAAUtlD,GAE5C,CC3CA,MAAMulD,GAAiB,CACnB5vC,KAAM,EACNgrB,IAAK,GCAT,MAAM6kB,GAAoB,CACtBlwC,OAAQ,CACJqF,QDAR,cAA4BA,GACxB,WAAA3T,GACImI,SAAS+N,WACT7V,KAAKo+C,gBAAiB,EACtBp+C,KAAKq+C,UAAW,CACpB,CACA,aAAAC,GACIt+C,KAAKoS,UACL,MAAM,SAAEmsC,EAAW,CAAC,GAAMv+C,KAAKo9B,KAAK1oB,YAC9B,KAAEqU,EAAMhjB,OAAQy4C,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtD9zC,EAAU,CACZse,KAAMA,EAAOA,EAAKrwB,aAAUzD,EAC5BupD,aACAG,UAA6B,iBAAXF,EAAsBA,EAASP,GAAeO,IA+BpE,OAAOhB,GAAoBz9C,KAAKo9B,KAAK1kC,QAAS+R,EA7BhB6yC,IAC1B,MAAM,eAAEsB,GAAmBtB,EAI3B,GAAIt9C,KAAKq+C,WAAaO,EAClB,OAMJ,GALA5+C,KAAKq+C,SAAWO,EAKZF,IAASE,GAAkB5+C,KAAKo+C,eAChC,OAEKQ,IACL5+C,KAAKo+C,gBAAiB,GAEtBp+C,KAAKo9B,KAAK1c,gBACV1gB,KAAKo9B,KAAK1c,eAAeic,UAAU,cAAeiiB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoB9+C,KAAKo9B,KAAK1oB,WACjD1Y,EAAW4iD,EAAiBC,EAAkBC,EACpD9iD,GAAYA,EAASshD,IAG7B,CACA,KAAA5rC,GACI1R,KAAKs+C,eACT,CACA,MAAAlhD,GACI,GAAoC,oBAAzB2gD,qBACP,OACJ,MAAM,MAAE1vC,EAAK,UAAEwF,GAAc7T,KAAKo9B,KACR,CAAC,SAAU,SAAU,QAAQ9uB,KAO/D,UAAkC,SAAEiwC,EAAW,CAAC,IAAOA,SAAUQ,EAAe,CAAC,GAAM,CAAC,GACpF,OAAQnsD,GAAS2rD,EAAS3rD,KAAUmsD,EAAansD,EACrD,CAToEosD,CAAyB3wC,EAAOwF,KAExF7T,KAAKs+C,eAEb,CACA,OAAAlsC,GAAY,ICxDZrE,IAAK,CACDuF,QHQR,cAA2BA,GACvB,KAAA5B,GACI,MAAM,QAAEhZ,GAAYsH,KAAKo9B,KACpB1kC,IAELsH,KAAKoS,QAAUspC,GAAMhjD,EAAS,CAACumD,EAAUpf,KACrCmd,GAAiBh9C,KAAKo9B,KAAMyC,EAAY,SACjC,CAACuc,GAAYC,aAAcW,GAAiBh9C,KAAKo9B,KAAMgf,EAAUC,EAAU,MAAQ,WAC3F,CAAEI,gBAAiBz8C,KAAKo9B,KAAK/uB,MAAM6wC,kBAC1C,CACA,OAAA9sC,GAAY,IGhBZvE,MAAO,CACHyF,QCTR,cAA2BA,GACvB,WAAA3T,GACImI,SAAS+N,WACT7V,KAAK07B,UAAW,CACpB,CACA,OAAAyjB,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBp/C,KAAKo9B,KAAK1kC,QAAQuZ,QAAQ,iBAC/C,CACA,MAAO2V,GACHw3B,GAAiB,CACrB,CACKA,GAAmBp/C,KAAKo9B,KAAK1c,iBAElC1gB,KAAKo9B,KAAK1c,eAAeic,UAAU,cAAc,GACjD38B,KAAK07B,UAAW,EACpB,CACA,MAAA2jB,GACSr/C,KAAK07B,UAAa17B,KAAKo9B,KAAK1c,iBAEjC1gB,KAAKo9B,KAAK1c,eAAeic,UAAU,cAAc,GACjD38B,KAAK07B,UAAW,EACpB,CACA,KAAAhqB,GACI1R,KAAKoS,QAAUgR,GAAK4a,GAAYh+B,KAAKo9B,KAAK1kC,QAAS,QAAS,IAAMsH,KAAKm/C,WAAYnhB,GAAYh+B,KAAKo9B,KAAK1kC,QAAS,OAAQ,IAAMsH,KAAKq/C,UACzI,CACA,OAAAjtC,GAAY,IDtBZtE,MAAO,CACHwF,QTDR,cAA2BA,GACvB,KAAA5B,GACI,MAAM,QAAEhZ,GAAYsH,KAAKo9B,KACpB1kC,IAELsH,KAAKoS,QDPb,SAAe8nC,EAAmBoF,EAAc70C,EAAU,CAAC,GACvD,MAAO0vC,EAAU2B,EAAcv/C,GAAU09C,GAAaC,EAAmBzvC,GACnE80C,EAAkBC,IACpB,IAAK3E,GAAa2E,GACd,OACJ,MAAM,OAAEt3C,GAAWs3C,EACbC,EAAaH,EAAap3C,EAAQs3C,GACxC,GAA0B,mBAAfC,IAA8Bv3C,EACrC,OACJ,MAAMw3C,EAAkBC,IACf9E,GAAa8E,KAElBF,EAAWE,GACXz3C,EAAOg2B,oBAAoB,eAAgBwhB,KAE/Cx3C,EAAOgK,iBAAiB,eAAgBwtC,EAAgB5D,IAK5D,OAHA3B,EAASx9C,QAAShE,IACdA,EAAQuZ,iBAAiB,eAAgBqtC,EAAgBzD,KAEtDv/C,CACX,CCduBuR,CAAMpV,EAAS,CAACumD,EAAUpf,KACrCib,GAAiB96C,KAAKo9B,KAAMyC,EAAY,SAChCuc,GAAatB,GAAiB96C,KAAKo9B,KAAMgf,EAAU,SAEnE,CACA,OAAAhqC,GAAY,KWrBVwtC,GAAuBv9B,GCCP,IACf4W,MACAklB,MACAvwC,MCLQ,CACXM,OAAQ,CACJuT,eAAgBy3B,GAChB/3B,cAAa,MFFyCrH,G,qEGD9D,MAAM+lC,E,QAA4B,EAAY,EAAAC,gBAAkB,EAAAl/B,S,uDCGhE,MAAMzB,GAAsB,E,QAAAjF,eAAc,CACtCnF,mBAAqB8O,GAAMA,EAC3BnH,UAAU,EACV0C,cAAe,S,uDCHnB,MAAMrB,GACU,E,QAAA7D,eAAc,K,qECD9B,SAAS6lC,EAAcpnD,GACnB,OAAO,OAASA,IAAY,iBAAkBA,CAClD,C,uDCRA,MAAMqnD,EAA8B,oBAAX7mD,M,qECSzB,SAAS8mD,EAAYz1C,GACjB,MAAMiS,GAAM,IAAA6C,QAAO,MAInB,OAHoB,OAAhB7C,EAAI/jB,UACJ+jB,EAAI/jB,QAAU8R,KAEXiS,EAAI/jB,OACf,C,gFCWA,SAASwnD,EAAY3iB,GAAY,GAC7B,MAAMjjB,GAAU,IAAAG,YAAW,KAC3B,GAAgB,OAAZH,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEmjB,EAAS,eAAEC,EAAc,SAAEG,GAAavjB,EAG1C8H,GAAK,IAAA+9B,UACX,IAAAv/B,WAAU,KACN,GAAI2c,EACA,OAAOM,EAASzb,IAErB,CAACmb,IACJ,MAAMqL,GAAe,IAAAjqB,aAAY,IAAM4e,GAAaG,GAAkBA,EAAetb,GAAK,CAACA,EAAIsb,EAAgBH,IAC/G,OAAQE,GAAaC,EAAiB,EAAC,EAAOkL,GAAgB,EAAC,EACnE,C,uBCzCA,SAASwX,EAAS3sD,GACd,MAAwB,iBAAVA,GAAgC,OAAVA,CACxC,C,sFCCA,MAAMyuB,GAAqB,E,QAAAhI,eAAc,CAAC,E","sources":["webpack://jodie/./node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/mix/number.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/clamp.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/test.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/dimensions.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/auto.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/is-numerical-string.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/noop.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/global-config.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/frameloop/order.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/stats/buffer.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/frameloop/batcher.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/frameloop/render-step.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/frameloop/frame.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/is-zero-value-string.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/color/utils.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/color/hex.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/color/index.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/complex/index.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/int.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/maps/number.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/array.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/subscription-manager.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/velocity-per-second.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/index.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/utils/find.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/frameloop/microtask.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/pipe.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/stats/animation-count.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/mix/color.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/mix/complex.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/mix/index.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/ease.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/back.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/anticipate.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/circ.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/utils/map.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/progress.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/interpolate.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/memo.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/render/dom/style-set.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://jodie/./node_modules/motion-dom/dist/es/utils/is-html-element.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://jodie/./node_modules/motion-utils/dist/es/is-object.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs"],"sourcesContent":["/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const numChildren = visualElement.variantChildren.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    const generateStaggerDuration = delayIsFunction\n        ? (i) => delayChildren(i, numChildren)\n        : // Support deprecated staggerChildren\n            staggerDirection === 1\n                ? (i = 0) => i * staggerChildren\n                : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (delayIsFunction ? 0 : delayChildren) +\n                generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n"],"names":["transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","values","split","map","convertTransformToNumber","value","parseFloat","trim","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","top","left","right","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","undefined","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","default","createUnitType","unit","endsWith","length","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","current","element","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","has","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","_bbox","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","forEach","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","i","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","set","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","isNone","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","transformPerspective","opacity","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","custom","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","unmount","remove","feature","isMounted","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","transformPagePoint","getClosestVariantNode","child","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","variant","args","scheduleRenderMicrotask","DOMVisualElement","arguments","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","HTMLVisualElement","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LazyContext","createContext","strict","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useRender","ref","isStatic","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","PresenceContext","make","createRenderState","makeState","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","useEffect","MotionHandoffMarkAsComplete","createMotionComponent","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","LayoutGroupContext","L","id","createMotionProxy","Proxy","componentCache","factory","_target","resolveVariant","getValueTransition","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","combineFunctions","pipe","transformers","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","p","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGenerator","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","subject","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","all","setTarget","animateVariant","getAnimation","getChildAnimations","size","forwardDelay","numChildren","maxStaggerDuration","delayIsFunction","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","isSVGElement","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","motion","useIsomorphicLayoutEffect","useLayoutEffect","isHTMLElement","isBrowser","useConstant","usePresence","useId","isObject"],"sourceRoot":""}