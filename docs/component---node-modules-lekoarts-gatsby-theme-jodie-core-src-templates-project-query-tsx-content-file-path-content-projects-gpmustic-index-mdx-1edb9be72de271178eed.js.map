{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-jodie-core-src-templates-project-query-tsx-content-file-path-content-projects-gpmustic-index-mdx-1edb9be72de271178eed.js","mappings":"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","sources":["webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/seo.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/project.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/@lekoarts/gatsby-theme-jodie-core/components/project.tsx","webpack://jodie/./content/projects/gpmustic/index.mdx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie-core/src/templates/project-query.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype Props = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n}\n\nconst Seo = ({ title = ``, description = ``, pathname = ``, image = ``, children = null }: Props) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-jodie\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx, Heading } from \"theme-ui\"\nimport * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { transparentize } from \"polished\"\nimport { IGatsbyImageData, GatsbyImage } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type JodieProjectProps = {\n  project: {\n    excerpt: string\n    color: string\n    date: string\n    slug: string\n    title: string\n    shortTitle: string\n    category: string\n    cover: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n  images: {\n    nodes: {\n      name: string\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }[]\n  }\n}\n\nconst Project: React.FC<React.PropsWithChildren<PageProps<JodieProjectProps>>> = ({\n  data: { project, images },\n  children,\n}) => (\n  <Layout color={project.color || undefined}>\n    <div sx={{ variant: `content.project` }}>\n      <div sx={{ fontSize: 2, textTransform: `uppercase`, letterSpacing: `wider`, mb: 2 }}>{project.category}</div>\n      <Heading as=\"h1\" variant=\"styles.h1\" sx={{ mt: 0 }}>\n        {project.title}\n      </Heading>\n      <div sx={{ maxWidth: `70ch`, my: 4 }}>{children}</div>\n    </div>\n    <div sx={{ backgroundColor: transparentize(0.9, project.color) }}>\n      <div sx={{ variant: `content.imageList` }}>\n        {images.nodes.map((image) => (\n          <GatsbyImage key={image.name} alt={image.name} image={image.childImageSharp.gatsbyImageData} />\n        ))}\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default Project\n\nexport const Head: HeadFC<JodieProjectProps> = ({ data: { project }, location }) => (\n  <Seo\n    title={project.title}\n    description={project.excerpt}\n    pathname={location.pathname}\n    image={project.cover.childImageSharp.resize.src}\n  />\n)\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport Project, { Head, JodieProjectProps } from \"../../../components/project\"\n\nexport default function JodieCoreProject({ children, ...props }: PageProps<JodieProjectProps>) {\n  return <Project {...props}>{children}</Project>\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This was my first time seriously messing around with PyTorch and AI. I had a high-level view of the architcture from watching\\r\\n3Blue1Brown videos on transformers and from taking a mini deep learning class, but had never actually coded a model for any purpose.\"), \"\\n\", React.createElement(_components.p, null, \"I decided I wanted to try making a generative music model because I have spent a lot of time playing the piano for fun and competetively,\\r\\nand I had heard that there now existed generative music models. I created a simple pygame piano GUI to view and hear the piano as you play the seed\\r\\nnotes, created a model using the publicly available MAESTRO dataset, and trained the model on my laptop for a couple days (not really utilizing the full\\r\\npower of the dataset due to computer lacking a GPU and the dataset amounting to 20 million samples).\"), \"\\n\", React.createElement(_components.h2, null, \"Listen to my project 🎶\"), \"\\n\", React.createElement(_components.p, null, \"Chromatic scale as input (first 8 seconds):\"), \"\\n\", React.createElement(\"audio\", {\n    controls: true\n  }, React.createElement(\"source\", {\n    src: \"/gpmustic/chromatic.mp3\",\n    type: \"audio/mpeg\"\n  }), React.createElement(_components.p, null, \"Your browser does not support the audio element.\")), \"\\n\", React.createElement(_components.p, null, \"Happy birthday as input (first 6 seconds):\"), \"\\n\", React.createElement(\"audio\", {\n    controls: true\n  }, React.createElement(\"source\", {\n    src: \"/gpmustic/generated_output2.mp3\",\n    type: \"audio/mpeg\"\n  }), React.createElement(_components.p, null, \"Your browser does not support the audio element.\")), \"\\n\", React.createElement(_components.h2, null, \"Takeaways\"), \"\\n\", React.createElement(_components.p, null, \"So I learned a few things from this project:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Tools like PyTorch are very powerful and make it easy to abstract away the actual model and its training\"), \"\\n\", React.createElement(_components.li, null, \"Actually obtaining data and processing that data (tokenization) are large parts of machine learning\"), \"\\n\", React.createElement(_components.li, null, \"Machine learning takes A LOT of compute and time (my laptop with no GPU ran for 2 days and the model was not able to train on the whole dataset because of the amount of computation needed for the 20 million samples)\"), \"\\n\", React.createElement(_components.li, null, \"Machine learning models need to be modified depending on system specs (VRAM, GPU, CPU, RAM)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Overall, this project was a great introduction to PyTorch and machine learning, and I hope that I will learn more in my machine learning class this semester. I am most interested\\r\\nin the actual relevance of computer hardware and architcture in machine learning, and this project helped expose how important hardware is in machine learning.\"), \"\\n\", React.createElement(_components.p, null, \"See code here: \", React.createElement(_components.a, {\n    href: \"https://github.com/Landododo/gpmustic\"\n  }, \"https://github.com/Landododo/gpmustic\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/1108l/OneDrive/Desktop/website/landon-website/content/projects/gpmustic/index.mdx\";\nimport ProjectComponent, {Head} from \"../components/project\";\nProjectComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"1948567467\";\n"],"names":["_ref","title","description","pathname","image","children","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","React","lang","name","content","property","rel","type","sizes","href","withPrefix","data","project","images","jsx","Layout","color","undefined","sx","variant","fontSize","textTransform","letterSpacing","mb","category","Heading","as","mt","maxWidth","my","backgroundColor","transparentize","nodes","map","GatsbyImage","key","alt","childImageSharp","gatsbyImageData","Head","_ref2","location","Seo","excerpt","cover","resize","src","JodieCoreProject","props","Project","_createMdxContent","_components","Object","assign","p","h2","ul","li","a","_provideComponents","components","controls","wrapper","MDXLayout","GatsbyMDXWrapper","ProjectComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}