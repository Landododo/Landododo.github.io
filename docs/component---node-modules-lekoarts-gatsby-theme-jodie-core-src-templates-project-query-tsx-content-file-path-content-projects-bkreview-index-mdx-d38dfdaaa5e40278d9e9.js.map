{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-jodie-core-src-templates-project-query-tsx-content-file-path-content-projects-bkreview-index-mdx-d38dfdaaa5e40278d9e9.js","mappings":"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","sources":["webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/seo.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/project.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/@lekoarts/gatsby-theme-jodie-core/components/project.tsx","webpack://jodie/./content/projects/bkreview/index.mdx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie-core/src/templates/project-query.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype Props = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n}\n\nconst Seo = ({ title = ``, description = ``, pathname = ``, image = ``, children = null }: Props) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-jodie\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx, Heading } from \"theme-ui\"\nimport * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { transparentize } from \"polished\"\nimport { IGatsbyImageData, GatsbyImage } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\n\nexport type JodieProjectProps = {\n  project: {\n    excerpt: string\n    color: string\n    date: string\n    slug: string\n    title: string\n    shortTitle: string\n    category: string\n    cover: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n  images: {\n    nodes: {\n      name: string\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n    }[]\n  }\n}\n\nconst Project: React.FC<React.PropsWithChildren<PageProps<JodieProjectProps>>> = ({\n  data: { project, images },\n  children,\n}) => (\n  <Layout color={project.color || undefined}>\n    <div sx={{ variant: `content.project` }}>\n      <div sx={{ fontSize: 2, textTransform: `uppercase`, letterSpacing: `wider`, mb: 2 }}>{project.category}</div>\n      <Heading as=\"h1\" variant=\"styles.h1\" sx={{ mt: 0 }}>\n        {project.title}\n      </Heading>\n      <div sx={{ maxWidth: `70ch`, my: 4 }}>{children}</div>\n    </div>\n    <div sx={{ backgroundColor: transparentize(0.9, project.color) }}>\n      <div sx={{ variant: `content.imageList` }}>\n        {images.nodes.map((image) => (\n          <GatsbyImage key={image.name} alt={image.name} image={image.childImageSharp.gatsbyImageData} />\n        ))}\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default Project\n\nexport const Head: HeadFC<JodieProjectProps> = ({ data: { project }, location }) => (\n  <Seo\n    title={project.title}\n    description={project.excerpt}\n    pathname={location.pathname}\n    image={project.cover.childImageSharp.resize.src}\n  />\n)\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport Project, { Head, JodieProjectProps } from \"../../../components/project\"\n\nexport default function JodieCoreProject({ children, ...props }: PageProps<JodieProjectProps>) {\n  return <Project {...props}>{children}</Project>\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, \"My First Coding Project\"), \"\\n\", React.createElement(_components.p, null, \"This website was my first coding project. I unfortunately didn't use GitHub at the time, so the code is lost â€” though the demo video remains!\"), \"\\n\", React.createElement(_components.p, null, \"The site was built using Django and a dynamic SQL-based backend, allowing users to:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Add new books to the website\"), \"\\n\", React.createElement(_components.li, null, \"Register with a username and password\"), \"\\n\", React.createElement(_components.li, null, \"Submit book reviews\"), \"\\n\", React.createElement(_components.li, null, \"See top-rated books featured on the homepage\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"I was especially proud of the dynamic features â€” the fact that other users could interact with your uploaded content and boost it through ratings felt exciting and collaborative.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, null, \"What I Learned\"), \"\\n\", React.createElement(_components.p, null, \"This project helped me:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Understand Django's structure\"), \"\\n\", React.createElement(_components.li, null, \"Write and optimize SQL queries\"), \"\\n\", React.createElement(_components.li, null, \"Get an understanding for UI choices and html/CSS/bootstrap\"), \"\\n\", React.createElement(_components.li, null, \"Handle user authentication\"), \"\\n\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.h3, null, \"ðŸŽ¥ Demo Video\"), \"\\n\", React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"400\",\n    src: \"https://www.youtube.com/embed/etg_6jp9NmE\",\n    title: \"Django Book Review Demo\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"C:/Users/1108l/OneDrive/Desktop/website/landon-website/content/projects/bkreview/index.mdx\";\nimport ProjectComponent, {Head} from \"../components/project\";\nProjectComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ProjectComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"1948567467\";\n"],"names":["_ref","title","description","pathname","image","children","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","React","lang","name","content","property","rel","type","sizes","href","withPrefix","data","project","images","jsx","Layout","color","undefined","sx","variant","fontSize","textTransform","letterSpacing","mb","category","Heading","as","mt","maxWidth","my","backgroundColor","transparentize","nodes","map","GatsbyImage","key","alt","childImageSharp","gatsbyImageData","Head","_ref2","location","Seo","excerpt","cover","resize","src","JodieCoreProject","props","Project","_createMdxContent","_components","Object","assign","h3","p","ul","li","_provideComponents","components","width","height","frameBorder","allow","allowFullScreen","wrapper","MDXLayout","GatsbyMDXWrapper","ProjectComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}