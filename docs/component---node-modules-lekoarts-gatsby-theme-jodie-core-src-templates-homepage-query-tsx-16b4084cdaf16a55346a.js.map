{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-jodie-core-src-templates-homepage-query-tsx-16b4084cdaf16a55346a.js","mappings":"uVAWA,MAAMA,UAAwB,YAC1B,uBAAAC,CAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASC,QACpC,GAAIJ,GAAWD,EAAUM,YAAcJ,KAAKC,MAAMG,UAAW,CACzD,MAAMC,EAASN,EAAQO,aACjBC,GAAc,OAAcF,IAC5BA,EAAOG,aACP,EACAC,EAAOT,KAAKC,MAAMS,QAAQP,QAChCM,EAAKE,OAASZ,EAAQa,cAAgB,EACtCH,EAAKI,MAAQd,EAAQS,aAAe,EACpCC,EAAKK,IAAMf,EAAQgB,UACnBN,EAAKO,KAAOjB,EAAQkB,WACpBR,EAAKS,MAAQX,EAAcE,EAAKI,MAAQJ,EAAKO,IACjD,CACA,OAAO,IACX,CAIA,kBAAAG,GAAuB,CACvB,MAAAC,GACI,OAAOpB,KAAKC,MAAMoB,QACtB,EAEJ,SAASC,GAAS,SAAED,EAAQ,UAAEjB,EAAS,QAAEmB,EAAO,KAAEC,IAC9C,MAAMC,GAAK,IAAAC,SACLC,GAAM,IAAAC,QAAO,MACbnB,GAAO,IAAAmB,QAAO,CAChBf,MAAO,EACPF,OAAQ,EACRG,IAAK,EACLE,KAAM,EACNE,MAAO,KAEL,MAAEW,IAAU,IAAAC,YAAWC,EAAA,GAuC7B,OA7BA,IAAAC,oBAAmB,KACf,MAAM,MAAEnB,EAAK,OAAEF,EAAM,IAAEG,EAAG,KAAEE,EAAI,MAAEE,GAAUT,EAAKN,QACjD,GAAIC,IAAcuB,EAAIxB,UAAYU,IAAUF,EACxC,OACJ,MAAMsB,EAAgB,SAAZV,EAAqB,SAASP,IAAS,UAAUE,IAC3DS,EAAIxB,QAAQ+B,QAAQC,YAAcV,EAClC,MAAMW,EAAQC,SAASC,cAAc,SACjCT,IACAO,EAAMP,MAAQA,GAClB,MAAMxB,EAASmB,GAAQa,SAASE,KAahC,OAZAlC,EAAOmC,YAAYJ,GACfA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCACFjB,yEAEZZ,wCACCF,gCACRsB,qCACKnB,0CAIJ,KACHT,EAAOsC,YAAYP,GACf/B,EAAOuC,SAASR,IAChB/B,EAAOsC,YAAYP,KAG5B,CAAChC,KACI,IAAAyC,KAAIjD,EAAiB,CAAEQ,UAAWA,EAAWF,SAAUyB,EAAKjB,QAASD,EAAMY,SAAU,eAAmBA,EAAU,CAAEM,SAChI,CC9EA,MAAMmB,EAAgB,EAAGzB,WAAU0B,UAAS3C,YAAW4C,iBAAgBC,SAAQC,wBAAuBC,OAAM5B,UAASC,WACjH,MAAM4B,GAAmB,OAAYC,GAC/B5B,GAAK,IAAAC,SACX,IAAI4B,GAAkB,EAClBC,GAAU,IAAAC,SAAQ,KAClBF,GAAkB,EACX,CACH7B,KACAsB,UACA3C,YACA6C,SACAD,eAAiBS,IACbL,EAAiBM,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcP,EAAiBQ,SACtC,IAAKD,EACD,OAERX,GAAkBA,KAEtBa,SAAWJ,IACPL,EAAiBM,IAAID,GAAS,GACvB,IAAML,EAAiBU,OAAOL,MAG9C,CAACrD,EAAWgD,EAAkBJ,IAyBjC,OAnBIE,GAAyBI,IACzBC,EAAU,IAAKA,KAEnB,IAAAC,SAAQ,KACJJ,EAAiBW,QAAQ,CAACC,EAAGC,IAAQb,EAAiBM,IAAIO,GAAK,KAChE,CAAC7D,IAKJ,YAAgB,MACXA,IACIgD,EAAiB3C,MAClBuC,GACAA,KACL,CAAC5C,IACS,cAAT+C,IACA9B,GAAY,IAAAwB,KAAIvB,EAAU,CAAElB,UAAWA,EAAWmB,QAASA,EAASC,KAAMA,EAAMH,SAAUA,MAEtF,IAAAwB,KAAIqB,EAAA,EAAgBC,SAAU,CAAEC,MAAOb,EAASlC,SAAUA,KAEtE,SAASgC,IACL,OAAO,IAAIgB,GACf,C,cC3DA,MAAMC,EAAeC,GAAUA,EAAMN,KAAO,GAC5C,SAASO,EAAanD,GAClB,MAAMoD,EAAW,GAMjB,OAJA,EAAAC,SAASX,QAAQ1C,EAAWkD,KACpB,IAAAI,gBAAeJ,IACfE,EAASG,KAAKL,KAEfE,CACX,CCgCA,MAAMI,EAAkB,EAAGxD,WAAU4B,SAAQF,WAAU,EAAMC,iBAAgBE,yBAAwB,EAAMC,OAAO,OAAQ2B,aAAY,EAAOvD,UAAU,OAAQC,WAC3J,MAAOuD,EAAiBC,IAAgB,QAAYF,GAK9CG,GAAkB,IAAAzB,SAAQ,IAAMgB,EAAanD,GAAW,CAACA,IAKzD6D,EAAcJ,IAAcC,EAAkB,GAAKE,EAAgBE,IAAIb,GAIvEc,GAAkB,IAAAxD,SAAO,GAMzByD,GAAyB,IAAAzD,QAAOqD,GAIhCK,GAAe,OAAY,IAAM,IAAIjB,MAKpCkB,EAAgBC,IAAqB,IAAAC,UAASR,IAC9CS,EAAkBC,IAAuB,IAAAF,UAASR,IACzD,OAA0B,KACtBG,EAAgBjF,SAAU,EAC1BkF,EAAuBlF,QAAU8E,EAIjC,IAAK,IAAIW,EAAI,EAAGA,EAAIF,EAAiBG,OAAQD,IAAK,CAC9C,MAAM3B,EAAMK,EAAYoB,EAAiBE,IACpCV,EAAYY,SAAS7B,GAMtBqB,EAAaxB,OAAOG,IALU,IAA1BqB,EAAaS,IAAI9B,IACjBqB,EAAa5B,IAAIO,GAAK,EAMlC,GACD,CAACyB,EAAkBR,EAAYW,OAAQX,EAAYc,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAIhB,IAAoBM,EAAgB,CACpC,IAAIW,EAAe,IAAIjB,GAKvB,IAAK,IAAIW,EAAI,EAAGA,EAAIF,EAAiBG,OAAQD,IAAK,CAC9C,MAAMrB,EAAQmB,EAAiBE,GACzB3B,EAAMK,EAAYC,GACnBW,EAAYY,SAAS7B,KACtBiC,EAAaC,OAAOP,EAAG,EAAGrB,GAC1B0B,EAAgBrB,KAAKL,GAE7B,CAcA,MATa,SAATpB,GAAmB8C,EAAgBJ,SACnCK,EAAeD,GAEnBN,EAAoBnB,EAAa0B,IACjCV,EAAkBP,GAKX,IACX,CAWA,MAAM,YAAEmB,IAAgB,IAAAtE,YAAWuE,EAAAC,GACnC,OAAQ,IAAAzD,KAAI,EAAA0D,SAAU,CAAElF,SAAUqE,EAAiBP,IAAKZ,IAChD,MAAMN,EAAMK,EAAYC,GAClBnE,IAAY0E,IAAcC,KAE1BE,IAAoBS,GAClBR,EAAYY,SAAS7B,IAoB7B,OAAQ,IAAApB,KAAIC,EAAe,CAAE1C,UAAWA,EAAW2C,UAAUqC,EAAgBjF,UAAW4C,SAC9EyD,EACOvD,OAAQA,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAM3B,KAAMA,EAAMwB,eAAgB5C,OAAYoG,EArBpH,KACX,IAAIlB,EAAamB,IAAIxC,GAIjB,OAHAqB,EAAa5B,IAAIO,GAAK,GAK1B,IAAIyC,GAAsB,EAC1BpB,EAAavB,QAAS4C,IACbA,IACDD,GAAsB,KAE1BA,IACAN,MACAT,EAAoBN,EAAuBlF,SAC3C2E,GAAaE,MACbhC,GAAkBA,MAK6HzB,QAASA,EAASF,SAAUkD,GAASN,QCsQxM,MA7ZiB2C,KAEf,MAAOC,EAAWC,GAAgBC,EAAAA,SAAe,MAE3CC,GAAOC,EAAAA,EAAAA,gBAAe,cAyEtBC,EAAc,CACpB,CACEC,QAAS,aACTC,KAAM,mBACNC,KAAM,wBACNC,YAAa,oEACbC,QAAS,CACP,2EACA,2FACA,kGACA,0FACA,oFAEFC,OAAQ,EACNC,EAAAA,EAAAA,GAAST,EAAKU,aAAaC,kBAC3BF,EAAAA,EAAAA,GAAST,EAAKY,aAAaD,mBAG/B,CACER,QAAS,6BACTC,KAAM,eACNC,KAAM,2BACNC,YAAa,gEACbC,QAAS,CACP,8FACA,6FACA,6FACA,0FACA,uGACA,kEAEFC,OAAQ,EACNC,EAAAA,EAAAA,GAAST,EAAKa,eAAeF,kBAC7BF,EAAAA,EAAAA,GAAST,EAAKc,eAAeH,kBAC7BF,EAAAA,EAAAA,GAAST,EAAKe,eAAeJ,kBAC7BF,EAAAA,EAAAA,GAAST,EAAKgB,eAAeL,kBAG/BM,KAAM,gDAIFC,EAAWlB,EAAKkB,SAASC,MAC7BC,QAAQC,IAAIH,GACZE,QAAQC,IAAI,sBAAuBrB,EAAKsB,SAE1C,MAAMC,EAAY,CAClB,CACEC,KAAM,wIACNC,OAAOhB,EAAAA,EAAAA,GAAST,EAAK0B,aAEvB,CACEF,KAAM,iHACNC,OAAOhB,EAAAA,EAAAA,GAAST,EAAK2B,aAEvB,CACEH,KAAM,+FACNC,OAAOhB,EAAAA,EAAAA,GAAST,EAAK4B,cAIvB,OACE7B,EAAAA,cAAAA,EAAAA,SAAA,KAGEA,EAAAA,cAAC8B,EAAAA,GAAI,CACHC,GAAI,CACFnI,OAAQ,QACRE,MAAO,OACPkI,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,UAAW,SACXC,gBAAiB,aACjBC,GAAI,IAGNrC,EAAAA,cAACsC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAES,SAAU,CAAC,EAAG,EAAG,GAAIC,GAAI,IAAK,kBAIrDzC,EAAAA,cAAC0C,EAAAA,GAAG,CACFX,GAAI,CACFjI,MAAO,IACPF,OAAQ,IACR+I,aAAc,MACdC,SAAU,SACVH,GAAI,IAGNzC,EAAAA,cAAC6C,EAAAA,EAAW,CACVnB,OAAOhB,EAAAA,EAAAA,GAAST,EAAKsB,QAAQX,iBAC7BkC,IAAI,iBACJzH,MAAO,CAAEzB,OAAQ,OAAQE,MAAO,WAGpCkG,EAAAA,cAAC+C,EAAAA,GAAS,CACRC,KAAK,cACLjB,GAAI,CAAES,SAAU,EAAGS,MAAO,UAAWC,eAAgB,cACtD,mBAKHlD,EAAAA,cAAC0C,EAAAA,GAAG,CAACX,GAAI,CAAEoB,GAAI,EAAGd,GAAI,CAAC,EAAG,GAAID,gBAAiB,eAC7CpC,EAAAA,cAACsC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAEU,GAAI,EAAGN,UAAW,WAAY,wBAGpDX,EAAUpD,IAAI,CAACgF,EAAMC,KAClB,MAAMC,EAASD,EAAQ,GAAM,EAC7B,OACArD,EAAAA,cAACuD,EAAAA,GAAI,CACDrG,IAAKmG,EACLG,QAAS,CAAC,EAAG,GACbzB,GAAI,CACJE,WAAY,SACZwB,IAAK,EACLzB,cAAesB,EAAS,MAAQ,cAChCb,GAAI,IAGJzC,EAAAA,cAAC0D,EAAAA,EAAOC,IAAG,CACX3H,QAAS,CAAEd,EAAGoI,GAAU,IAAM,IAAKM,QAAS,GAC5CC,YAAa,CAAE3I,EAAG,EAAG0I,QAAS,GAC9BE,WAAY,CAAEC,SAAU,KAExB/D,EAAAA,cAACgE,EAAAA,GAAI,CAACjC,GAAI,CAAES,SAAU,CAAC,EAAG,GAAIyB,SAAU,MAAQb,EAAK3B,OAGrDzB,EAAAA,cAAC0D,EAAAA,EAAOC,IAAG,CACX3H,QAAS,CAAEd,EAAGoI,EAAS,KAAO,IAAKM,QAAS,GAC5CC,YAAa,CAAE3I,EAAG,EAAG0I,QAAS,GAC9BE,WAAY,CAAEC,SAAU,KAExB/D,EAAAA,cAAC0C,EAAAA,GAAG,CAACX,GAAI,CAAEY,aAAc,EAAGC,SAAU,SAAUsB,UAAW,OACvDlE,EAAAA,cAAC6C,EAAAA,EAAW,CAACnB,MAAO0B,EAAK1B,MAAOoB,IAAI,qBAQlD9C,EAAAA,cAAC0C,EAAAA,GAAG,CAACX,GAAI,CAAEM,GAAI,CAAC,EAAG,GAAIc,GAAI,CAAC,EAAG,GAAIf,gBAAiB,eAClDpC,EAAAA,cAACsC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAEU,GAAI,EAAGN,UAAW,WAAY,cAGrDnC,EAAAA,cAACuD,EAAAA,GAAI,CAACC,QAAS,CAAC,EAAG,EAAG,GAAIC,IAAK,GAC5BtD,EAAY/B,IAAI,CAAC+F,EAAKd,IACrBrD,EAAAA,cAAC0D,EAAAA,EAAOC,IAAG,CACTzG,IAAKmG,EACLrH,QAAS,CAAE4H,QAAS,EAAGQ,EAAG,IAC1BP,YAAa,CAAED,QAAS,EAAGQ,EAAG,GAC9BN,WAAY,CAAEC,SAAU,GAAKM,MAAe,GAARhB,IAEpCrD,EAAAA,cAAC0C,EAAAA,GAAG,CACF4B,QAASA,IAAMvE,EAAaoE,GAC5BpC,GAAI,CACFwC,OAAQ,UACRC,GAAI,QACJ7B,aAAc,EACd8B,EAAG,EACHP,UAAW,KACX/B,UAAW,SACXvI,OAAQ,OACRkK,WAAY,iBACZ,SAAU,CAAEY,UAAW,iBAGzB1E,EAAAA,cAAC0C,EAAAA,GAAG,CACFH,GAAG,MACHoC,IAAKR,EAAI9D,KACTyC,IAAK,GAAGqB,EAAI/D,eACZ2B,GAAI,CAAEnI,OAAQ,GAAI6I,GAAI,KAExBzC,EAAAA,cAACsC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAES,SAAU,EAAGC,GAAI,IAAM0B,EAAI7D,MAClDN,EAAAA,cAACgE,EAAAA,GAAI,CAACjC,GAAI,CAAES,SAAU,EAAGS,MAAO,kBAAoBkB,EAAI/D,QAAQ,MAChEJ,EAAAA,cAACgE,EAAAA,GAAI,CAACjC,GAAI,CAAES,SAAU,EAAGoC,GAAI,IAAMT,EAAI5D,kBAQjDP,EAAAA,cAAClC,EAAe,KACbgC,GACCE,EAAAA,cAAC0D,EAAAA,EAAOC,IAAG,CACT3H,QAAS,CAAE4H,QAAS,GACpBiB,QAAS,CAAEjB,QAAS,GACpBkB,KAAM,CAAElB,QAAS,GACjBvI,MAAO,CACL0J,SAAU,QACVhL,IAAK,EACLE,KAAM,EACNH,MAAO,QACPF,OAAQ,QACRwI,gBAAiB,kBACjB4C,QAAS,OACT9C,eAAgB,SAChBD,WAAY,SACZgD,OAAQ,KAEVX,QAASA,IAAMvE,EAAa,OAE5BC,EAAAA,cAAC0D,EAAAA,EAAOC,IAAG,CACT3H,QAAS,CAAEkJ,MAAO,GAAKd,EAAG,IAC1BS,QAAS,CAAEK,MAAO,EAAGd,EAAG,GACxBU,KAAM,CAAEI,MAAO,GAAKd,EAAG,IACvBN,WAAY,CAAEC,SAAU,IACxBO,QAAUa,GAAMA,EAAEC,kBAClB/J,MAAO,CACLgK,WAAY,QACZ1C,aAAc,OACd2C,QAAS,OACTrB,SAAU,QACVnK,MAAO,MACPyL,UAAW,OACXC,UAAW,OACXT,SAAU,aAGZ/E,EAAAA,cAAA,UACEsE,QAASA,IAAMvE,EAAa,MAC5B1E,MAAO,CACL0J,SAAU,WACVhL,IAAK,GACLI,MAAO,GACPkL,WAAY,cACZI,OAAQ,OACRjD,SAAU,SACV+B,OAAQ,YAEX,KAIDvE,EAAAA,cAACsC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAEU,GAAI,IACxB3C,EAAUQ,KAAK,OAAKR,EAAUM,SAEjCJ,EAAAA,cAAC0C,EAAAA,GAAG,CAACH,GAAG,KAAKR,GAAI,CAAE2D,GAAI,EAAGjD,GAAI,IAC3B3C,EAAUU,QAAQpC,IAAI,CAACuH,EAAM9G,IAC5BmB,EAAAA,cAAA,MAAI9C,IAAK2B,EAAGxD,MAAO,CAAEuK,aAAc,SAAUpD,SAAU,SACpDmD,KAIP3F,EAAAA,cAACuD,EAAAA,GAAI,CAACC,QAAS,CAAC,EAAG,GAAIC,IAAK,EAAG1B,GAAI,CAAE6C,GAAI,IACtC9E,EAAUW,OAAOrC,IAAI,CAACuG,EAAK9F,IAC1BmB,EAAAA,cAAC6C,EAAAA,EAAW,CACV3F,IAAK2B,EACL6C,MAAOiD,EACP7B,IAAK,cAAcjE,IACnBxD,MAAO,CAAEsH,aAAc,SAAUuB,UAAW,iCAIjDpE,EAAUoB,MACTlB,EAAAA,cAAC0C,EAAAA,GAAG,CAACX,GAAI,CAAE6C,GAAI,IACb5E,EAAAA,cAAA,KACEgD,KAAMlD,EAAUoB,KAChB2E,OAAO,SACPC,IAAI,sBACJzK,MAAO,CACLmH,SAAU,OACVS,MAAO,UACPC,eAAgB,cAEnB,iBAUnBlD,EAAAA,cAAC0C,EAAAA,GAAG,CAACX,GAAI,CAAEM,GAAI,CAAC,EAAG,GAAIc,GAAI,CAAC,EAAG,GAAIf,gBAAiB,UAClDpC,EAAAA,cAACsC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAEU,GAAI,IAAK,eAGhCzC,EAAAA,cAACuD,EAAAA,GAAI,CAACC,QAAS,CAAC,EAAG,EAAG,GAAIC,IAAK,GAC5BtC,EAAS/C,IAAK2H,IAAkB,IAADC,EAC9B,MAAMtE,GAAQhB,EAAAA,EAAAA,GAAkC,QAA1BsF,EAACD,EAAQE,YAAYC,aAAK,IAAAF,OAAA,EAAzBA,EAA2BpF,iBAC5CuF,EACJnG,EAAAA,cAAC0C,EAAAA,GAAG,CACFX,GAAI,CACFY,aAAc,EACdC,SAAU,SACV4B,GAAI,aACJN,UAAW,KACXJ,WAAY,iBACZ,SAAU,CAAEY,UAAW,iBAGxBhD,GACC1B,EAAAA,cAAC6C,EAAAA,EAAW,CACVnB,MAAOA,EACPoB,IAAKiD,EAAQE,YAAYG,MACzB/K,MAAO,CAAEzB,OAAQ,OAGrBoG,EAAAA,cAAC0C,EAAAA,GAAG,CAACX,GAAI,CAAE0C,EAAG,IACZzE,EAAAA,cAACsC,EAAAA,GAAO,CAACC,GAAG,KAAKR,GAAI,CAAES,SAAU,IAC9BuD,EAAQE,YAAYG,SAO7B,OAAOL,EAAQE,YAAYI,OACzBrG,EAAAA,cAAC+C,EAAAA,GAAS,CACR7F,IAAK6I,EAAQE,YAAYG,MACzBpD,KAAM+C,EAAQE,YAAYI,OAC1BR,OAAO,SACPC,IAAI,sBACJ/D,GAAI,CAAEmB,eAAgB,OAAQD,MAAO,SAEpCkD,GAGHnG,EAAAA,cAACsG,EAAAA,KAAI,CACHpJ,IAAK6I,EAAQQ,OAAOC,KACpBC,GAAIV,EAAQQ,OAAOC,KACnBzE,GAAI,CAAEmB,eAAgB,OAAQD,MAAO,SAEpCkD,SC5ZX,MCCe,SAA0BO,GAAyD,IAAxD,SAAEpM,KAAapB,GAAsCwN,EAC7F,OAAO1G,EAAAA,cAACH,EAAa3G,EAAQoB,EAC/B,C","sources":["webpack://jodie/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://jodie/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://jodie/./src/@lekoarts/gatsby-theme-jodie/components/homepage.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie-core/src/templates/homepage-query.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/@lekoarts/gatsby-theme-jodie-core/components/homepage.tsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            parent.removeChild(style);\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import * as React from \"react\"\r\nimport { jsx, Box, Heading, Flex, Link as ThemeLink, Grid } from \"theme-ui\"\r\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\n// import { Box, Grid, Heading, Text } from \"theme-ui\"\r\nimport { Text } from \"theme-ui\"\r\n\r\n// import SEO from \"./seo\"\r\n\r\nconst Homepage = () => {\r\n  // Use useStaticQuery here instead of props.data\r\n  const [activeExp, setActiveExp] = React.useState(null)\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      profile: file(relativePath: { eq: \"profile.PNG\" }) {\r\n        childImageSharp {\r\n          gatsbyImageData(layout: FIXED, width: 200, height: 200, placeholder: BLURRED)\r\n        }\r\n      }\r\n      projects: allMdx(\r\n        filter: { frontmatter: { category: { eq: \"Project\" } } }\r\n        sort: { frontmatter: { date: DESC } }\r\n      ) {\r\n        nodes {\r\n          frontmatter {\r\n            title\r\n            github\r\n            cover {\r\n              childImageSharp {\r\n                gatsbyImageData(layout: CONSTRAINED, width: 600, placeholder: BLURRED)\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n      fact1Image: file(relativePath: { eq: \"runningcape.JPG\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n      }\r\n        }\r\n        fact2Image: file(relativePath: { eq: \"hiking.jpg\" }) {\r\n        childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n        }\r\n        }\r\n        fact3Image: file(relativePath: { eq: \"mountainbike.jpg\" }) {\r\n        childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n        }\r\n        }\r\n        evolveImage1: file(relativePath: { eq: \"interns.JPG\" }) {\r\n        childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n        }\r\n        }\r\n        evolveImage2: file(relativePath: { eq: \"batterieslearn.JPG\" }) {\r\n        childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n        }\r\n        }\r\n        researchImage1: file(relativePath: { eq: \"qrgenerator1.png\" }) {\r\n        childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n        }\r\n        }\r\n        researchImage2: file(relativePath: { eq: \"qrwebsite1.png\" }) {\r\n        childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n        }\r\n        }\r\n        researchImage3: file(relativePath: { eq: \"qrgenerator2.png\" }) {\r\n        childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n        }\r\n        }\r\n        researchImage4: file(relativePath: { eq: \"qrwebsite2.png\" }) {\r\n        childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED, width: 500)\r\n        }\r\n        }\r\n    }\r\n  `)\r\n  const experiences = [\r\n  {\r\n    company: \"Evolve BGS\",\r\n    logo: \"/evolve_logo.png\",\r\n    role: \"Energy Systems Intern\",\r\n    description: \"Worked on virtual power plant integration and smart load control.\",\r\n    details: [\r\n      \"Developed robust solar energy data pipelines using pandas and PostgreSQL\",\r\n      \"Implemented statistical smoothing and curve fitting with scipy to model solar irradiance\",\r\n      \"Engineered derived metrics such as excess and cumulative energy to enhance performance analysis\",\r\n      \"Evaluated and integrated external solar radiation APIs to optimize forecasting accuracy\",\r\n      \"Automated remote data acquisition and preprocessing with custom Python scripting\"\r\n    ],\r\n    images: [\r\n      getImage(data.evolveImage1.childImageSharp),\r\n      getImage(data.evolveImage2.childImageSharp),\r\n    ],\r\n  },\r\n  {\r\n    company: \"Tomas Palacios Group (MIT)\",\r\n    logo: \"/mitlogo.png\",\r\n    role: \"Undergraduate Researcher\",\r\n    description: \"Created full-stack applications for sample design automation.\",\r\n    details: [\r\n      \"Generated GDSII files with spatially encoded QR codes for precise on-chip position tracking\",\r\n      \"Allowed user-defined chip size, QR code dimensions, spacing, and error correction settings\",\r\n      \"Included optional human-readable coordinate labels and absolute/relative positioning modes\",\r\n      \"Supported both command-line and GUI workflows for flexible, user-friendly configuration\",\r\n      \"Created a full stack website to display sample images associated to relative position of the QR code\",\r\n      \"Supports multiple GDSII files at a time with different formats\",\r\n    ],\r\n    images: [\r\n      getImage(data.researchImage1.childImageSharp),\r\n      getImage(data.researchImage2.childImageSharp),\r\n      getImage(data.researchImage3.childImageSharp),\r\n      getImage(data.researchImage4.childImageSharp),\r\n\r\n    ],\r\n    link: \"https://www.youtube.com/watch?v=PEwDqPPp-_w\", // <-- Add your website URL here\r\n\r\n  },\r\n]\r\n  const projects = data.projects.nodes\r\n    console.log(projects)\r\n    console.log(\"Profile image data:\", data.profile)\r\n\r\n  const factsData = [\r\n  {\r\n    text: \"I love running and am a middle-distance runner on the MIT cross country and track teams. I especially enjoy running in the mountains.\",\r\n    image: getImage(data.fact1Image),\r\n  },\r\n  {\r\n    text: \"I also love hiking and resetting in nature. I often go on camping trips with my family to the Rocky Mountains.\",\r\n    image: getImage(data.fact2Image),\r\n  },\r\n  {\r\n    text: \"I also like other active activities like mountain biking as long as I don't fall too hard...\",\r\n    image: getImage(data.fact3Image),\r\n  },\r\n]\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* Full-screen intro */}\r\n      <Flex\r\n        sx={{\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          textAlign: \"center\",\r\n          backgroundColor: \"background\",\r\n          px: 3,\r\n        }}\r\n      >\r\n        <Heading as=\"h1\" sx={{ fontSize: [5, 6, 7], mb: 3 }}>\r\n          Hi, I'm Landon\r\n        </Heading>\r\n\r\n        <Box\r\n          sx={{\r\n            width: 200,\r\n            height: 200,\r\n            borderRadius: \"50%\",\r\n            overflow: \"hidden\",\r\n            mb: 4,\r\n          }}\r\n        >\r\n          <GatsbyImage\r\n            image={getImage(data.profile.childImageSharp)}\r\n            alt=\"Landon's photo\"\r\n            style={{ height: \"100%\", width: \"100%\" }}\r\n          />\r\n        </Box>\r\n        <ThemeLink\r\n          href=\"/resume.pdf\"\r\n          sx={{ fontSize: 2, color: \"primary\", textDecoration: \"underline\" }}\r\n        >\r\n          View my resume\r\n        </ThemeLink>\r\n      </Flex>\r\n      {/* About me section */}\r\n      <Box sx={{ py: 5, px: [3, 4], backgroundColor: \"background\" }}>\r\n        <Heading as=\"h2\" sx={{ mb: 4, textAlign: \"center\" }}>\r\n            A Few Facts About Me\r\n        </Heading>\r\n        {factsData.map((fact, index) => {\r\n            const isEven = index % 2 === 0\r\n            return (\r\n            <Grid\r\n                key={index}\r\n                columns={[1, 2]}\r\n                sx={{\r\n                alignItems: \"center\",\r\n                gap: 4,\r\n                flexDirection: isEven ? \"row\" : \"row-reverse\",\r\n                mb: 5,\r\n                }}\r\n            >\r\n                <motion.div\r\n                initial={{ x: isEven ? -100 : 100, opacity: 0 }}\r\n                whileInView={{ x: 0, opacity: 1 }}\r\n                transition={{ duration: 0.6 }}\r\n                >\r\n                <Text sx={{ fontSize: [2, 3], maxWidth: 500 }}>{fact.text}</Text>\r\n                </motion.div>\r\n\r\n                <motion.div\r\n                initial={{ x: isEven ? 100 : -100, opacity: 0 }}\r\n                whileInView={{ x: 0, opacity: 1 }}\r\n                transition={{ duration: 0.6 }}\r\n                >\r\n                <Box sx={{ borderRadius: 4, overflow: \"hidden\", boxShadow: \"lg\" }}>\r\n                    <GatsbyImage image={fact.image} alt=\"fact image\" />\r\n                </Box>\r\n                </motion.div>\r\n            </Grid>\r\n            )\r\n        })}\r\n        </Box>\r\n      {/* Experience section */}\r\n      <Box sx={{ px: [3, 4], py: [4, 5], backgroundColor: \"background\" }}>\r\n        <Heading as=\"h2\" sx={{ mb: 4, textAlign: \"center\" }}>\r\n          Experience\r\n        </Heading>\r\n        <Grid columns={[1, 2, 3]} gap={4}>\r\n          {experiences.map((exp, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial={{ opacity: 0, y: 30 }}\r\n              whileInView={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.6, delay: index * 0.1 }}\r\n            >\r\n              <Box\r\n                onClick={() => setActiveExp(exp)}\r\n                sx={{\r\n                  cursor: \"pointer\",\r\n                  bg: \"muted\",\r\n                  borderRadius: 4,\r\n                  p: 3,\r\n                  boxShadow: \"md\",\r\n                  textAlign: \"center\",\r\n                  height: \"100%\",\r\n                  transition: \"transform 0.2s\",\r\n                  \":hover\": { transform: \"scale(1.03)\" },\r\n                }}\r\n              >\r\n                <Box\r\n                  as=\"img\"\r\n                  src={exp.logo}\r\n                  alt={`${exp.company} logo`}\r\n                  sx={{ height: 60, mb: 3 }}\r\n                />\r\n                <Heading as=\"h3\" sx={{ fontSize: 3, mb: 2 }}>{exp.role}</Heading>\r\n                <Text sx={{ fontSize: 2, color: \"textSecondary\" }}>{exp.company}: </Text>\r\n                <Text sx={{ fontSize: 1, mt: 2 }}>{exp.description}</Text>\r\n              </Box>\r\n            </motion.div>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n\r\n      {/* Animated Modal for Experience */}\r\n      <AnimatePresence>\r\n        {activeExp && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            style={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100vw\",\r\n              height: \"100vh\",\r\n              backgroundColor: \"rgba(0,0,0,0.5)\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              zIndex: 999,\r\n            }}\r\n            onClick={() => setActiveExp(null)} // Close on background click\r\n          >\r\n            <motion.div\r\n              initial={{ scale: 0.9, y: 50 }}\r\n              animate={{ scale: 1, y: 0 }}\r\n              exit={{ scale: 0.9, y: 50 }}\r\n              transition={{ duration: 0.3 }}\r\n              onClick={(e) => e.stopPropagation()}\r\n              style={{\r\n                background: \"white\",\r\n                borderRadius: \"1rem\",\r\n                padding: \"2rem\",\r\n                maxWidth: \"800px\",\r\n                width: \"90%\",\r\n                maxHeight: \"80vh\",\r\n                overflowY: \"auto\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <button\r\n                onClick={() => setActiveExp(null)}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 10,\r\n                  right: 15,\r\n                  background: \"transparent\",\r\n                  border: \"none\",\r\n                  fontSize: \"1.5rem\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                ✕\r\n              </button>\r\n\r\n              <Heading as=\"h3\" sx={{ mb: 3 }}>\r\n                {activeExp.role} at {activeExp.company}\r\n              </Heading>\r\n              <Box as=\"ul\" sx={{ pl: 4, mb: 3 }}>\r\n                {activeExp.details.map((line, i) => (\r\n                  <li key={i} style={{ marginBottom: \"0.5rem\", fontSize: \"1rem\" }}>\r\n                    {line}\r\n                  </li>\r\n                ))}\r\n              </Box>\r\n              <Grid columns={[1, 2]} gap={3} sx={{ mt: 3 }}>\r\n                {activeExp.images.map((src, i) => (\r\n                  <GatsbyImage\r\n                    key={i}\r\n                    image={src}\r\n                    alt={`Screenshot ${i}`}\r\n                    style={{ borderRadius: \"0.5rem\", boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\" }}\r\n                  />\r\n                ))}\r\n              </Grid>\r\n              {activeExp.link && (\r\n                <Box sx={{ mt: 4 }}>\r\n                  <a\r\n                    href={activeExp.link}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    style={{\r\n                      fontSize: \"1rem\",\r\n                      color: \"#007acc\", // or use theme colors if you prefer\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    View Demo\r\n                  </a>\r\n                </Box>\r\n              )}\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n      {/* Projects section */}\r\n<Box sx={{ px: [3, 4], py: [4, 5], backgroundColor: \"muted\" }}>\r\n  <Heading as=\"h2\" sx={{ mb: 4 }}>\r\n    My Projects\r\n  </Heading>\r\n  <Grid columns={[1, 2, 3]} gap={4}>\r\n    {projects.map((project: any) => {\r\n      const image = getImage(project.frontmatter.cover?.childImageSharp)\r\n      const content = (\r\n        <Box\r\n          sx={{\r\n            borderRadius: 4,\r\n            overflow: \"hidden\",\r\n            bg: \"background\",\r\n            boxShadow: \"lg\",\r\n            transition: \"transform 0.2s\",\r\n            \":hover\": { transform: \"scale(1.02)\" },\r\n          }}\r\n        >\r\n          {image && (\r\n            <GatsbyImage\r\n              image={image}\r\n              alt={project.frontmatter.title}\r\n              style={{ height: 200 }}\r\n            />\r\n          )}\r\n          <Box sx={{ p: 3 }}>\r\n            <Heading as=\"h3\" sx={{ fontSize: 3 }}>\r\n              {project.frontmatter.title}\r\n            </Heading>\r\n          </Box>\r\n        </Box>\r\n      )\r\n\r\n      // Conditional wrapper: GitHub link or internal Link\r\n      return project.frontmatter.github ? (\r\n        <ThemeLink\r\n          key={project.frontmatter.title}\r\n          href={project.frontmatter.github}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          sx={{ textDecoration: \"none\", color: \"text\" }}\r\n        >\r\n          {content}\r\n        </ThemeLink>\r\n      ) : (\r\n        <Link\r\n          key={project.fields.slug}\r\n          to={project.fields.slug}\r\n          sx={{ textDecoration: \"none\", color: \"text\" }}\r\n        >\r\n          {content}\r\n        </Link>\r\n      )\r\n    })}\r\n  </Grid>\r\n</Box>\r\n</>\r\n  )}\r\nexport default Homepage\r\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($homepagePageLimit: Int!, $homepageProjectLimit: Int!) {\n    pages: allPage(sort: { title: ASC }, limit: $homepagePageLimit) {\n      nodes {\n        slug\n        title\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 1200, quality: 90, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n        __typename\n      }\n    }\n    projects: allProject(sort: { date: DESC }, limit: $homepageProjectLimit) {\n      nodes {\n        slug\n        title: shortTitle\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 1200, quality: 90, formats: [AUTO, WEBP, AVIF])\n          }\n        }\n        __typename\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport Homepage, { Head, JodieHomepageProps } from \"../../../components/homepage\"\n\nexport default function JodieCoreHomepage({ children, ...props }: PageProps<JodieHomepageProps>) {\n  return <Homepage {...props}>{children}</Homepage>\n}\n\nexport { Head }\n"],"names":["PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","parent","offsetParent","parentWidth","offsetWidth","size","sizeRef","height","offsetHeight","width","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","root","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","x","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","contains","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","context","useMemo","childId","set","isComplete","values","register","delete","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","L","Fragment","undefined","has","isEveryExitComplete","isExitComplete","Homepage","activeExp","setActiveExp","React","data","useStaticQuery","experiences","company","logo","role","description","details","images","getImage","evolveImage1","childImageSharp","evolveImage2","researchImage1","researchImage2","researchImage3","researchImage4","link","projects","nodes","console","log","profile","factsData","text","image","fact1Image","fact2Image","fact3Image","Flex","sx","flexDirection","alignItems","justifyContent","textAlign","backgroundColor","px","Heading","as","fontSize","mb","Box","borderRadius","overflow","GatsbyImage","alt","ThemeLink","href","color","textDecoration","py","fact","index","isEven","Grid","columns","gap","motion","div","opacity","whileInView","transition","duration","Text","maxWidth","boxShadow","exp","y","delay","onClick","cursor","bg","p","transform","src","mt","animate","exit","position","display","zIndex","scale","e","stopPropagation","background","padding","maxHeight","overflowY","border","pl","line","marginBottom","target","rel","project","_project$frontmatter$","frontmatter","cover","content","title","github","Link","fields","slug","to","_ref"],"sourceRoot":""}