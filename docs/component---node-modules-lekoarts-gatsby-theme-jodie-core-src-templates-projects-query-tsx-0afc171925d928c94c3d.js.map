{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-jodie-core-src-templates-projects-query-tsx-0afc171925d928c94c3d.js","mappings":"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","sources":["webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/seo.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/grid-item.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/locales/index.ts","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/components/projects.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie-core/src/templates/projects-query.tsx","webpack://jodie/./node_modules/@lekoarts/gatsby-theme-jodie/src/@lekoarts/gatsby-theme-jodie-core/components/projects.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype Props = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n}\n\nconst Seo = ({ title = ``, description = ``, pathname = ``, image = ``, children = null }: Props) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-jodie\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx, get } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst GridItem: React.FC<React.PropsWithChildren<{ to: string; className?: string }>> = ({\n  children,\n  to,\n  ...props\n}) => (\n  <Link\n    to={to}\n    sx={{\n      position: `relative`,\n      // @ts-ignore\n      \"> div\": {\n        position: `absolute !important`,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n      },\n      \"> div:before\": {\n        position: `absolute`,\n        content: `''`,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 5,\n        background: `linear-gradient(45deg, rgba(22,22,22,0) 75%, rgba(0,0,0,0.35) 100%)`,\n      },\n      \"> div:after\": {\n        position: `absolute`,\n        content: `''`,\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        boxShadow: (t) => `inset 0 0 0 0px ${get(t, `colors.white`)}`,\n        transition: `all 0.3s ease-in-out`,\n      },\n      \"> div img\": {\n        transition: `all 0.3s ease 0s !important`,\n      },\n      \"> span\": {\n        zIndex: 10,\n        color: `white`,\n        position: `absolute`,\n        left: 0,\n        right: 0,\n        textAlign: `right`,\n        fontWeight: `bold`,\n        fontSize: [3, 4, 5],\n        padding: 3,\n        textShadow: `0 1px 4px rgba(0, 0, 0, 0.5)`,\n      },\n      \"&:hover\": {\n        \"> div img\": {\n          transform: `scale(1.05)`,\n        },\n      },\n      \"&:focus\": {\n        outline: `none`,\n        \"> div:after\": {\n          boxShadow: (t) => `inset 0 0 0 7px ${get(t, `colors.white`)}`,\n          zIndex: 10,\n        },\n      },\n      \"@media screen and (prefers-reduced-motion: reduce)\": {\n        \"&:hover\": {\n          \"> div img\": {\n            transform: `scale(1)`,\n          },\n          \"> div:after\": {\n            boxShadow: (t) => `inset 0 0 0 7px ${get(t, `colors.white`)}`,\n            zIndex: 10,\n          },\n        },\n      },\n      variant: `grid-item`,\n    }}\n    {...props}\n  >\n    {children}\n  </Link>\n)\n\nexport default GridItem\n","const locales = {\n  home: `Home`,\n  projects: `Projects`,\n  instagram: `Instagram`,\n}\n\nexport default locales\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport { IGatsbyImageData, GatsbyImage } from \"gatsby-plugin-image\"\nimport Layout from \"./layout\"\nimport Seo from \"./seo\"\nimport GridItem from \"./grid-item\"\nimport locales from \"../locales\"\nimport { visuallyHidden } from \"../styles/utils\"\n\nexport type JodieProjectsProps = {\n  projects: {\n    nodes: {\n      shortTitle: string\n      slug: string\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: IGatsbyImageData\n        }\n      }\n    }[]\n  }\n}\n\nconst Projects: React.FC<PageProps<JodieProjectsProps>> = ({ data: { projects } }) => (\n  <Layout>\n    <h1 sx={visuallyHidden} data-testid=\"page-title\">\n      {locales.projects}\n    </h1>\n    <div\n      sx={{\n        display: `grid`,\n        gridTemplateColumns: [`1fr`, `1fr 1fr`],\n        gridAutoRows: `50vw`,\n      }}\n    >\n      {projects.nodes.length > 0 ? (\n        projects.nodes.map((project) => (\n          <GridItem to={project.slug} key={project.slug} data-testid={project.shortTitle}>\n            <GatsbyImage image={project.cover.childImageSharp.gatsbyImageData} alt=\"\" />\n            <span>{project.shortTitle}</span>\n          </GridItem>\n        ))\n      ) : (\n        <div sx={{ padding: 3 }}>No projects found at the location defined for \"projectsPath\"</div>\n      )}\n    </div>\n  </Layout>\n)\n\nexport default Projects\n\nexport const Head: HeadFC<JodieProjectsProps> = ({ location }) => <Seo title=\"Projects\" pathname={location.pathname} />\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent, { Head } from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport { Head }\n\nexport const query = graphql`\n  {\n    projects: allProject(sort: { date: DESC }) {\n      nodes {\n        shortTitle\n        slug\n        cover {\n          childImageSharp {\n            gatsbyImageData(width: 1200, quality: 90)\n          }\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport Projects, { Head, JodieProjectsProps } from \"../../../components/projects\"\n\nexport default function JodieCoreProjects({ children, ...props }: PageProps<JodieProjectsProps>) {\n  return <Projects {...props}>{children}</Projects>\n}\n\nexport { Head }\n"],"names":["_ref","title","description","pathname","image","children","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","React","lang","name","content","property","rel","type","sizes","href","withPrefix","to","props","jsx","Link","Object","assign","sx","position","top","right","bottom","left","zIndex","background","boxShadow","t","get","transition","color","textAlign","fontWeight","fontSize","padding","textShadow","transform","outline","variant","home","projects","instagram","data","Layout","visuallyHidden","locales","display","gridTemplateColumns","gridAutoRows","nodes","length","map","project","GridItem","slug","key","shortTitle","GatsbyImage","cover","childImageSharp","gatsbyImageData","alt","Head","_ref2","location","Seo","Projects"],"sourceRoot":""}